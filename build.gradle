plugins {
    id "com.google.protobuf" version "0.8.12"
    id "com.diffplug.gradle.spotless" version "4.5.1"
    id 'ru.vyarus.use-python' version '2.2.0'
    id "org.openapi.generator" version "4.3.1"
    id 'com.bmuschko.docker-remote-api' version '6.6.1'
    id "java"
    id 'jacoco'
    id 'org.springframework.boot' version '2.3.3.RELEASE' apply false
}

allprojects {
    group = 'dev.feast'
}

ext {
    springBootProjects = [
            project(":feast-core"),
            project(":feast-serving")
    ]
}


subprojects { project ->
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: "com.diffplug.gradle.spotless"
    apply plugin: "jacoco"

    if (project in springBootProjects) {
        apply plugin: 'org.springframework.boot'
        springBoot {
            buildInfo()
        }

        bootJar {
            classifier = 'all'
        }

        configurations {
            shadow
        }

        dependencies{
            shadow files(bootJar.archivePath)
        }

        build.dependsOn bootJar
    }

    test {
        finalizedBy jacocoTestReport // report is always generated after tests run
    }

    jacocoTestReport {
        dependsOn test // tests are required to run before generating the report
        reports {
            xml.enabled false
            csv.enabled false
            html.enabled true
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url = uri('https://repo.maven.apache.org/maven2')
        }

        maven {
            url = uri('https://repo.spring.io/plugins-release')
        }
    }

    sourceCompatibility = '1.11'

    configurations.all {
    }

    java {
        withSourcesJar()
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from(components.java)
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    spotless {
        groovyGradle {
            greclipse().configFile("$rootDir/greclipse.properties")
        }
        java {
            target project.fileTree(project.projectDir) {
               include "src/**/*.java"
            }
            googleJavaFormat()
        }
    }

    configurations {
        all*.exclude module : 'spring-boot-starter-logging'
    }
}
