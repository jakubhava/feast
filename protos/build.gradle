description = 'Feast Protos'
apply plugin: 'com.google.protobuf'

dependencies {
  compile "com.google.protobuf:protobuf-java:${protobufVersion}"
  compile "io.grpc:grpc-stub:${grpcVersion}"
  compile "io.grpc:grpc-protobuf:${grpcVersion}"
  compile 'javax.annotation:javax.annotation-api:1.3.1'
}

task grpcPythonCore(type: Exec) {
  workingDir "${projectDir}/src/main/proto"
  commandLine 'bash', '-c', "python -m grpc_tools.protoc -I. --grpc_python_out=../../../gen/main/python/ feast/core/*.proto"
}

task grpcPythonServing(type: Exec) {
  workingDir "${projectDir}/src/main/proto"
  commandLine 'bash', '-c', "python -m grpc_tools.protoc -I. --grpc_python_out=../../../gen/main/python/ feast/serving/*.proto"
}

protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:${protobufVersion}"
  }
  plugins {
    grpc {
      artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
    }
  }
  generateProtoTasks {
    all().each { task ->
      task.plugins {
        grpc {
          outputSubDir = 'java'
        }
      }

      task.builtins {
        python {}
        java {}
      }
    }
  }
  generatedFilesBaseDir = "$projectDir/gen"
}


build.dependsOn grpcPythonServing
build.dependsOn grpcPythonCore

clean {
  delete protobuf.generatedFilesBaseDir
}

sourceSets {
  main {
    java {
      srcDir "${projectDir}/gen/main/java"
    }
  }
}

java {
  withJavadocJar()
}
