// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_metadata/proto/v0/schema.proto

package org.tensorflow.metadata.v0;

/**
 * <pre>
 * Message to represent schema information.
 * NextID: 14
 * </pre>
 *
 * Protobuf type {@code tensorflow.metadata.v0.Schema}
 */
public final class Schema extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tensorflow.metadata.v0.Schema)
    SchemaOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Schema.newBuilder() to construct.
  private Schema(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Schema() {
    feature_ = java.util.Collections.emptyList();
    sparseFeature_ = java.util.Collections.emptyList();
    weightedFeature_ = java.util.Collections.emptyList();
    stringDomain_ = java.util.Collections.emptyList();
    floatDomain_ = java.util.Collections.emptyList();
    intDomain_ = java.util.Collections.emptyList();
    defaultEnvironment_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Schema();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Schema(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              feature_ = new java.util.ArrayList<org.tensorflow.metadata.v0.Feature>();
              mutable_bitField0_ |= 0x00000001;
            }
            feature_.add(
                input.readMessage(org.tensorflow.metadata.v0.Feature.PARSER, extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              stringDomain_ = new java.util.ArrayList<org.tensorflow.metadata.v0.StringDomain>();
              mutable_bitField0_ |= 0x00000008;
            }
            stringDomain_.add(
                input.readMessage(org.tensorflow.metadata.v0.StringDomain.PARSER, extensionRegistry));
            break;
          }
          case 42: {
            com.google.protobuf.ByteString bs = input.readBytes();
            if (!((mutable_bitField0_ & 0x00000040) != 0)) {
              defaultEnvironment_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000040;
            }
            defaultEnvironment_.add(bs);
            break;
          }
          case 50: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              sparseFeature_ = new java.util.ArrayList<org.tensorflow.metadata.v0.SparseFeature>();
              mutable_bitField0_ |= 0x00000002;
            }
            sparseFeature_.add(
                input.readMessage(org.tensorflow.metadata.v0.SparseFeature.PARSER, extensionRegistry));
            break;
          }
          case 66: {
            org.tensorflow.metadata.v0.Annotation.Builder subBuilder = null;
            if (((bitField0_ & 0x00000001) != 0)) {
              subBuilder = annotation_.toBuilder();
            }
            annotation_ = input.readMessage(org.tensorflow.metadata.v0.Annotation.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(annotation_);
              annotation_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000001;
            break;
          }
          case 74: {
            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
              floatDomain_ = new java.util.ArrayList<org.tensorflow.metadata.v0.FloatDomain>();
              mutable_bitField0_ |= 0x00000010;
            }
            floatDomain_.add(
                input.readMessage(org.tensorflow.metadata.v0.FloatDomain.PARSER, extensionRegistry));
            break;
          }
          case 82: {
            if (!((mutable_bitField0_ & 0x00000020) != 0)) {
              intDomain_ = new java.util.ArrayList<org.tensorflow.metadata.v0.IntDomain>();
              mutable_bitField0_ |= 0x00000020;
            }
            intDomain_.add(
                input.readMessage(org.tensorflow.metadata.v0.IntDomain.PARSER, extensionRegistry));
            break;
          }
          case 90: {
            org.tensorflow.metadata.v0.DatasetConstraints.Builder subBuilder = null;
            if (((bitField0_ & 0x00000002) != 0)) {
              subBuilder = datasetConstraints_.toBuilder();
            }
            datasetConstraints_ = input.readMessage(org.tensorflow.metadata.v0.DatasetConstraints.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(datasetConstraints_);
              datasetConstraints_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000002;
            break;
          }
          case 98: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              weightedFeature_ = new java.util.ArrayList<org.tensorflow.metadata.v0.WeightedFeature>();
              mutable_bitField0_ |= 0x00000004;
            }
            weightedFeature_.add(
                input.readMessage(org.tensorflow.metadata.v0.WeightedFeature.PARSER, extensionRegistry));
            break;
          }
          case 106: {
            if (!((mutable_bitField0_ & 0x00000200) != 0)) {
              tensorRepresentationGroup_ = com.google.protobuf.MapField.newMapField(
                  TensorRepresentationGroupDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000200;
            }
            com.google.protobuf.MapEntry<java.lang.String, org.tensorflow.metadata.v0.TensorRepresentationGroup>
            tensorRepresentationGroup__ = input.readMessage(
                TensorRepresentationGroupDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            tensorRepresentationGroup_.getMutableMap().put(
                tensorRepresentationGroup__.getKey(), tensorRepresentationGroup__.getValue());
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        feature_ = java.util.Collections.unmodifiableList(feature_);
      }
      if (((mutable_bitField0_ & 0x00000008) != 0)) {
        stringDomain_ = java.util.Collections.unmodifiableList(stringDomain_);
      }
      if (((mutable_bitField0_ & 0x00000040) != 0)) {
        defaultEnvironment_ = defaultEnvironment_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        sparseFeature_ = java.util.Collections.unmodifiableList(sparseFeature_);
      }
      if (((mutable_bitField0_ & 0x00000010) != 0)) {
        floatDomain_ = java.util.Collections.unmodifiableList(floatDomain_);
      }
      if (((mutable_bitField0_ & 0x00000020) != 0)) {
        intDomain_ = java.util.Collections.unmodifiableList(intDomain_);
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        weightedFeature_ = java.util.Collections.unmodifiableList(weightedFeature_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.tensorflow.metadata.v0.SchemaOuterClass.internal_static_tensorflow_metadata_v0_Schema_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 13:
        return internalGetTensorRepresentationGroup();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.tensorflow.metadata.v0.SchemaOuterClass.internal_static_tensorflow_metadata_v0_Schema_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.tensorflow.metadata.v0.Schema.class, org.tensorflow.metadata.v0.Schema.Builder.class);
  }

  private int bitField0_;
  public static final int FEATURE_FIELD_NUMBER = 1;
  private java.util.List<org.tensorflow.metadata.v0.Feature> feature_;
  /**
   * <pre>
   * Features described in this schema.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
   */
  @java.lang.Override
  public java.util.List<org.tensorflow.metadata.v0.Feature> getFeatureList() {
    return feature_;
  }
  /**
   * <pre>
   * Features described in this schema.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.tensorflow.metadata.v0.FeatureOrBuilder> 
      getFeatureOrBuilderList() {
    return feature_;
  }
  /**
   * <pre>
   * Features described in this schema.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
   */
  @java.lang.Override
  public int getFeatureCount() {
    return feature_.size();
  }
  /**
   * <pre>
   * Features described in this schema.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
   */
  @java.lang.Override
  public org.tensorflow.metadata.v0.Feature getFeature(int index) {
    return feature_.get(index);
  }
  /**
   * <pre>
   * Features described in this schema.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
   */
  @java.lang.Override
  public org.tensorflow.metadata.v0.FeatureOrBuilder getFeatureOrBuilder(
      int index) {
    return feature_.get(index);
  }

  public static final int SPARSE_FEATURE_FIELD_NUMBER = 6;
  private java.util.List<org.tensorflow.metadata.v0.SparseFeature> sparseFeature_;
  /**
   * <pre>
   * Sparse features described in this schema.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
   */
  @java.lang.Override
  public java.util.List<org.tensorflow.metadata.v0.SparseFeature> getSparseFeatureList() {
    return sparseFeature_;
  }
  /**
   * <pre>
   * Sparse features described in this schema.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.tensorflow.metadata.v0.SparseFeatureOrBuilder> 
      getSparseFeatureOrBuilderList() {
    return sparseFeature_;
  }
  /**
   * <pre>
   * Sparse features described in this schema.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
   */
  @java.lang.Override
  public int getSparseFeatureCount() {
    return sparseFeature_.size();
  }
  /**
   * <pre>
   * Sparse features described in this schema.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
   */
  @java.lang.Override
  public org.tensorflow.metadata.v0.SparseFeature getSparseFeature(int index) {
    return sparseFeature_.get(index);
  }
  /**
   * <pre>
   * Sparse features described in this schema.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
   */
  @java.lang.Override
  public org.tensorflow.metadata.v0.SparseFeatureOrBuilder getSparseFeatureOrBuilder(
      int index) {
    return sparseFeature_.get(index);
  }

  public static final int WEIGHTED_FEATURE_FIELD_NUMBER = 12;
  private java.util.List<org.tensorflow.metadata.v0.WeightedFeature> weightedFeature_;
  /**
   * <pre>
   * Weighted features described in this schema.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
   */
  @java.lang.Override
  public java.util.List<org.tensorflow.metadata.v0.WeightedFeature> getWeightedFeatureList() {
    return weightedFeature_;
  }
  /**
   * <pre>
   * Weighted features described in this schema.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.tensorflow.metadata.v0.WeightedFeatureOrBuilder> 
      getWeightedFeatureOrBuilderList() {
    return weightedFeature_;
  }
  /**
   * <pre>
   * Weighted features described in this schema.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
   */
  @java.lang.Override
  public int getWeightedFeatureCount() {
    return weightedFeature_.size();
  }
  /**
   * <pre>
   * Weighted features described in this schema.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
   */
  @java.lang.Override
  public org.tensorflow.metadata.v0.WeightedFeature getWeightedFeature(int index) {
    return weightedFeature_.get(index);
  }
  /**
   * <pre>
   * Weighted features described in this schema.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
   */
  @java.lang.Override
  public org.tensorflow.metadata.v0.WeightedFeatureOrBuilder getWeightedFeatureOrBuilder(
      int index) {
    return weightedFeature_.get(index);
  }

  public static final int STRING_DOMAIN_FIELD_NUMBER = 4;
  private java.util.List<org.tensorflow.metadata.v0.StringDomain> stringDomain_;
  /**
   * <pre>
   * declared as top-level features in &lt;feature&gt;.
   * String domains referenced in the features.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
   */
  @java.lang.Override
  public java.util.List<org.tensorflow.metadata.v0.StringDomain> getStringDomainList() {
    return stringDomain_;
  }
  /**
   * <pre>
   * declared as top-level features in &lt;feature&gt;.
   * String domains referenced in the features.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.tensorflow.metadata.v0.StringDomainOrBuilder> 
      getStringDomainOrBuilderList() {
    return stringDomain_;
  }
  /**
   * <pre>
   * declared as top-level features in &lt;feature&gt;.
   * String domains referenced in the features.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
   */
  @java.lang.Override
  public int getStringDomainCount() {
    return stringDomain_.size();
  }
  /**
   * <pre>
   * declared as top-level features in &lt;feature&gt;.
   * String domains referenced in the features.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
   */
  @java.lang.Override
  public org.tensorflow.metadata.v0.StringDomain getStringDomain(int index) {
    return stringDomain_.get(index);
  }
  /**
   * <pre>
   * declared as top-level features in &lt;feature&gt;.
   * String domains referenced in the features.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
   */
  @java.lang.Override
  public org.tensorflow.metadata.v0.StringDomainOrBuilder getStringDomainOrBuilder(
      int index) {
    return stringDomain_.get(index);
  }

  public static final int FLOAT_DOMAIN_FIELD_NUMBER = 9;
  private java.util.List<org.tensorflow.metadata.v0.FloatDomain> floatDomain_;
  /**
   * <pre>
   * top level float domains that can be reused by features
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
   */
  @java.lang.Override
  public java.util.List<org.tensorflow.metadata.v0.FloatDomain> getFloatDomainList() {
    return floatDomain_;
  }
  /**
   * <pre>
   * top level float domains that can be reused by features
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.tensorflow.metadata.v0.FloatDomainOrBuilder> 
      getFloatDomainOrBuilderList() {
    return floatDomain_;
  }
  /**
   * <pre>
   * top level float domains that can be reused by features
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
   */
  @java.lang.Override
  public int getFloatDomainCount() {
    return floatDomain_.size();
  }
  /**
   * <pre>
   * top level float domains that can be reused by features
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
   */
  @java.lang.Override
  public org.tensorflow.metadata.v0.FloatDomain getFloatDomain(int index) {
    return floatDomain_.get(index);
  }
  /**
   * <pre>
   * top level float domains that can be reused by features
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
   */
  @java.lang.Override
  public org.tensorflow.metadata.v0.FloatDomainOrBuilder getFloatDomainOrBuilder(
      int index) {
    return floatDomain_.get(index);
  }

  public static final int INT_DOMAIN_FIELD_NUMBER = 10;
  private java.util.List<org.tensorflow.metadata.v0.IntDomain> intDomain_;
  /**
   * <pre>
   * top level int domains that can be reused by features
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
   */
  @java.lang.Override
  public java.util.List<org.tensorflow.metadata.v0.IntDomain> getIntDomainList() {
    return intDomain_;
  }
  /**
   * <pre>
   * top level int domains that can be reused by features
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.tensorflow.metadata.v0.IntDomainOrBuilder> 
      getIntDomainOrBuilderList() {
    return intDomain_;
  }
  /**
   * <pre>
   * top level int domains that can be reused by features
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
   */
  @java.lang.Override
  public int getIntDomainCount() {
    return intDomain_.size();
  }
  /**
   * <pre>
   * top level int domains that can be reused by features
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
   */
  @java.lang.Override
  public org.tensorflow.metadata.v0.IntDomain getIntDomain(int index) {
    return intDomain_.get(index);
  }
  /**
   * <pre>
   * top level int domains that can be reused by features
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
   */
  @java.lang.Override
  public org.tensorflow.metadata.v0.IntDomainOrBuilder getIntDomainOrBuilder(
      int index) {
    return intDomain_.get(index);
  }

  public static final int DEFAULT_ENVIRONMENT_FIELD_NUMBER = 5;
  private com.google.protobuf.LazyStringList defaultEnvironment_;
  /**
   * <pre>
   * Default environments for each feature.
   * An environment represents both a type of location (e.g. a server or phone)
   * and a time (e.g. right before model X is run). In the standard scenario,
   * 99% of the features should be in the default environments TRAINING,
   * SERVING, and the LABEL (or labels) AND WEIGHT is only available at TRAINING
   * (not at serving).
   * Other possible variations:
   * 1. There may be TRAINING_MOBILE, SERVING_MOBILE, TRAINING_SERVICE,
   *    and SERVING_SERVICE.
   * 2. If one is ensembling three models, where the predictions of the first
   *    three models are available for the ensemble model, there may be
   *    TRAINING, SERVING_INITIAL, SERVING_ENSEMBLE.
   * See FeatureProto::not_in_environment and FeatureProto::in_environment.
   * </pre>
   *
   * <code>repeated string default_environment = 5;</code>
   * @return A list containing the defaultEnvironment.
   */
  public com.google.protobuf.ProtocolStringList
      getDefaultEnvironmentList() {
    return defaultEnvironment_;
  }
  /**
   * <pre>
   * Default environments for each feature.
   * An environment represents both a type of location (e.g. a server or phone)
   * and a time (e.g. right before model X is run). In the standard scenario,
   * 99% of the features should be in the default environments TRAINING,
   * SERVING, and the LABEL (or labels) AND WEIGHT is only available at TRAINING
   * (not at serving).
   * Other possible variations:
   * 1. There may be TRAINING_MOBILE, SERVING_MOBILE, TRAINING_SERVICE,
   *    and SERVING_SERVICE.
   * 2. If one is ensembling three models, where the predictions of the first
   *    three models are available for the ensemble model, there may be
   *    TRAINING, SERVING_INITIAL, SERVING_ENSEMBLE.
   * See FeatureProto::not_in_environment and FeatureProto::in_environment.
   * </pre>
   *
   * <code>repeated string default_environment = 5;</code>
   * @return The count of defaultEnvironment.
   */
  public int getDefaultEnvironmentCount() {
    return defaultEnvironment_.size();
  }
  /**
   * <pre>
   * Default environments for each feature.
   * An environment represents both a type of location (e.g. a server or phone)
   * and a time (e.g. right before model X is run). In the standard scenario,
   * 99% of the features should be in the default environments TRAINING,
   * SERVING, and the LABEL (or labels) AND WEIGHT is only available at TRAINING
   * (not at serving).
   * Other possible variations:
   * 1. There may be TRAINING_MOBILE, SERVING_MOBILE, TRAINING_SERVICE,
   *    and SERVING_SERVICE.
   * 2. If one is ensembling three models, where the predictions of the first
   *    three models are available for the ensemble model, there may be
   *    TRAINING, SERVING_INITIAL, SERVING_ENSEMBLE.
   * See FeatureProto::not_in_environment and FeatureProto::in_environment.
   * </pre>
   *
   * <code>repeated string default_environment = 5;</code>
   * @param index The index of the element to return.
   * @return The defaultEnvironment at the given index.
   */
  public java.lang.String getDefaultEnvironment(int index) {
    return defaultEnvironment_.get(index);
  }
  /**
   * <pre>
   * Default environments for each feature.
   * An environment represents both a type of location (e.g. a server or phone)
   * and a time (e.g. right before model X is run). In the standard scenario,
   * 99% of the features should be in the default environments TRAINING,
   * SERVING, and the LABEL (or labels) AND WEIGHT is only available at TRAINING
   * (not at serving).
   * Other possible variations:
   * 1. There may be TRAINING_MOBILE, SERVING_MOBILE, TRAINING_SERVICE,
   *    and SERVING_SERVICE.
   * 2. If one is ensembling three models, where the predictions of the first
   *    three models are available for the ensemble model, there may be
   *    TRAINING, SERVING_INITIAL, SERVING_ENSEMBLE.
   * See FeatureProto::not_in_environment and FeatureProto::in_environment.
   * </pre>
   *
   * <code>repeated string default_environment = 5;</code>
   * @param index The index of the value to return.
   * @return The bytes of the defaultEnvironment at the given index.
   */
  public com.google.protobuf.ByteString
      getDefaultEnvironmentBytes(int index) {
    return defaultEnvironment_.getByteString(index);
  }

  public static final int ANNOTATION_FIELD_NUMBER = 8;
  private org.tensorflow.metadata.v0.Annotation annotation_;
  /**
   * <pre>
   * Additional information about the schema as a whole. Features may also
   * be annotated individually.
   * </pre>
   *
   * <code>optional .tensorflow.metadata.v0.Annotation annotation = 8;</code>
   * @return Whether the annotation field is set.
   */
  @java.lang.Override
  public boolean hasAnnotation() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Additional information about the schema as a whole. Features may also
   * be annotated individually.
   * </pre>
   *
   * <code>optional .tensorflow.metadata.v0.Annotation annotation = 8;</code>
   * @return The annotation.
   */
  @java.lang.Override
  public org.tensorflow.metadata.v0.Annotation getAnnotation() {
    return annotation_ == null ? org.tensorflow.metadata.v0.Annotation.getDefaultInstance() : annotation_;
  }
  /**
   * <pre>
   * Additional information about the schema as a whole. Features may also
   * be annotated individually.
   * </pre>
   *
   * <code>optional .tensorflow.metadata.v0.Annotation annotation = 8;</code>
   */
  @java.lang.Override
  public org.tensorflow.metadata.v0.AnnotationOrBuilder getAnnotationOrBuilder() {
    return annotation_ == null ? org.tensorflow.metadata.v0.Annotation.getDefaultInstance() : annotation_;
  }

  public static final int DATASET_CONSTRAINTS_FIELD_NUMBER = 11;
  private org.tensorflow.metadata.v0.DatasetConstraints datasetConstraints_;
  /**
   * <pre>
   * Dataset-level constraints. This is currently used for specifying
   * information about changes in num_examples.
   * </pre>
   *
   * <code>optional .tensorflow.metadata.v0.DatasetConstraints dataset_constraints = 11;</code>
   * @return Whether the datasetConstraints field is set.
   */
  @java.lang.Override
  public boolean hasDatasetConstraints() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Dataset-level constraints. This is currently used for specifying
   * information about changes in num_examples.
   * </pre>
   *
   * <code>optional .tensorflow.metadata.v0.DatasetConstraints dataset_constraints = 11;</code>
   * @return The datasetConstraints.
   */
  @java.lang.Override
  public org.tensorflow.metadata.v0.DatasetConstraints getDatasetConstraints() {
    return datasetConstraints_ == null ? org.tensorflow.metadata.v0.DatasetConstraints.getDefaultInstance() : datasetConstraints_;
  }
  /**
   * <pre>
   * Dataset-level constraints. This is currently used for specifying
   * information about changes in num_examples.
   * </pre>
   *
   * <code>optional .tensorflow.metadata.v0.DatasetConstraints dataset_constraints = 11;</code>
   */
  @java.lang.Override
  public org.tensorflow.metadata.v0.DatasetConstraintsOrBuilder getDatasetConstraintsOrBuilder() {
    return datasetConstraints_ == null ? org.tensorflow.metadata.v0.DatasetConstraints.getDefaultInstance() : datasetConstraints_;
  }

  public static final int TENSOR_REPRESENTATION_GROUP_FIELD_NUMBER = 13;
  private static final class TensorRepresentationGroupDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, org.tensorflow.metadata.v0.TensorRepresentationGroup> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, org.tensorflow.metadata.v0.TensorRepresentationGroup>newDefaultInstance(
                org.tensorflow.metadata.v0.SchemaOuterClass.internal_static_tensorflow_metadata_v0_Schema_TensorRepresentationGroupEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                org.tensorflow.metadata.v0.TensorRepresentationGroup.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, org.tensorflow.metadata.v0.TensorRepresentationGroup> tensorRepresentationGroup_;
  private com.google.protobuf.MapField<java.lang.String, org.tensorflow.metadata.v0.TensorRepresentationGroup>
  internalGetTensorRepresentationGroup() {
    if (tensorRepresentationGroup_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          TensorRepresentationGroupDefaultEntryHolder.defaultEntry);
    }
    return tensorRepresentationGroup_;
  }

  public int getTensorRepresentationGroupCount() {
    return internalGetTensorRepresentationGroup().getMap().size();
  }
  /**
   * <pre>
   * TensorRepresentation groups. The keys are the names of the groups.
   * Key "" (empty string) denotes the "default" group, which is what should
   * be used when a group name is not provided.
   * See the documentation at TensorRepresentationGroup for more info.
   * Under development. DO NOT USE.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.metadata.v0.TensorRepresentationGroup&gt; tensor_representation_group = 13;</code>
   */

  @java.lang.Override
  public boolean containsTensorRepresentationGroup(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetTensorRepresentationGroup().getMap().containsKey(key);
  }
  /**
   * Use {@link #getTensorRepresentationGroupMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, org.tensorflow.metadata.v0.TensorRepresentationGroup> getTensorRepresentationGroup() {
    return getTensorRepresentationGroupMap();
  }
  /**
   * <pre>
   * TensorRepresentation groups. The keys are the names of the groups.
   * Key "" (empty string) denotes the "default" group, which is what should
   * be used when a group name is not provided.
   * See the documentation at TensorRepresentationGroup for more info.
   * Under development. DO NOT USE.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.metadata.v0.TensorRepresentationGroup&gt; tensor_representation_group = 13;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, org.tensorflow.metadata.v0.TensorRepresentationGroup> getTensorRepresentationGroupMap() {
    return internalGetTensorRepresentationGroup().getMap();
  }
  /**
   * <pre>
   * TensorRepresentation groups. The keys are the names of the groups.
   * Key "" (empty string) denotes the "default" group, which is what should
   * be used when a group name is not provided.
   * See the documentation at TensorRepresentationGroup for more info.
   * Under development. DO NOT USE.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.metadata.v0.TensorRepresentationGroup&gt; tensor_representation_group = 13;</code>
   */
  @java.lang.Override

  public org.tensorflow.metadata.v0.TensorRepresentationGroup getTensorRepresentationGroupOrDefault(
      java.lang.String key,
      org.tensorflow.metadata.v0.TensorRepresentationGroup defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, org.tensorflow.metadata.v0.TensorRepresentationGroup> map =
        internalGetTensorRepresentationGroup().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * TensorRepresentation groups. The keys are the names of the groups.
   * Key "" (empty string) denotes the "default" group, which is what should
   * be used when a group name is not provided.
   * See the documentation at TensorRepresentationGroup for more info.
   * Under development. DO NOT USE.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.metadata.v0.TensorRepresentationGroup&gt; tensor_representation_group = 13;</code>
   */
  @java.lang.Override

  public org.tensorflow.metadata.v0.TensorRepresentationGroup getTensorRepresentationGroupOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, org.tensorflow.metadata.v0.TensorRepresentationGroup> map =
        internalGetTensorRepresentationGroup().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < feature_.size(); i++) {
      output.writeMessage(1, feature_.get(i));
    }
    for (int i = 0; i < stringDomain_.size(); i++) {
      output.writeMessage(4, stringDomain_.get(i));
    }
    for (int i = 0; i < defaultEnvironment_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, defaultEnvironment_.getRaw(i));
    }
    for (int i = 0; i < sparseFeature_.size(); i++) {
      output.writeMessage(6, sparseFeature_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(8, getAnnotation());
    }
    for (int i = 0; i < floatDomain_.size(); i++) {
      output.writeMessage(9, floatDomain_.get(i));
    }
    for (int i = 0; i < intDomain_.size(); i++) {
      output.writeMessage(10, intDomain_.get(i));
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(11, getDatasetConstraints());
    }
    for (int i = 0; i < weightedFeature_.size(); i++) {
      output.writeMessage(12, weightedFeature_.get(i));
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetTensorRepresentationGroup(),
        TensorRepresentationGroupDefaultEntryHolder.defaultEntry,
        13);
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < feature_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, feature_.get(i));
    }
    for (int i = 0; i < stringDomain_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, stringDomain_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < defaultEnvironment_.size(); i++) {
        dataSize += computeStringSizeNoTag(defaultEnvironment_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getDefaultEnvironmentList().size();
    }
    for (int i = 0; i < sparseFeature_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, sparseFeature_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getAnnotation());
    }
    for (int i = 0; i < floatDomain_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, floatDomain_.get(i));
    }
    for (int i = 0; i < intDomain_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, intDomain_.get(i));
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getDatasetConstraints());
    }
    for (int i = 0; i < weightedFeature_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, weightedFeature_.get(i));
    }
    for (java.util.Map.Entry<java.lang.String, org.tensorflow.metadata.v0.TensorRepresentationGroup> entry
         : internalGetTensorRepresentationGroup().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, org.tensorflow.metadata.v0.TensorRepresentationGroup>
      tensorRepresentationGroup__ = TensorRepresentationGroupDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, tensorRepresentationGroup__);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.tensorflow.metadata.v0.Schema)) {
      return super.equals(obj);
    }
    org.tensorflow.metadata.v0.Schema other = (org.tensorflow.metadata.v0.Schema) obj;

    if (!getFeatureList()
        .equals(other.getFeatureList())) return false;
    if (!getSparseFeatureList()
        .equals(other.getSparseFeatureList())) return false;
    if (!getWeightedFeatureList()
        .equals(other.getWeightedFeatureList())) return false;
    if (!getStringDomainList()
        .equals(other.getStringDomainList())) return false;
    if (!getFloatDomainList()
        .equals(other.getFloatDomainList())) return false;
    if (!getIntDomainList()
        .equals(other.getIntDomainList())) return false;
    if (!getDefaultEnvironmentList()
        .equals(other.getDefaultEnvironmentList())) return false;
    if (hasAnnotation() != other.hasAnnotation()) return false;
    if (hasAnnotation()) {
      if (!getAnnotation()
          .equals(other.getAnnotation())) return false;
    }
    if (hasDatasetConstraints() != other.hasDatasetConstraints()) return false;
    if (hasDatasetConstraints()) {
      if (!getDatasetConstraints()
          .equals(other.getDatasetConstraints())) return false;
    }
    if (!internalGetTensorRepresentationGroup().equals(
        other.internalGetTensorRepresentationGroup())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getFeatureCount() > 0) {
      hash = (37 * hash) + FEATURE_FIELD_NUMBER;
      hash = (53 * hash) + getFeatureList().hashCode();
    }
    if (getSparseFeatureCount() > 0) {
      hash = (37 * hash) + SPARSE_FEATURE_FIELD_NUMBER;
      hash = (53 * hash) + getSparseFeatureList().hashCode();
    }
    if (getWeightedFeatureCount() > 0) {
      hash = (37 * hash) + WEIGHTED_FEATURE_FIELD_NUMBER;
      hash = (53 * hash) + getWeightedFeatureList().hashCode();
    }
    if (getStringDomainCount() > 0) {
      hash = (37 * hash) + STRING_DOMAIN_FIELD_NUMBER;
      hash = (53 * hash) + getStringDomainList().hashCode();
    }
    if (getFloatDomainCount() > 0) {
      hash = (37 * hash) + FLOAT_DOMAIN_FIELD_NUMBER;
      hash = (53 * hash) + getFloatDomainList().hashCode();
    }
    if (getIntDomainCount() > 0) {
      hash = (37 * hash) + INT_DOMAIN_FIELD_NUMBER;
      hash = (53 * hash) + getIntDomainList().hashCode();
    }
    if (getDefaultEnvironmentCount() > 0) {
      hash = (37 * hash) + DEFAULT_ENVIRONMENT_FIELD_NUMBER;
      hash = (53 * hash) + getDefaultEnvironmentList().hashCode();
    }
    if (hasAnnotation()) {
      hash = (37 * hash) + ANNOTATION_FIELD_NUMBER;
      hash = (53 * hash) + getAnnotation().hashCode();
    }
    if (hasDatasetConstraints()) {
      hash = (37 * hash) + DATASET_CONSTRAINTS_FIELD_NUMBER;
      hash = (53 * hash) + getDatasetConstraints().hashCode();
    }
    if (!internalGetTensorRepresentationGroup().getMap().isEmpty()) {
      hash = (37 * hash) + TENSOR_REPRESENTATION_GROUP_FIELD_NUMBER;
      hash = (53 * hash) + internalGetTensorRepresentationGroup().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.tensorflow.metadata.v0.Schema parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.metadata.v0.Schema parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.metadata.v0.Schema parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.metadata.v0.Schema parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.metadata.v0.Schema parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.metadata.v0.Schema parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.metadata.v0.Schema parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.metadata.v0.Schema parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.metadata.v0.Schema parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.tensorflow.metadata.v0.Schema parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.metadata.v0.Schema parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.metadata.v0.Schema parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.tensorflow.metadata.v0.Schema prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Message to represent schema information.
   * NextID: 14
   * </pre>
   *
   * Protobuf type {@code tensorflow.metadata.v0.Schema}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tensorflow.metadata.v0.Schema)
      org.tensorflow.metadata.v0.SchemaOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.metadata.v0.SchemaOuterClass.internal_static_tensorflow_metadata_v0_Schema_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 13:
          return internalGetTensorRepresentationGroup();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 13:
          return internalGetMutableTensorRepresentationGroup();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.metadata.v0.SchemaOuterClass.internal_static_tensorflow_metadata_v0_Schema_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.metadata.v0.Schema.class, org.tensorflow.metadata.v0.Schema.Builder.class);
    }

    // Construct using org.tensorflow.metadata.v0.Schema.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getFeatureFieldBuilder();
        getSparseFeatureFieldBuilder();
        getWeightedFeatureFieldBuilder();
        getStringDomainFieldBuilder();
        getFloatDomainFieldBuilder();
        getIntDomainFieldBuilder();
        getAnnotationFieldBuilder();
        getDatasetConstraintsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (featureBuilder_ == null) {
        feature_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        featureBuilder_.clear();
      }
      if (sparseFeatureBuilder_ == null) {
        sparseFeature_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        sparseFeatureBuilder_.clear();
      }
      if (weightedFeatureBuilder_ == null) {
        weightedFeature_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        weightedFeatureBuilder_.clear();
      }
      if (stringDomainBuilder_ == null) {
        stringDomain_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        stringDomainBuilder_.clear();
      }
      if (floatDomainBuilder_ == null) {
        floatDomain_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
      } else {
        floatDomainBuilder_.clear();
      }
      if (intDomainBuilder_ == null) {
        intDomain_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
      } else {
        intDomainBuilder_.clear();
      }
      defaultEnvironment_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000040);
      if (annotationBuilder_ == null) {
        annotation_ = null;
      } else {
        annotationBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      if (datasetConstraintsBuilder_ == null) {
        datasetConstraints_ = null;
      } else {
        datasetConstraintsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      internalGetMutableTensorRepresentationGroup().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.tensorflow.metadata.v0.SchemaOuterClass.internal_static_tensorflow_metadata_v0_Schema_descriptor;
    }

    @java.lang.Override
    public org.tensorflow.metadata.v0.Schema getDefaultInstanceForType() {
      return org.tensorflow.metadata.v0.Schema.getDefaultInstance();
    }

    @java.lang.Override
    public org.tensorflow.metadata.v0.Schema build() {
      org.tensorflow.metadata.v0.Schema result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.tensorflow.metadata.v0.Schema buildPartial() {
      org.tensorflow.metadata.v0.Schema result = new org.tensorflow.metadata.v0.Schema(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (featureBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          feature_ = java.util.Collections.unmodifiableList(feature_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.feature_ = feature_;
      } else {
        result.feature_ = featureBuilder_.build();
      }
      if (sparseFeatureBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          sparseFeature_ = java.util.Collections.unmodifiableList(sparseFeature_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.sparseFeature_ = sparseFeature_;
      } else {
        result.sparseFeature_ = sparseFeatureBuilder_.build();
      }
      if (weightedFeatureBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          weightedFeature_ = java.util.Collections.unmodifiableList(weightedFeature_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.weightedFeature_ = weightedFeature_;
      } else {
        result.weightedFeature_ = weightedFeatureBuilder_.build();
      }
      if (stringDomainBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          stringDomain_ = java.util.Collections.unmodifiableList(stringDomain_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.stringDomain_ = stringDomain_;
      } else {
        result.stringDomain_ = stringDomainBuilder_.build();
      }
      if (floatDomainBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          floatDomain_ = java.util.Collections.unmodifiableList(floatDomain_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.floatDomain_ = floatDomain_;
      } else {
        result.floatDomain_ = floatDomainBuilder_.build();
      }
      if (intDomainBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          intDomain_ = java.util.Collections.unmodifiableList(intDomain_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.intDomain_ = intDomain_;
      } else {
        result.intDomain_ = intDomainBuilder_.build();
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        defaultEnvironment_ = defaultEnvironment_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000040);
      }
      result.defaultEnvironment_ = defaultEnvironment_;
      if (((from_bitField0_ & 0x00000080) != 0)) {
        if (annotationBuilder_ == null) {
          result.annotation_ = annotation_;
        } else {
          result.annotation_ = annotationBuilder_.build();
        }
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        if (datasetConstraintsBuilder_ == null) {
          result.datasetConstraints_ = datasetConstraints_;
        } else {
          result.datasetConstraints_ = datasetConstraintsBuilder_.build();
        }
        to_bitField0_ |= 0x00000002;
      }
      result.tensorRepresentationGroup_ = internalGetTensorRepresentationGroup();
      result.tensorRepresentationGroup_.makeImmutable();
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.tensorflow.metadata.v0.Schema) {
        return mergeFrom((org.tensorflow.metadata.v0.Schema)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.tensorflow.metadata.v0.Schema other) {
      if (other == org.tensorflow.metadata.v0.Schema.getDefaultInstance()) return this;
      if (featureBuilder_ == null) {
        if (!other.feature_.isEmpty()) {
          if (feature_.isEmpty()) {
            feature_ = other.feature_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFeatureIsMutable();
            feature_.addAll(other.feature_);
          }
          onChanged();
        }
      } else {
        if (!other.feature_.isEmpty()) {
          if (featureBuilder_.isEmpty()) {
            featureBuilder_.dispose();
            featureBuilder_ = null;
            feature_ = other.feature_;
            bitField0_ = (bitField0_ & ~0x00000001);
            featureBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFeatureFieldBuilder() : null;
          } else {
            featureBuilder_.addAllMessages(other.feature_);
          }
        }
      }
      if (sparseFeatureBuilder_ == null) {
        if (!other.sparseFeature_.isEmpty()) {
          if (sparseFeature_.isEmpty()) {
            sparseFeature_ = other.sparseFeature_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSparseFeatureIsMutable();
            sparseFeature_.addAll(other.sparseFeature_);
          }
          onChanged();
        }
      } else {
        if (!other.sparseFeature_.isEmpty()) {
          if (sparseFeatureBuilder_.isEmpty()) {
            sparseFeatureBuilder_.dispose();
            sparseFeatureBuilder_ = null;
            sparseFeature_ = other.sparseFeature_;
            bitField0_ = (bitField0_ & ~0x00000002);
            sparseFeatureBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSparseFeatureFieldBuilder() : null;
          } else {
            sparseFeatureBuilder_.addAllMessages(other.sparseFeature_);
          }
        }
      }
      if (weightedFeatureBuilder_ == null) {
        if (!other.weightedFeature_.isEmpty()) {
          if (weightedFeature_.isEmpty()) {
            weightedFeature_ = other.weightedFeature_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureWeightedFeatureIsMutable();
            weightedFeature_.addAll(other.weightedFeature_);
          }
          onChanged();
        }
      } else {
        if (!other.weightedFeature_.isEmpty()) {
          if (weightedFeatureBuilder_.isEmpty()) {
            weightedFeatureBuilder_.dispose();
            weightedFeatureBuilder_ = null;
            weightedFeature_ = other.weightedFeature_;
            bitField0_ = (bitField0_ & ~0x00000004);
            weightedFeatureBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getWeightedFeatureFieldBuilder() : null;
          } else {
            weightedFeatureBuilder_.addAllMessages(other.weightedFeature_);
          }
        }
      }
      if (stringDomainBuilder_ == null) {
        if (!other.stringDomain_.isEmpty()) {
          if (stringDomain_.isEmpty()) {
            stringDomain_ = other.stringDomain_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureStringDomainIsMutable();
            stringDomain_.addAll(other.stringDomain_);
          }
          onChanged();
        }
      } else {
        if (!other.stringDomain_.isEmpty()) {
          if (stringDomainBuilder_.isEmpty()) {
            stringDomainBuilder_.dispose();
            stringDomainBuilder_ = null;
            stringDomain_ = other.stringDomain_;
            bitField0_ = (bitField0_ & ~0x00000008);
            stringDomainBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getStringDomainFieldBuilder() : null;
          } else {
            stringDomainBuilder_.addAllMessages(other.stringDomain_);
          }
        }
      }
      if (floatDomainBuilder_ == null) {
        if (!other.floatDomain_.isEmpty()) {
          if (floatDomain_.isEmpty()) {
            floatDomain_ = other.floatDomain_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureFloatDomainIsMutable();
            floatDomain_.addAll(other.floatDomain_);
          }
          onChanged();
        }
      } else {
        if (!other.floatDomain_.isEmpty()) {
          if (floatDomainBuilder_.isEmpty()) {
            floatDomainBuilder_.dispose();
            floatDomainBuilder_ = null;
            floatDomain_ = other.floatDomain_;
            bitField0_ = (bitField0_ & ~0x00000010);
            floatDomainBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFloatDomainFieldBuilder() : null;
          } else {
            floatDomainBuilder_.addAllMessages(other.floatDomain_);
          }
        }
      }
      if (intDomainBuilder_ == null) {
        if (!other.intDomain_.isEmpty()) {
          if (intDomain_.isEmpty()) {
            intDomain_ = other.intDomain_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureIntDomainIsMutable();
            intDomain_.addAll(other.intDomain_);
          }
          onChanged();
        }
      } else {
        if (!other.intDomain_.isEmpty()) {
          if (intDomainBuilder_.isEmpty()) {
            intDomainBuilder_.dispose();
            intDomainBuilder_ = null;
            intDomain_ = other.intDomain_;
            bitField0_ = (bitField0_ & ~0x00000020);
            intDomainBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getIntDomainFieldBuilder() : null;
          } else {
            intDomainBuilder_.addAllMessages(other.intDomain_);
          }
        }
      }
      if (!other.defaultEnvironment_.isEmpty()) {
        if (defaultEnvironment_.isEmpty()) {
          defaultEnvironment_ = other.defaultEnvironment_;
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          ensureDefaultEnvironmentIsMutable();
          defaultEnvironment_.addAll(other.defaultEnvironment_);
        }
        onChanged();
      }
      if (other.hasAnnotation()) {
        mergeAnnotation(other.getAnnotation());
      }
      if (other.hasDatasetConstraints()) {
        mergeDatasetConstraints(other.getDatasetConstraints());
      }
      internalGetMutableTensorRepresentationGroup().mergeFrom(
          other.internalGetTensorRepresentationGroup());
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.tensorflow.metadata.v0.Schema parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.tensorflow.metadata.v0.Schema) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<org.tensorflow.metadata.v0.Feature> feature_ =
      java.util.Collections.emptyList();
    private void ensureFeatureIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        feature_ = new java.util.ArrayList<org.tensorflow.metadata.v0.Feature>(feature_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.metadata.v0.Feature, org.tensorflow.metadata.v0.Feature.Builder, org.tensorflow.metadata.v0.FeatureOrBuilder> featureBuilder_;

    /**
     * <pre>
     * Features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
     */
    public java.util.List<org.tensorflow.metadata.v0.Feature> getFeatureList() {
      if (featureBuilder_ == null) {
        return java.util.Collections.unmodifiableList(feature_);
      } else {
        return featureBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
     */
    public int getFeatureCount() {
      if (featureBuilder_ == null) {
        return feature_.size();
      } else {
        return featureBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
     */
    public org.tensorflow.metadata.v0.Feature getFeature(int index) {
      if (featureBuilder_ == null) {
        return feature_.get(index);
      } else {
        return featureBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
     */
    public Builder setFeature(
        int index, org.tensorflow.metadata.v0.Feature value) {
      if (featureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeatureIsMutable();
        feature_.set(index, value);
        onChanged();
      } else {
        featureBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
     */
    public Builder setFeature(
        int index, org.tensorflow.metadata.v0.Feature.Builder builderForValue) {
      if (featureBuilder_ == null) {
        ensureFeatureIsMutable();
        feature_.set(index, builderForValue.build());
        onChanged();
      } else {
        featureBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
     */
    public Builder addFeature(org.tensorflow.metadata.v0.Feature value) {
      if (featureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeatureIsMutable();
        feature_.add(value);
        onChanged();
      } else {
        featureBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
     */
    public Builder addFeature(
        int index, org.tensorflow.metadata.v0.Feature value) {
      if (featureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeatureIsMutable();
        feature_.add(index, value);
        onChanged();
      } else {
        featureBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
     */
    public Builder addFeature(
        org.tensorflow.metadata.v0.Feature.Builder builderForValue) {
      if (featureBuilder_ == null) {
        ensureFeatureIsMutable();
        feature_.add(builderForValue.build());
        onChanged();
      } else {
        featureBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
     */
    public Builder addFeature(
        int index, org.tensorflow.metadata.v0.Feature.Builder builderForValue) {
      if (featureBuilder_ == null) {
        ensureFeatureIsMutable();
        feature_.add(index, builderForValue.build());
        onChanged();
      } else {
        featureBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
     */
    public Builder addAllFeature(
        java.lang.Iterable<? extends org.tensorflow.metadata.v0.Feature> values) {
      if (featureBuilder_ == null) {
        ensureFeatureIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, feature_);
        onChanged();
      } else {
        featureBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
     */
    public Builder clearFeature() {
      if (featureBuilder_ == null) {
        feature_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        featureBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
     */
    public Builder removeFeature(int index) {
      if (featureBuilder_ == null) {
        ensureFeatureIsMutable();
        feature_.remove(index);
        onChanged();
      } else {
        featureBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
     */
    public org.tensorflow.metadata.v0.Feature.Builder getFeatureBuilder(
        int index) {
      return getFeatureFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
     */
    public org.tensorflow.metadata.v0.FeatureOrBuilder getFeatureOrBuilder(
        int index) {
      if (featureBuilder_ == null) {
        return feature_.get(index);  } else {
        return featureBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
     */
    public java.util.List<? extends org.tensorflow.metadata.v0.FeatureOrBuilder> 
         getFeatureOrBuilderList() {
      if (featureBuilder_ != null) {
        return featureBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(feature_);
      }
    }
    /**
     * <pre>
     * Features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
     */
    public org.tensorflow.metadata.v0.Feature.Builder addFeatureBuilder() {
      return getFeatureFieldBuilder().addBuilder(
          org.tensorflow.metadata.v0.Feature.getDefaultInstance());
    }
    /**
     * <pre>
     * Features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
     */
    public org.tensorflow.metadata.v0.Feature.Builder addFeatureBuilder(
        int index) {
      return getFeatureFieldBuilder().addBuilder(
          index, org.tensorflow.metadata.v0.Feature.getDefaultInstance());
    }
    /**
     * <pre>
     * Features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.Feature feature = 1;</code>
     */
    public java.util.List<org.tensorflow.metadata.v0.Feature.Builder> 
         getFeatureBuilderList() {
      return getFeatureFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.metadata.v0.Feature, org.tensorflow.metadata.v0.Feature.Builder, org.tensorflow.metadata.v0.FeatureOrBuilder> 
        getFeatureFieldBuilder() {
      if (featureBuilder_ == null) {
        featureBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.tensorflow.metadata.v0.Feature, org.tensorflow.metadata.v0.Feature.Builder, org.tensorflow.metadata.v0.FeatureOrBuilder>(
                feature_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        feature_ = null;
      }
      return featureBuilder_;
    }

    private java.util.List<org.tensorflow.metadata.v0.SparseFeature> sparseFeature_ =
      java.util.Collections.emptyList();
    private void ensureSparseFeatureIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        sparseFeature_ = new java.util.ArrayList<org.tensorflow.metadata.v0.SparseFeature>(sparseFeature_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.metadata.v0.SparseFeature, org.tensorflow.metadata.v0.SparseFeature.Builder, org.tensorflow.metadata.v0.SparseFeatureOrBuilder> sparseFeatureBuilder_;

    /**
     * <pre>
     * Sparse features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
     */
    public java.util.List<org.tensorflow.metadata.v0.SparseFeature> getSparseFeatureList() {
      if (sparseFeatureBuilder_ == null) {
        return java.util.Collections.unmodifiableList(sparseFeature_);
      } else {
        return sparseFeatureBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Sparse features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
     */
    public int getSparseFeatureCount() {
      if (sparseFeatureBuilder_ == null) {
        return sparseFeature_.size();
      } else {
        return sparseFeatureBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Sparse features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
     */
    public org.tensorflow.metadata.v0.SparseFeature getSparseFeature(int index) {
      if (sparseFeatureBuilder_ == null) {
        return sparseFeature_.get(index);
      } else {
        return sparseFeatureBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Sparse features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
     */
    public Builder setSparseFeature(
        int index, org.tensorflow.metadata.v0.SparseFeature value) {
      if (sparseFeatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSparseFeatureIsMutable();
        sparseFeature_.set(index, value);
        onChanged();
      } else {
        sparseFeatureBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Sparse features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
     */
    public Builder setSparseFeature(
        int index, org.tensorflow.metadata.v0.SparseFeature.Builder builderForValue) {
      if (sparseFeatureBuilder_ == null) {
        ensureSparseFeatureIsMutable();
        sparseFeature_.set(index, builderForValue.build());
        onChanged();
      } else {
        sparseFeatureBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Sparse features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
     */
    public Builder addSparseFeature(org.tensorflow.metadata.v0.SparseFeature value) {
      if (sparseFeatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSparseFeatureIsMutable();
        sparseFeature_.add(value);
        onChanged();
      } else {
        sparseFeatureBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Sparse features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
     */
    public Builder addSparseFeature(
        int index, org.tensorflow.metadata.v0.SparseFeature value) {
      if (sparseFeatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSparseFeatureIsMutable();
        sparseFeature_.add(index, value);
        onChanged();
      } else {
        sparseFeatureBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Sparse features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
     */
    public Builder addSparseFeature(
        org.tensorflow.metadata.v0.SparseFeature.Builder builderForValue) {
      if (sparseFeatureBuilder_ == null) {
        ensureSparseFeatureIsMutable();
        sparseFeature_.add(builderForValue.build());
        onChanged();
      } else {
        sparseFeatureBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Sparse features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
     */
    public Builder addSparseFeature(
        int index, org.tensorflow.metadata.v0.SparseFeature.Builder builderForValue) {
      if (sparseFeatureBuilder_ == null) {
        ensureSparseFeatureIsMutable();
        sparseFeature_.add(index, builderForValue.build());
        onChanged();
      } else {
        sparseFeatureBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Sparse features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
     */
    public Builder addAllSparseFeature(
        java.lang.Iterable<? extends org.tensorflow.metadata.v0.SparseFeature> values) {
      if (sparseFeatureBuilder_ == null) {
        ensureSparseFeatureIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sparseFeature_);
        onChanged();
      } else {
        sparseFeatureBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Sparse features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
     */
    public Builder clearSparseFeature() {
      if (sparseFeatureBuilder_ == null) {
        sparseFeature_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        sparseFeatureBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Sparse features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
     */
    public Builder removeSparseFeature(int index) {
      if (sparseFeatureBuilder_ == null) {
        ensureSparseFeatureIsMutable();
        sparseFeature_.remove(index);
        onChanged();
      } else {
        sparseFeatureBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Sparse features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
     */
    public org.tensorflow.metadata.v0.SparseFeature.Builder getSparseFeatureBuilder(
        int index) {
      return getSparseFeatureFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Sparse features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
     */
    public org.tensorflow.metadata.v0.SparseFeatureOrBuilder getSparseFeatureOrBuilder(
        int index) {
      if (sparseFeatureBuilder_ == null) {
        return sparseFeature_.get(index);  } else {
        return sparseFeatureBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Sparse features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
     */
    public java.util.List<? extends org.tensorflow.metadata.v0.SparseFeatureOrBuilder> 
         getSparseFeatureOrBuilderList() {
      if (sparseFeatureBuilder_ != null) {
        return sparseFeatureBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(sparseFeature_);
      }
    }
    /**
     * <pre>
     * Sparse features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
     */
    public org.tensorflow.metadata.v0.SparseFeature.Builder addSparseFeatureBuilder() {
      return getSparseFeatureFieldBuilder().addBuilder(
          org.tensorflow.metadata.v0.SparseFeature.getDefaultInstance());
    }
    /**
     * <pre>
     * Sparse features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
     */
    public org.tensorflow.metadata.v0.SparseFeature.Builder addSparseFeatureBuilder(
        int index) {
      return getSparseFeatureFieldBuilder().addBuilder(
          index, org.tensorflow.metadata.v0.SparseFeature.getDefaultInstance());
    }
    /**
     * <pre>
     * Sparse features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.SparseFeature sparse_feature = 6;</code>
     */
    public java.util.List<org.tensorflow.metadata.v0.SparseFeature.Builder> 
         getSparseFeatureBuilderList() {
      return getSparseFeatureFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.metadata.v0.SparseFeature, org.tensorflow.metadata.v0.SparseFeature.Builder, org.tensorflow.metadata.v0.SparseFeatureOrBuilder> 
        getSparseFeatureFieldBuilder() {
      if (sparseFeatureBuilder_ == null) {
        sparseFeatureBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.tensorflow.metadata.v0.SparseFeature, org.tensorflow.metadata.v0.SparseFeature.Builder, org.tensorflow.metadata.v0.SparseFeatureOrBuilder>(
                sparseFeature_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        sparseFeature_ = null;
      }
      return sparseFeatureBuilder_;
    }

    private java.util.List<org.tensorflow.metadata.v0.WeightedFeature> weightedFeature_ =
      java.util.Collections.emptyList();
    private void ensureWeightedFeatureIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        weightedFeature_ = new java.util.ArrayList<org.tensorflow.metadata.v0.WeightedFeature>(weightedFeature_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.metadata.v0.WeightedFeature, org.tensorflow.metadata.v0.WeightedFeature.Builder, org.tensorflow.metadata.v0.WeightedFeatureOrBuilder> weightedFeatureBuilder_;

    /**
     * <pre>
     * Weighted features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
     */
    public java.util.List<org.tensorflow.metadata.v0.WeightedFeature> getWeightedFeatureList() {
      if (weightedFeatureBuilder_ == null) {
        return java.util.Collections.unmodifiableList(weightedFeature_);
      } else {
        return weightedFeatureBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Weighted features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
     */
    public int getWeightedFeatureCount() {
      if (weightedFeatureBuilder_ == null) {
        return weightedFeature_.size();
      } else {
        return weightedFeatureBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Weighted features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
     */
    public org.tensorflow.metadata.v0.WeightedFeature getWeightedFeature(int index) {
      if (weightedFeatureBuilder_ == null) {
        return weightedFeature_.get(index);
      } else {
        return weightedFeatureBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Weighted features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
     */
    public Builder setWeightedFeature(
        int index, org.tensorflow.metadata.v0.WeightedFeature value) {
      if (weightedFeatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWeightedFeatureIsMutable();
        weightedFeature_.set(index, value);
        onChanged();
      } else {
        weightedFeatureBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Weighted features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
     */
    public Builder setWeightedFeature(
        int index, org.tensorflow.metadata.v0.WeightedFeature.Builder builderForValue) {
      if (weightedFeatureBuilder_ == null) {
        ensureWeightedFeatureIsMutable();
        weightedFeature_.set(index, builderForValue.build());
        onChanged();
      } else {
        weightedFeatureBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Weighted features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
     */
    public Builder addWeightedFeature(org.tensorflow.metadata.v0.WeightedFeature value) {
      if (weightedFeatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWeightedFeatureIsMutable();
        weightedFeature_.add(value);
        onChanged();
      } else {
        weightedFeatureBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Weighted features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
     */
    public Builder addWeightedFeature(
        int index, org.tensorflow.metadata.v0.WeightedFeature value) {
      if (weightedFeatureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWeightedFeatureIsMutable();
        weightedFeature_.add(index, value);
        onChanged();
      } else {
        weightedFeatureBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Weighted features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
     */
    public Builder addWeightedFeature(
        org.tensorflow.metadata.v0.WeightedFeature.Builder builderForValue) {
      if (weightedFeatureBuilder_ == null) {
        ensureWeightedFeatureIsMutable();
        weightedFeature_.add(builderForValue.build());
        onChanged();
      } else {
        weightedFeatureBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Weighted features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
     */
    public Builder addWeightedFeature(
        int index, org.tensorflow.metadata.v0.WeightedFeature.Builder builderForValue) {
      if (weightedFeatureBuilder_ == null) {
        ensureWeightedFeatureIsMutable();
        weightedFeature_.add(index, builderForValue.build());
        onChanged();
      } else {
        weightedFeatureBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Weighted features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
     */
    public Builder addAllWeightedFeature(
        java.lang.Iterable<? extends org.tensorflow.metadata.v0.WeightedFeature> values) {
      if (weightedFeatureBuilder_ == null) {
        ensureWeightedFeatureIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, weightedFeature_);
        onChanged();
      } else {
        weightedFeatureBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Weighted features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
     */
    public Builder clearWeightedFeature() {
      if (weightedFeatureBuilder_ == null) {
        weightedFeature_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        weightedFeatureBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Weighted features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
     */
    public Builder removeWeightedFeature(int index) {
      if (weightedFeatureBuilder_ == null) {
        ensureWeightedFeatureIsMutable();
        weightedFeature_.remove(index);
        onChanged();
      } else {
        weightedFeatureBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Weighted features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
     */
    public org.tensorflow.metadata.v0.WeightedFeature.Builder getWeightedFeatureBuilder(
        int index) {
      return getWeightedFeatureFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Weighted features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
     */
    public org.tensorflow.metadata.v0.WeightedFeatureOrBuilder getWeightedFeatureOrBuilder(
        int index) {
      if (weightedFeatureBuilder_ == null) {
        return weightedFeature_.get(index);  } else {
        return weightedFeatureBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Weighted features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
     */
    public java.util.List<? extends org.tensorflow.metadata.v0.WeightedFeatureOrBuilder> 
         getWeightedFeatureOrBuilderList() {
      if (weightedFeatureBuilder_ != null) {
        return weightedFeatureBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(weightedFeature_);
      }
    }
    /**
     * <pre>
     * Weighted features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
     */
    public org.tensorflow.metadata.v0.WeightedFeature.Builder addWeightedFeatureBuilder() {
      return getWeightedFeatureFieldBuilder().addBuilder(
          org.tensorflow.metadata.v0.WeightedFeature.getDefaultInstance());
    }
    /**
     * <pre>
     * Weighted features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
     */
    public org.tensorflow.metadata.v0.WeightedFeature.Builder addWeightedFeatureBuilder(
        int index) {
      return getWeightedFeatureFieldBuilder().addBuilder(
          index, org.tensorflow.metadata.v0.WeightedFeature.getDefaultInstance());
    }
    /**
     * <pre>
     * Weighted features described in this schema.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.WeightedFeature weighted_feature = 12;</code>
     */
    public java.util.List<org.tensorflow.metadata.v0.WeightedFeature.Builder> 
         getWeightedFeatureBuilderList() {
      return getWeightedFeatureFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.metadata.v0.WeightedFeature, org.tensorflow.metadata.v0.WeightedFeature.Builder, org.tensorflow.metadata.v0.WeightedFeatureOrBuilder> 
        getWeightedFeatureFieldBuilder() {
      if (weightedFeatureBuilder_ == null) {
        weightedFeatureBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.tensorflow.metadata.v0.WeightedFeature, org.tensorflow.metadata.v0.WeightedFeature.Builder, org.tensorflow.metadata.v0.WeightedFeatureOrBuilder>(
                weightedFeature_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        weightedFeature_ = null;
      }
      return weightedFeatureBuilder_;
    }

    private java.util.List<org.tensorflow.metadata.v0.StringDomain> stringDomain_ =
      java.util.Collections.emptyList();
    private void ensureStringDomainIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        stringDomain_ = new java.util.ArrayList<org.tensorflow.metadata.v0.StringDomain>(stringDomain_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.metadata.v0.StringDomain, org.tensorflow.metadata.v0.StringDomain.Builder, org.tensorflow.metadata.v0.StringDomainOrBuilder> stringDomainBuilder_;

    /**
     * <pre>
     * declared as top-level features in &lt;feature&gt;.
     * String domains referenced in the features.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
     */
    public java.util.List<org.tensorflow.metadata.v0.StringDomain> getStringDomainList() {
      if (stringDomainBuilder_ == null) {
        return java.util.Collections.unmodifiableList(stringDomain_);
      } else {
        return stringDomainBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * declared as top-level features in &lt;feature&gt;.
     * String domains referenced in the features.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
     */
    public int getStringDomainCount() {
      if (stringDomainBuilder_ == null) {
        return stringDomain_.size();
      } else {
        return stringDomainBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * declared as top-level features in &lt;feature&gt;.
     * String domains referenced in the features.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
     */
    public org.tensorflow.metadata.v0.StringDomain getStringDomain(int index) {
      if (stringDomainBuilder_ == null) {
        return stringDomain_.get(index);
      } else {
        return stringDomainBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * declared as top-level features in &lt;feature&gt;.
     * String domains referenced in the features.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
     */
    public Builder setStringDomain(
        int index, org.tensorflow.metadata.v0.StringDomain value) {
      if (stringDomainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStringDomainIsMutable();
        stringDomain_.set(index, value);
        onChanged();
      } else {
        stringDomainBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * declared as top-level features in &lt;feature&gt;.
     * String domains referenced in the features.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
     */
    public Builder setStringDomain(
        int index, org.tensorflow.metadata.v0.StringDomain.Builder builderForValue) {
      if (stringDomainBuilder_ == null) {
        ensureStringDomainIsMutable();
        stringDomain_.set(index, builderForValue.build());
        onChanged();
      } else {
        stringDomainBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * declared as top-level features in &lt;feature&gt;.
     * String domains referenced in the features.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
     */
    public Builder addStringDomain(org.tensorflow.metadata.v0.StringDomain value) {
      if (stringDomainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStringDomainIsMutable();
        stringDomain_.add(value);
        onChanged();
      } else {
        stringDomainBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * declared as top-level features in &lt;feature&gt;.
     * String domains referenced in the features.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
     */
    public Builder addStringDomain(
        int index, org.tensorflow.metadata.v0.StringDomain value) {
      if (stringDomainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStringDomainIsMutable();
        stringDomain_.add(index, value);
        onChanged();
      } else {
        stringDomainBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * declared as top-level features in &lt;feature&gt;.
     * String domains referenced in the features.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
     */
    public Builder addStringDomain(
        org.tensorflow.metadata.v0.StringDomain.Builder builderForValue) {
      if (stringDomainBuilder_ == null) {
        ensureStringDomainIsMutable();
        stringDomain_.add(builderForValue.build());
        onChanged();
      } else {
        stringDomainBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * declared as top-level features in &lt;feature&gt;.
     * String domains referenced in the features.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
     */
    public Builder addStringDomain(
        int index, org.tensorflow.metadata.v0.StringDomain.Builder builderForValue) {
      if (stringDomainBuilder_ == null) {
        ensureStringDomainIsMutable();
        stringDomain_.add(index, builderForValue.build());
        onChanged();
      } else {
        stringDomainBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * declared as top-level features in &lt;feature&gt;.
     * String domains referenced in the features.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
     */
    public Builder addAllStringDomain(
        java.lang.Iterable<? extends org.tensorflow.metadata.v0.StringDomain> values) {
      if (stringDomainBuilder_ == null) {
        ensureStringDomainIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, stringDomain_);
        onChanged();
      } else {
        stringDomainBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * declared as top-level features in &lt;feature&gt;.
     * String domains referenced in the features.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
     */
    public Builder clearStringDomain() {
      if (stringDomainBuilder_ == null) {
        stringDomain_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        stringDomainBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * declared as top-level features in &lt;feature&gt;.
     * String domains referenced in the features.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
     */
    public Builder removeStringDomain(int index) {
      if (stringDomainBuilder_ == null) {
        ensureStringDomainIsMutable();
        stringDomain_.remove(index);
        onChanged();
      } else {
        stringDomainBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * declared as top-level features in &lt;feature&gt;.
     * String domains referenced in the features.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
     */
    public org.tensorflow.metadata.v0.StringDomain.Builder getStringDomainBuilder(
        int index) {
      return getStringDomainFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * declared as top-level features in &lt;feature&gt;.
     * String domains referenced in the features.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
     */
    public org.tensorflow.metadata.v0.StringDomainOrBuilder getStringDomainOrBuilder(
        int index) {
      if (stringDomainBuilder_ == null) {
        return stringDomain_.get(index);  } else {
        return stringDomainBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * declared as top-level features in &lt;feature&gt;.
     * String domains referenced in the features.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
     */
    public java.util.List<? extends org.tensorflow.metadata.v0.StringDomainOrBuilder> 
         getStringDomainOrBuilderList() {
      if (stringDomainBuilder_ != null) {
        return stringDomainBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(stringDomain_);
      }
    }
    /**
     * <pre>
     * declared as top-level features in &lt;feature&gt;.
     * String domains referenced in the features.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
     */
    public org.tensorflow.metadata.v0.StringDomain.Builder addStringDomainBuilder() {
      return getStringDomainFieldBuilder().addBuilder(
          org.tensorflow.metadata.v0.StringDomain.getDefaultInstance());
    }
    /**
     * <pre>
     * declared as top-level features in &lt;feature&gt;.
     * String domains referenced in the features.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
     */
    public org.tensorflow.metadata.v0.StringDomain.Builder addStringDomainBuilder(
        int index) {
      return getStringDomainFieldBuilder().addBuilder(
          index, org.tensorflow.metadata.v0.StringDomain.getDefaultInstance());
    }
    /**
     * <pre>
     * declared as top-level features in &lt;feature&gt;.
     * String domains referenced in the features.
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.StringDomain string_domain = 4;</code>
     */
    public java.util.List<org.tensorflow.metadata.v0.StringDomain.Builder> 
         getStringDomainBuilderList() {
      return getStringDomainFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.metadata.v0.StringDomain, org.tensorflow.metadata.v0.StringDomain.Builder, org.tensorflow.metadata.v0.StringDomainOrBuilder> 
        getStringDomainFieldBuilder() {
      if (stringDomainBuilder_ == null) {
        stringDomainBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.tensorflow.metadata.v0.StringDomain, org.tensorflow.metadata.v0.StringDomain.Builder, org.tensorflow.metadata.v0.StringDomainOrBuilder>(
                stringDomain_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        stringDomain_ = null;
      }
      return stringDomainBuilder_;
    }

    private java.util.List<org.tensorflow.metadata.v0.FloatDomain> floatDomain_ =
      java.util.Collections.emptyList();
    private void ensureFloatDomainIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        floatDomain_ = new java.util.ArrayList<org.tensorflow.metadata.v0.FloatDomain>(floatDomain_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.metadata.v0.FloatDomain, org.tensorflow.metadata.v0.FloatDomain.Builder, org.tensorflow.metadata.v0.FloatDomainOrBuilder> floatDomainBuilder_;

    /**
     * <pre>
     * top level float domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
     */
    public java.util.List<org.tensorflow.metadata.v0.FloatDomain> getFloatDomainList() {
      if (floatDomainBuilder_ == null) {
        return java.util.Collections.unmodifiableList(floatDomain_);
      } else {
        return floatDomainBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * top level float domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
     */
    public int getFloatDomainCount() {
      if (floatDomainBuilder_ == null) {
        return floatDomain_.size();
      } else {
        return floatDomainBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * top level float domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
     */
    public org.tensorflow.metadata.v0.FloatDomain getFloatDomain(int index) {
      if (floatDomainBuilder_ == null) {
        return floatDomain_.get(index);
      } else {
        return floatDomainBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * top level float domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
     */
    public Builder setFloatDomain(
        int index, org.tensorflow.metadata.v0.FloatDomain value) {
      if (floatDomainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFloatDomainIsMutable();
        floatDomain_.set(index, value);
        onChanged();
      } else {
        floatDomainBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * top level float domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
     */
    public Builder setFloatDomain(
        int index, org.tensorflow.metadata.v0.FloatDomain.Builder builderForValue) {
      if (floatDomainBuilder_ == null) {
        ensureFloatDomainIsMutable();
        floatDomain_.set(index, builderForValue.build());
        onChanged();
      } else {
        floatDomainBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * top level float domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
     */
    public Builder addFloatDomain(org.tensorflow.metadata.v0.FloatDomain value) {
      if (floatDomainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFloatDomainIsMutable();
        floatDomain_.add(value);
        onChanged();
      } else {
        floatDomainBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * top level float domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
     */
    public Builder addFloatDomain(
        int index, org.tensorflow.metadata.v0.FloatDomain value) {
      if (floatDomainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFloatDomainIsMutable();
        floatDomain_.add(index, value);
        onChanged();
      } else {
        floatDomainBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * top level float domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
     */
    public Builder addFloatDomain(
        org.tensorflow.metadata.v0.FloatDomain.Builder builderForValue) {
      if (floatDomainBuilder_ == null) {
        ensureFloatDomainIsMutable();
        floatDomain_.add(builderForValue.build());
        onChanged();
      } else {
        floatDomainBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * top level float domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
     */
    public Builder addFloatDomain(
        int index, org.tensorflow.metadata.v0.FloatDomain.Builder builderForValue) {
      if (floatDomainBuilder_ == null) {
        ensureFloatDomainIsMutable();
        floatDomain_.add(index, builderForValue.build());
        onChanged();
      } else {
        floatDomainBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * top level float domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
     */
    public Builder addAllFloatDomain(
        java.lang.Iterable<? extends org.tensorflow.metadata.v0.FloatDomain> values) {
      if (floatDomainBuilder_ == null) {
        ensureFloatDomainIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, floatDomain_);
        onChanged();
      } else {
        floatDomainBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * top level float domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
     */
    public Builder clearFloatDomain() {
      if (floatDomainBuilder_ == null) {
        floatDomain_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        floatDomainBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * top level float domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
     */
    public Builder removeFloatDomain(int index) {
      if (floatDomainBuilder_ == null) {
        ensureFloatDomainIsMutable();
        floatDomain_.remove(index);
        onChanged();
      } else {
        floatDomainBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * top level float domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
     */
    public org.tensorflow.metadata.v0.FloatDomain.Builder getFloatDomainBuilder(
        int index) {
      return getFloatDomainFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * top level float domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
     */
    public org.tensorflow.metadata.v0.FloatDomainOrBuilder getFloatDomainOrBuilder(
        int index) {
      if (floatDomainBuilder_ == null) {
        return floatDomain_.get(index);  } else {
        return floatDomainBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * top level float domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
     */
    public java.util.List<? extends org.tensorflow.metadata.v0.FloatDomainOrBuilder> 
         getFloatDomainOrBuilderList() {
      if (floatDomainBuilder_ != null) {
        return floatDomainBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(floatDomain_);
      }
    }
    /**
     * <pre>
     * top level float domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
     */
    public org.tensorflow.metadata.v0.FloatDomain.Builder addFloatDomainBuilder() {
      return getFloatDomainFieldBuilder().addBuilder(
          org.tensorflow.metadata.v0.FloatDomain.getDefaultInstance());
    }
    /**
     * <pre>
     * top level float domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
     */
    public org.tensorflow.metadata.v0.FloatDomain.Builder addFloatDomainBuilder(
        int index) {
      return getFloatDomainFieldBuilder().addBuilder(
          index, org.tensorflow.metadata.v0.FloatDomain.getDefaultInstance());
    }
    /**
     * <pre>
     * top level float domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.FloatDomain float_domain = 9;</code>
     */
    public java.util.List<org.tensorflow.metadata.v0.FloatDomain.Builder> 
         getFloatDomainBuilderList() {
      return getFloatDomainFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.metadata.v0.FloatDomain, org.tensorflow.metadata.v0.FloatDomain.Builder, org.tensorflow.metadata.v0.FloatDomainOrBuilder> 
        getFloatDomainFieldBuilder() {
      if (floatDomainBuilder_ == null) {
        floatDomainBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.tensorflow.metadata.v0.FloatDomain, org.tensorflow.metadata.v0.FloatDomain.Builder, org.tensorflow.metadata.v0.FloatDomainOrBuilder>(
                floatDomain_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        floatDomain_ = null;
      }
      return floatDomainBuilder_;
    }

    private java.util.List<org.tensorflow.metadata.v0.IntDomain> intDomain_ =
      java.util.Collections.emptyList();
    private void ensureIntDomainIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        intDomain_ = new java.util.ArrayList<org.tensorflow.metadata.v0.IntDomain>(intDomain_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.metadata.v0.IntDomain, org.tensorflow.metadata.v0.IntDomain.Builder, org.tensorflow.metadata.v0.IntDomainOrBuilder> intDomainBuilder_;

    /**
     * <pre>
     * top level int domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
     */
    public java.util.List<org.tensorflow.metadata.v0.IntDomain> getIntDomainList() {
      if (intDomainBuilder_ == null) {
        return java.util.Collections.unmodifiableList(intDomain_);
      } else {
        return intDomainBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * top level int domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
     */
    public int getIntDomainCount() {
      if (intDomainBuilder_ == null) {
        return intDomain_.size();
      } else {
        return intDomainBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * top level int domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
     */
    public org.tensorflow.metadata.v0.IntDomain getIntDomain(int index) {
      if (intDomainBuilder_ == null) {
        return intDomain_.get(index);
      } else {
        return intDomainBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * top level int domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
     */
    public Builder setIntDomain(
        int index, org.tensorflow.metadata.v0.IntDomain value) {
      if (intDomainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIntDomainIsMutable();
        intDomain_.set(index, value);
        onChanged();
      } else {
        intDomainBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * top level int domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
     */
    public Builder setIntDomain(
        int index, org.tensorflow.metadata.v0.IntDomain.Builder builderForValue) {
      if (intDomainBuilder_ == null) {
        ensureIntDomainIsMutable();
        intDomain_.set(index, builderForValue.build());
        onChanged();
      } else {
        intDomainBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * top level int domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
     */
    public Builder addIntDomain(org.tensorflow.metadata.v0.IntDomain value) {
      if (intDomainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIntDomainIsMutable();
        intDomain_.add(value);
        onChanged();
      } else {
        intDomainBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * top level int domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
     */
    public Builder addIntDomain(
        int index, org.tensorflow.metadata.v0.IntDomain value) {
      if (intDomainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIntDomainIsMutable();
        intDomain_.add(index, value);
        onChanged();
      } else {
        intDomainBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * top level int domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
     */
    public Builder addIntDomain(
        org.tensorflow.metadata.v0.IntDomain.Builder builderForValue) {
      if (intDomainBuilder_ == null) {
        ensureIntDomainIsMutable();
        intDomain_.add(builderForValue.build());
        onChanged();
      } else {
        intDomainBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * top level int domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
     */
    public Builder addIntDomain(
        int index, org.tensorflow.metadata.v0.IntDomain.Builder builderForValue) {
      if (intDomainBuilder_ == null) {
        ensureIntDomainIsMutable();
        intDomain_.add(index, builderForValue.build());
        onChanged();
      } else {
        intDomainBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * top level int domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
     */
    public Builder addAllIntDomain(
        java.lang.Iterable<? extends org.tensorflow.metadata.v0.IntDomain> values) {
      if (intDomainBuilder_ == null) {
        ensureIntDomainIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, intDomain_);
        onChanged();
      } else {
        intDomainBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * top level int domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
     */
    public Builder clearIntDomain() {
      if (intDomainBuilder_ == null) {
        intDomain_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        intDomainBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * top level int domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
     */
    public Builder removeIntDomain(int index) {
      if (intDomainBuilder_ == null) {
        ensureIntDomainIsMutable();
        intDomain_.remove(index);
        onChanged();
      } else {
        intDomainBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * top level int domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
     */
    public org.tensorflow.metadata.v0.IntDomain.Builder getIntDomainBuilder(
        int index) {
      return getIntDomainFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * top level int domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
     */
    public org.tensorflow.metadata.v0.IntDomainOrBuilder getIntDomainOrBuilder(
        int index) {
      if (intDomainBuilder_ == null) {
        return intDomain_.get(index);  } else {
        return intDomainBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * top level int domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
     */
    public java.util.List<? extends org.tensorflow.metadata.v0.IntDomainOrBuilder> 
         getIntDomainOrBuilderList() {
      if (intDomainBuilder_ != null) {
        return intDomainBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(intDomain_);
      }
    }
    /**
     * <pre>
     * top level int domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
     */
    public org.tensorflow.metadata.v0.IntDomain.Builder addIntDomainBuilder() {
      return getIntDomainFieldBuilder().addBuilder(
          org.tensorflow.metadata.v0.IntDomain.getDefaultInstance());
    }
    /**
     * <pre>
     * top level int domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
     */
    public org.tensorflow.metadata.v0.IntDomain.Builder addIntDomainBuilder(
        int index) {
      return getIntDomainFieldBuilder().addBuilder(
          index, org.tensorflow.metadata.v0.IntDomain.getDefaultInstance());
    }
    /**
     * <pre>
     * top level int domains that can be reused by features
     * </pre>
     *
     * <code>repeated .tensorflow.metadata.v0.IntDomain int_domain = 10;</code>
     */
    public java.util.List<org.tensorflow.metadata.v0.IntDomain.Builder> 
         getIntDomainBuilderList() {
      return getIntDomainFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.metadata.v0.IntDomain, org.tensorflow.metadata.v0.IntDomain.Builder, org.tensorflow.metadata.v0.IntDomainOrBuilder> 
        getIntDomainFieldBuilder() {
      if (intDomainBuilder_ == null) {
        intDomainBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.tensorflow.metadata.v0.IntDomain, org.tensorflow.metadata.v0.IntDomain.Builder, org.tensorflow.metadata.v0.IntDomainOrBuilder>(
                intDomain_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        intDomain_ = null;
      }
      return intDomainBuilder_;
    }

    private com.google.protobuf.LazyStringList defaultEnvironment_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureDefaultEnvironmentIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        defaultEnvironment_ = new com.google.protobuf.LazyStringArrayList(defaultEnvironment_);
        bitField0_ |= 0x00000040;
       }
    }
    /**
     * <pre>
     * Default environments for each feature.
     * An environment represents both a type of location (e.g. a server or phone)
     * and a time (e.g. right before model X is run). In the standard scenario,
     * 99% of the features should be in the default environments TRAINING,
     * SERVING, and the LABEL (or labels) AND WEIGHT is only available at TRAINING
     * (not at serving).
     * Other possible variations:
     * 1. There may be TRAINING_MOBILE, SERVING_MOBILE, TRAINING_SERVICE,
     *    and SERVING_SERVICE.
     * 2. If one is ensembling three models, where the predictions of the first
     *    three models are available for the ensemble model, there may be
     *    TRAINING, SERVING_INITIAL, SERVING_ENSEMBLE.
     * See FeatureProto::not_in_environment and FeatureProto::in_environment.
     * </pre>
     *
     * <code>repeated string default_environment = 5;</code>
     * @return A list containing the defaultEnvironment.
     */
    public com.google.protobuf.ProtocolStringList
        getDefaultEnvironmentList() {
      return defaultEnvironment_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Default environments for each feature.
     * An environment represents both a type of location (e.g. a server or phone)
     * and a time (e.g. right before model X is run). In the standard scenario,
     * 99% of the features should be in the default environments TRAINING,
     * SERVING, and the LABEL (or labels) AND WEIGHT is only available at TRAINING
     * (not at serving).
     * Other possible variations:
     * 1. There may be TRAINING_MOBILE, SERVING_MOBILE, TRAINING_SERVICE,
     *    and SERVING_SERVICE.
     * 2. If one is ensembling three models, where the predictions of the first
     *    three models are available for the ensemble model, there may be
     *    TRAINING, SERVING_INITIAL, SERVING_ENSEMBLE.
     * See FeatureProto::not_in_environment and FeatureProto::in_environment.
     * </pre>
     *
     * <code>repeated string default_environment = 5;</code>
     * @return The count of defaultEnvironment.
     */
    public int getDefaultEnvironmentCount() {
      return defaultEnvironment_.size();
    }
    /**
     * <pre>
     * Default environments for each feature.
     * An environment represents both a type of location (e.g. a server or phone)
     * and a time (e.g. right before model X is run). In the standard scenario,
     * 99% of the features should be in the default environments TRAINING,
     * SERVING, and the LABEL (or labels) AND WEIGHT is only available at TRAINING
     * (not at serving).
     * Other possible variations:
     * 1. There may be TRAINING_MOBILE, SERVING_MOBILE, TRAINING_SERVICE,
     *    and SERVING_SERVICE.
     * 2. If one is ensembling three models, where the predictions of the first
     *    three models are available for the ensemble model, there may be
     *    TRAINING, SERVING_INITIAL, SERVING_ENSEMBLE.
     * See FeatureProto::not_in_environment and FeatureProto::in_environment.
     * </pre>
     *
     * <code>repeated string default_environment = 5;</code>
     * @param index The index of the element to return.
     * @return The defaultEnvironment at the given index.
     */
    public java.lang.String getDefaultEnvironment(int index) {
      return defaultEnvironment_.get(index);
    }
    /**
     * <pre>
     * Default environments for each feature.
     * An environment represents both a type of location (e.g. a server or phone)
     * and a time (e.g. right before model X is run). In the standard scenario,
     * 99% of the features should be in the default environments TRAINING,
     * SERVING, and the LABEL (or labels) AND WEIGHT is only available at TRAINING
     * (not at serving).
     * Other possible variations:
     * 1. There may be TRAINING_MOBILE, SERVING_MOBILE, TRAINING_SERVICE,
     *    and SERVING_SERVICE.
     * 2. If one is ensembling three models, where the predictions of the first
     *    three models are available for the ensemble model, there may be
     *    TRAINING, SERVING_INITIAL, SERVING_ENSEMBLE.
     * See FeatureProto::not_in_environment and FeatureProto::in_environment.
     * </pre>
     *
     * <code>repeated string default_environment = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the defaultEnvironment at the given index.
     */
    public com.google.protobuf.ByteString
        getDefaultEnvironmentBytes(int index) {
      return defaultEnvironment_.getByteString(index);
    }
    /**
     * <pre>
     * Default environments for each feature.
     * An environment represents both a type of location (e.g. a server or phone)
     * and a time (e.g. right before model X is run). In the standard scenario,
     * 99% of the features should be in the default environments TRAINING,
     * SERVING, and the LABEL (or labels) AND WEIGHT is only available at TRAINING
     * (not at serving).
     * Other possible variations:
     * 1. There may be TRAINING_MOBILE, SERVING_MOBILE, TRAINING_SERVICE,
     *    and SERVING_SERVICE.
     * 2. If one is ensembling three models, where the predictions of the first
     *    three models are available for the ensemble model, there may be
     *    TRAINING, SERVING_INITIAL, SERVING_ENSEMBLE.
     * See FeatureProto::not_in_environment and FeatureProto::in_environment.
     * </pre>
     *
     * <code>repeated string default_environment = 5;</code>
     * @param index The index to set the value at.
     * @param value The defaultEnvironment to set.
     * @return This builder for chaining.
     */
    public Builder setDefaultEnvironment(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureDefaultEnvironmentIsMutable();
      defaultEnvironment_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Default environments for each feature.
     * An environment represents both a type of location (e.g. a server or phone)
     * and a time (e.g. right before model X is run). In the standard scenario,
     * 99% of the features should be in the default environments TRAINING,
     * SERVING, and the LABEL (or labels) AND WEIGHT is only available at TRAINING
     * (not at serving).
     * Other possible variations:
     * 1. There may be TRAINING_MOBILE, SERVING_MOBILE, TRAINING_SERVICE,
     *    and SERVING_SERVICE.
     * 2. If one is ensembling three models, where the predictions of the first
     *    three models are available for the ensemble model, there may be
     *    TRAINING, SERVING_INITIAL, SERVING_ENSEMBLE.
     * See FeatureProto::not_in_environment and FeatureProto::in_environment.
     * </pre>
     *
     * <code>repeated string default_environment = 5;</code>
     * @param value The defaultEnvironment to add.
     * @return This builder for chaining.
     */
    public Builder addDefaultEnvironment(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureDefaultEnvironmentIsMutable();
      defaultEnvironment_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Default environments for each feature.
     * An environment represents both a type of location (e.g. a server or phone)
     * and a time (e.g. right before model X is run). In the standard scenario,
     * 99% of the features should be in the default environments TRAINING,
     * SERVING, and the LABEL (or labels) AND WEIGHT is only available at TRAINING
     * (not at serving).
     * Other possible variations:
     * 1. There may be TRAINING_MOBILE, SERVING_MOBILE, TRAINING_SERVICE,
     *    and SERVING_SERVICE.
     * 2. If one is ensembling three models, where the predictions of the first
     *    three models are available for the ensemble model, there may be
     *    TRAINING, SERVING_INITIAL, SERVING_ENSEMBLE.
     * See FeatureProto::not_in_environment and FeatureProto::in_environment.
     * </pre>
     *
     * <code>repeated string default_environment = 5;</code>
     * @param values The defaultEnvironment to add.
     * @return This builder for chaining.
     */
    public Builder addAllDefaultEnvironment(
        java.lang.Iterable<java.lang.String> values) {
      ensureDefaultEnvironmentIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, defaultEnvironment_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Default environments for each feature.
     * An environment represents both a type of location (e.g. a server or phone)
     * and a time (e.g. right before model X is run). In the standard scenario,
     * 99% of the features should be in the default environments TRAINING,
     * SERVING, and the LABEL (or labels) AND WEIGHT is only available at TRAINING
     * (not at serving).
     * Other possible variations:
     * 1. There may be TRAINING_MOBILE, SERVING_MOBILE, TRAINING_SERVICE,
     *    and SERVING_SERVICE.
     * 2. If one is ensembling three models, where the predictions of the first
     *    three models are available for the ensemble model, there may be
     *    TRAINING, SERVING_INITIAL, SERVING_ENSEMBLE.
     * See FeatureProto::not_in_environment and FeatureProto::in_environment.
     * </pre>
     *
     * <code>repeated string default_environment = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearDefaultEnvironment() {
      defaultEnvironment_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Default environments for each feature.
     * An environment represents both a type of location (e.g. a server or phone)
     * and a time (e.g. right before model X is run). In the standard scenario,
     * 99% of the features should be in the default environments TRAINING,
     * SERVING, and the LABEL (or labels) AND WEIGHT is only available at TRAINING
     * (not at serving).
     * Other possible variations:
     * 1. There may be TRAINING_MOBILE, SERVING_MOBILE, TRAINING_SERVICE,
     *    and SERVING_SERVICE.
     * 2. If one is ensembling three models, where the predictions of the first
     *    three models are available for the ensemble model, there may be
     *    TRAINING, SERVING_INITIAL, SERVING_ENSEMBLE.
     * See FeatureProto::not_in_environment and FeatureProto::in_environment.
     * </pre>
     *
     * <code>repeated string default_environment = 5;</code>
     * @param value The bytes of the defaultEnvironment to add.
     * @return This builder for chaining.
     */
    public Builder addDefaultEnvironmentBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureDefaultEnvironmentIsMutable();
      defaultEnvironment_.add(value);
      onChanged();
      return this;
    }

    private org.tensorflow.metadata.v0.Annotation annotation_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.metadata.v0.Annotation, org.tensorflow.metadata.v0.Annotation.Builder, org.tensorflow.metadata.v0.AnnotationOrBuilder> annotationBuilder_;
    /**
     * <pre>
     * Additional information about the schema as a whole. Features may also
     * be annotated individually.
     * </pre>
     *
     * <code>optional .tensorflow.metadata.v0.Annotation annotation = 8;</code>
     * @return Whether the annotation field is set.
     */
    public boolean hasAnnotation() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Additional information about the schema as a whole. Features may also
     * be annotated individually.
     * </pre>
     *
     * <code>optional .tensorflow.metadata.v0.Annotation annotation = 8;</code>
     * @return The annotation.
     */
    public org.tensorflow.metadata.v0.Annotation getAnnotation() {
      if (annotationBuilder_ == null) {
        return annotation_ == null ? org.tensorflow.metadata.v0.Annotation.getDefaultInstance() : annotation_;
      } else {
        return annotationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Additional information about the schema as a whole. Features may also
     * be annotated individually.
     * </pre>
     *
     * <code>optional .tensorflow.metadata.v0.Annotation annotation = 8;</code>
     */
    public Builder setAnnotation(org.tensorflow.metadata.v0.Annotation value) {
      if (annotationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        annotation_ = value;
        onChanged();
      } else {
        annotationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <pre>
     * Additional information about the schema as a whole. Features may also
     * be annotated individually.
     * </pre>
     *
     * <code>optional .tensorflow.metadata.v0.Annotation annotation = 8;</code>
     */
    public Builder setAnnotation(
        org.tensorflow.metadata.v0.Annotation.Builder builderForValue) {
      if (annotationBuilder_ == null) {
        annotation_ = builderForValue.build();
        onChanged();
      } else {
        annotationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <pre>
     * Additional information about the schema as a whole. Features may also
     * be annotated individually.
     * </pre>
     *
     * <code>optional .tensorflow.metadata.v0.Annotation annotation = 8;</code>
     */
    public Builder mergeAnnotation(org.tensorflow.metadata.v0.Annotation value) {
      if (annotationBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0) &&
            annotation_ != null &&
            annotation_ != org.tensorflow.metadata.v0.Annotation.getDefaultInstance()) {
          annotation_ =
            org.tensorflow.metadata.v0.Annotation.newBuilder(annotation_).mergeFrom(value).buildPartial();
        } else {
          annotation_ = value;
        }
        onChanged();
      } else {
        annotationBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <pre>
     * Additional information about the schema as a whole. Features may also
     * be annotated individually.
     * </pre>
     *
     * <code>optional .tensorflow.metadata.v0.Annotation annotation = 8;</code>
     */
    public Builder clearAnnotation() {
      if (annotationBuilder_ == null) {
        annotation_ = null;
        onChanged();
      } else {
        annotationBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      return this;
    }
    /**
     * <pre>
     * Additional information about the schema as a whole. Features may also
     * be annotated individually.
     * </pre>
     *
     * <code>optional .tensorflow.metadata.v0.Annotation annotation = 8;</code>
     */
    public org.tensorflow.metadata.v0.Annotation.Builder getAnnotationBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getAnnotationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Additional information about the schema as a whole. Features may also
     * be annotated individually.
     * </pre>
     *
     * <code>optional .tensorflow.metadata.v0.Annotation annotation = 8;</code>
     */
    public org.tensorflow.metadata.v0.AnnotationOrBuilder getAnnotationOrBuilder() {
      if (annotationBuilder_ != null) {
        return annotationBuilder_.getMessageOrBuilder();
      } else {
        return annotation_ == null ?
            org.tensorflow.metadata.v0.Annotation.getDefaultInstance() : annotation_;
      }
    }
    /**
     * <pre>
     * Additional information about the schema as a whole. Features may also
     * be annotated individually.
     * </pre>
     *
     * <code>optional .tensorflow.metadata.v0.Annotation annotation = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.metadata.v0.Annotation, org.tensorflow.metadata.v0.Annotation.Builder, org.tensorflow.metadata.v0.AnnotationOrBuilder> 
        getAnnotationFieldBuilder() {
      if (annotationBuilder_ == null) {
        annotationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.metadata.v0.Annotation, org.tensorflow.metadata.v0.Annotation.Builder, org.tensorflow.metadata.v0.AnnotationOrBuilder>(
                getAnnotation(),
                getParentForChildren(),
                isClean());
        annotation_ = null;
      }
      return annotationBuilder_;
    }

    private org.tensorflow.metadata.v0.DatasetConstraints datasetConstraints_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.metadata.v0.DatasetConstraints, org.tensorflow.metadata.v0.DatasetConstraints.Builder, org.tensorflow.metadata.v0.DatasetConstraintsOrBuilder> datasetConstraintsBuilder_;
    /**
     * <pre>
     * Dataset-level constraints. This is currently used for specifying
     * information about changes in num_examples.
     * </pre>
     *
     * <code>optional .tensorflow.metadata.v0.DatasetConstraints dataset_constraints = 11;</code>
     * @return Whether the datasetConstraints field is set.
     */
    public boolean hasDatasetConstraints() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * Dataset-level constraints. This is currently used for specifying
     * information about changes in num_examples.
     * </pre>
     *
     * <code>optional .tensorflow.metadata.v0.DatasetConstraints dataset_constraints = 11;</code>
     * @return The datasetConstraints.
     */
    public org.tensorflow.metadata.v0.DatasetConstraints getDatasetConstraints() {
      if (datasetConstraintsBuilder_ == null) {
        return datasetConstraints_ == null ? org.tensorflow.metadata.v0.DatasetConstraints.getDefaultInstance() : datasetConstraints_;
      } else {
        return datasetConstraintsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Dataset-level constraints. This is currently used for specifying
     * information about changes in num_examples.
     * </pre>
     *
     * <code>optional .tensorflow.metadata.v0.DatasetConstraints dataset_constraints = 11;</code>
     */
    public Builder setDatasetConstraints(org.tensorflow.metadata.v0.DatasetConstraints value) {
      if (datasetConstraintsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        datasetConstraints_ = value;
        onChanged();
      } else {
        datasetConstraintsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000100;
      return this;
    }
    /**
     * <pre>
     * Dataset-level constraints. This is currently used for specifying
     * information about changes in num_examples.
     * </pre>
     *
     * <code>optional .tensorflow.metadata.v0.DatasetConstraints dataset_constraints = 11;</code>
     */
    public Builder setDatasetConstraints(
        org.tensorflow.metadata.v0.DatasetConstraints.Builder builderForValue) {
      if (datasetConstraintsBuilder_ == null) {
        datasetConstraints_ = builderForValue.build();
        onChanged();
      } else {
        datasetConstraintsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000100;
      return this;
    }
    /**
     * <pre>
     * Dataset-level constraints. This is currently used for specifying
     * information about changes in num_examples.
     * </pre>
     *
     * <code>optional .tensorflow.metadata.v0.DatasetConstraints dataset_constraints = 11;</code>
     */
    public Builder mergeDatasetConstraints(org.tensorflow.metadata.v0.DatasetConstraints value) {
      if (datasetConstraintsBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0) &&
            datasetConstraints_ != null &&
            datasetConstraints_ != org.tensorflow.metadata.v0.DatasetConstraints.getDefaultInstance()) {
          datasetConstraints_ =
            org.tensorflow.metadata.v0.DatasetConstraints.newBuilder(datasetConstraints_).mergeFrom(value).buildPartial();
        } else {
          datasetConstraints_ = value;
        }
        onChanged();
      } else {
        datasetConstraintsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000100;
      return this;
    }
    /**
     * <pre>
     * Dataset-level constraints. This is currently used for specifying
     * information about changes in num_examples.
     * </pre>
     *
     * <code>optional .tensorflow.metadata.v0.DatasetConstraints dataset_constraints = 11;</code>
     */
    public Builder clearDatasetConstraints() {
      if (datasetConstraintsBuilder_ == null) {
        datasetConstraints_ = null;
        onChanged();
      } else {
        datasetConstraintsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      return this;
    }
    /**
     * <pre>
     * Dataset-level constraints. This is currently used for specifying
     * information about changes in num_examples.
     * </pre>
     *
     * <code>optional .tensorflow.metadata.v0.DatasetConstraints dataset_constraints = 11;</code>
     */
    public org.tensorflow.metadata.v0.DatasetConstraints.Builder getDatasetConstraintsBuilder() {
      bitField0_ |= 0x00000100;
      onChanged();
      return getDatasetConstraintsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Dataset-level constraints. This is currently used for specifying
     * information about changes in num_examples.
     * </pre>
     *
     * <code>optional .tensorflow.metadata.v0.DatasetConstraints dataset_constraints = 11;</code>
     */
    public org.tensorflow.metadata.v0.DatasetConstraintsOrBuilder getDatasetConstraintsOrBuilder() {
      if (datasetConstraintsBuilder_ != null) {
        return datasetConstraintsBuilder_.getMessageOrBuilder();
      } else {
        return datasetConstraints_ == null ?
            org.tensorflow.metadata.v0.DatasetConstraints.getDefaultInstance() : datasetConstraints_;
      }
    }
    /**
     * <pre>
     * Dataset-level constraints. This is currently used for specifying
     * information about changes in num_examples.
     * </pre>
     *
     * <code>optional .tensorflow.metadata.v0.DatasetConstraints dataset_constraints = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.metadata.v0.DatasetConstraints, org.tensorflow.metadata.v0.DatasetConstraints.Builder, org.tensorflow.metadata.v0.DatasetConstraintsOrBuilder> 
        getDatasetConstraintsFieldBuilder() {
      if (datasetConstraintsBuilder_ == null) {
        datasetConstraintsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.metadata.v0.DatasetConstraints, org.tensorflow.metadata.v0.DatasetConstraints.Builder, org.tensorflow.metadata.v0.DatasetConstraintsOrBuilder>(
                getDatasetConstraints(),
                getParentForChildren(),
                isClean());
        datasetConstraints_ = null;
      }
      return datasetConstraintsBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, org.tensorflow.metadata.v0.TensorRepresentationGroup> tensorRepresentationGroup_;
    private com.google.protobuf.MapField<java.lang.String, org.tensorflow.metadata.v0.TensorRepresentationGroup>
    internalGetTensorRepresentationGroup() {
      if (tensorRepresentationGroup_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TensorRepresentationGroupDefaultEntryHolder.defaultEntry);
      }
      return tensorRepresentationGroup_;
    }
    private com.google.protobuf.MapField<java.lang.String, org.tensorflow.metadata.v0.TensorRepresentationGroup>
    internalGetMutableTensorRepresentationGroup() {
      onChanged();;
      if (tensorRepresentationGroup_ == null) {
        tensorRepresentationGroup_ = com.google.protobuf.MapField.newMapField(
            TensorRepresentationGroupDefaultEntryHolder.defaultEntry);
      }
      if (!tensorRepresentationGroup_.isMutable()) {
        tensorRepresentationGroup_ = tensorRepresentationGroup_.copy();
      }
      return tensorRepresentationGroup_;
    }

    public int getTensorRepresentationGroupCount() {
      return internalGetTensorRepresentationGroup().getMap().size();
    }
    /**
     * <pre>
     * TensorRepresentation groups. The keys are the names of the groups.
     * Key "" (empty string) denotes the "default" group, which is what should
     * be used when a group name is not provided.
     * See the documentation at TensorRepresentationGroup for more info.
     * Under development. DO NOT USE.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.metadata.v0.TensorRepresentationGroup&gt; tensor_representation_group = 13;</code>
     */

    @java.lang.Override
    public boolean containsTensorRepresentationGroup(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetTensorRepresentationGroup().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTensorRepresentationGroupMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.tensorflow.metadata.v0.TensorRepresentationGroup> getTensorRepresentationGroup() {
      return getTensorRepresentationGroupMap();
    }
    /**
     * <pre>
     * TensorRepresentation groups. The keys are the names of the groups.
     * Key "" (empty string) denotes the "default" group, which is what should
     * be used when a group name is not provided.
     * See the documentation at TensorRepresentationGroup for more info.
     * Under development. DO NOT USE.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.metadata.v0.TensorRepresentationGroup&gt; tensor_representation_group = 13;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, org.tensorflow.metadata.v0.TensorRepresentationGroup> getTensorRepresentationGroupMap() {
      return internalGetTensorRepresentationGroup().getMap();
    }
    /**
     * <pre>
     * TensorRepresentation groups. The keys are the names of the groups.
     * Key "" (empty string) denotes the "default" group, which is what should
     * be used when a group name is not provided.
     * See the documentation at TensorRepresentationGroup for more info.
     * Under development. DO NOT USE.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.metadata.v0.TensorRepresentationGroup&gt; tensor_representation_group = 13;</code>
     */
    @java.lang.Override

    public org.tensorflow.metadata.v0.TensorRepresentationGroup getTensorRepresentationGroupOrDefault(
        java.lang.String key,
        org.tensorflow.metadata.v0.TensorRepresentationGroup defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, org.tensorflow.metadata.v0.TensorRepresentationGroup> map =
          internalGetTensorRepresentationGroup().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * TensorRepresentation groups. The keys are the names of the groups.
     * Key "" (empty string) denotes the "default" group, which is what should
     * be used when a group name is not provided.
     * See the documentation at TensorRepresentationGroup for more info.
     * Under development. DO NOT USE.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.metadata.v0.TensorRepresentationGroup&gt; tensor_representation_group = 13;</code>
     */
    @java.lang.Override

    public org.tensorflow.metadata.v0.TensorRepresentationGroup getTensorRepresentationGroupOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, org.tensorflow.metadata.v0.TensorRepresentationGroup> map =
          internalGetTensorRepresentationGroup().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearTensorRepresentationGroup() {
      internalGetMutableTensorRepresentationGroup().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * TensorRepresentation groups. The keys are the names of the groups.
     * Key "" (empty string) denotes the "default" group, which is what should
     * be used when a group name is not provided.
     * See the documentation at TensorRepresentationGroup for more info.
     * Under development. DO NOT USE.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.metadata.v0.TensorRepresentationGroup&gt; tensor_representation_group = 13;</code>
     */

    public Builder removeTensorRepresentationGroup(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableTensorRepresentationGroup().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.tensorflow.metadata.v0.TensorRepresentationGroup>
    getMutableTensorRepresentationGroup() {
      return internalGetMutableTensorRepresentationGroup().getMutableMap();
    }
    /**
     * <pre>
     * TensorRepresentation groups. The keys are the names of the groups.
     * Key "" (empty string) denotes the "default" group, which is what should
     * be used when a group name is not provided.
     * See the documentation at TensorRepresentationGroup for more info.
     * Under development. DO NOT USE.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.metadata.v0.TensorRepresentationGroup&gt; tensor_representation_group = 13;</code>
     */
    public Builder putTensorRepresentationGroup(
        java.lang.String key,
        org.tensorflow.metadata.v0.TensorRepresentationGroup value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableTensorRepresentationGroup().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * TensorRepresentation groups. The keys are the names of the groups.
     * Key "" (empty string) denotes the "default" group, which is what should
     * be used when a group name is not provided.
     * See the documentation at TensorRepresentationGroup for more info.
     * Under development. DO NOT USE.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.metadata.v0.TensorRepresentationGroup&gt; tensor_representation_group = 13;</code>
     */

    public Builder putAllTensorRepresentationGroup(
        java.util.Map<java.lang.String, org.tensorflow.metadata.v0.TensorRepresentationGroup> values) {
      internalGetMutableTensorRepresentationGroup().getMutableMap()
          .putAll(values);
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:tensorflow.metadata.v0.Schema)
  }

  // @@protoc_insertion_point(class_scope:tensorflow.metadata.v0.Schema)
  private static final org.tensorflow.metadata.v0.Schema DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.tensorflow.metadata.v0.Schema();
  }

  public static org.tensorflow.metadata.v0.Schema getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<Schema>
      PARSER = new com.google.protobuf.AbstractParser<Schema>() {
    @java.lang.Override
    public Schema parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Schema(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Schema> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Schema> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.tensorflow.metadata.v0.Schema getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

