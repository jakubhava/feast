// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_metadata/proto/v0/statistics.proto

package org.tensorflow.metadata.v0;

public interface LiftStatisticsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:tensorflow.metadata.v0.LiftStatistics)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Lift information for each value of path_y. Lift is defined for each pair of
   * values (x,y) as P(path_y=y|path_x=x)/P(path_y=y).
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.LiftSeries lift_series = 1;</code>
   */
  java.util.List<org.tensorflow.metadata.v0.LiftSeries> 
      getLiftSeriesList();
  /**
   * <pre>
   * Lift information for each value of path_y. Lift is defined for each pair of
   * values (x,y) as P(path_y=y|path_x=x)/P(path_y=y).
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.LiftSeries lift_series = 1;</code>
   */
  org.tensorflow.metadata.v0.LiftSeries getLiftSeries(int index);
  /**
   * <pre>
   * Lift information for each value of path_y. Lift is defined for each pair of
   * values (x,y) as P(path_y=y|path_x=x)/P(path_y=y).
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.LiftSeries lift_series = 1;</code>
   */
  int getLiftSeriesCount();
  /**
   * <pre>
   * Lift information for each value of path_y. Lift is defined for each pair of
   * values (x,y) as P(path_y=y|path_x=x)/P(path_y=y).
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.LiftSeries lift_series = 1;</code>
   */
  java.util.List<? extends org.tensorflow.metadata.v0.LiftSeriesOrBuilder> 
      getLiftSeriesOrBuilderList();
  /**
   * <pre>
   * Lift information for each value of path_y. Lift is defined for each pair of
   * values (x,y) as P(path_y=y|path_x=x)/P(path_y=y).
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.LiftSeries lift_series = 1;</code>
   */
  org.tensorflow.metadata.v0.LiftSeriesOrBuilder getLiftSeriesOrBuilder(
      int index);

  /**
   * <pre>
   * Weighted lift information for each value of path_y. Weighted lift is
   * defined for each pair of values (x,y) as P(path_y=y|path_x=x)/P(path_y=y)
   * where probabilities are computed over weighted example space.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.LiftSeries weighted_lift_series = 2;</code>
   */
  java.util.List<org.tensorflow.metadata.v0.LiftSeries> 
      getWeightedLiftSeriesList();
  /**
   * <pre>
   * Weighted lift information for each value of path_y. Weighted lift is
   * defined for each pair of values (x,y) as P(path_y=y|path_x=x)/P(path_y=y)
   * where probabilities are computed over weighted example space.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.LiftSeries weighted_lift_series = 2;</code>
   */
  org.tensorflow.metadata.v0.LiftSeries getWeightedLiftSeries(int index);
  /**
   * <pre>
   * Weighted lift information for each value of path_y. Weighted lift is
   * defined for each pair of values (x,y) as P(path_y=y|path_x=x)/P(path_y=y)
   * where probabilities are computed over weighted example space.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.LiftSeries weighted_lift_series = 2;</code>
   */
  int getWeightedLiftSeriesCount();
  /**
   * <pre>
   * Weighted lift information for each value of path_y. Weighted lift is
   * defined for each pair of values (x,y) as P(path_y=y|path_x=x)/P(path_y=y)
   * where probabilities are computed over weighted example space.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.LiftSeries weighted_lift_series = 2;</code>
   */
  java.util.List<? extends org.tensorflow.metadata.v0.LiftSeriesOrBuilder> 
      getWeightedLiftSeriesOrBuilderList();
  /**
   * <pre>
   * Weighted lift information for each value of path_y. Weighted lift is
   * defined for each pair of values (x,y) as P(path_y=y|path_x=x)/P(path_y=y)
   * where probabilities are computed over weighted example space.
   * </pre>
   *
   * <code>repeated .tensorflow.metadata.v0.LiftSeries weighted_lift_series = 2;</code>
   */
  org.tensorflow.metadata.v0.LiftSeriesOrBuilder getWeightedLiftSeriesOrBuilder(
      int index);
}
