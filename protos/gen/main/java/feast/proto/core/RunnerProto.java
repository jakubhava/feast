// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: feast/core/Runner.proto

package feast.proto.core;

public final class RunnerProto {
  private RunnerProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DirectRunnerConfigOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:feast.core.DirectRunnerConfigOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     **
     * Controls the amount of target parallelism the DirectRunner will use.
     * Defaults to the greater of the number of available processors and 3. Must be a value
     * greater than zero.
     * </pre>
     *
     * <code>int32 targetParallelism = 1;</code>
     * @return The targetParallelism.
     */
    int getTargetParallelism();

    /**
     * <pre>
     * BigQuery table specification, e.g. PROJECT_ID:DATASET_ID.PROJECT_ID 
     * </pre>
     *
     * <code>string deadLetterTableSpec = 2;</code>
     * @return The deadLetterTableSpec.
     */
    java.lang.String getDeadLetterTableSpec();
    /**
     * <pre>
     * BigQuery table specification, e.g. PROJECT_ID:DATASET_ID.PROJECT_ID 
     * </pre>
     *
     * <code>string deadLetterTableSpec = 2;</code>
     * @return The bytes for deadLetterTableSpec.
     */
    com.google.protobuf.ByteString
        getDeadLetterTableSpecBytes();

    /**
     * <pre>
     * A pipeline level default location for storing temporary files.
     * Support Google Cloud Storage locations or local path
     * </pre>
     *
     * <code>string tempLocation = 3;</code>
     * @return The tempLocation.
     */
    java.lang.String getTempLocation();
    /**
     * <pre>
     * A pipeline level default location for storing temporary files.
     * Support Google Cloud Storage locations or local path
     * </pre>
     *
     * <code>string tempLocation = 3;</code>
     * @return The bytes for tempLocation.
     */
    com.google.protobuf.ByteString
        getTempLocationBytes();
  }
  /**
   * Protobuf type {@code feast.core.DirectRunnerConfigOptions}
   */
  public static final class DirectRunnerConfigOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:feast.core.DirectRunnerConfigOptions)
      DirectRunnerConfigOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DirectRunnerConfigOptions.newBuilder() to construct.
    private DirectRunnerConfigOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DirectRunnerConfigOptions() {
      deadLetterTableSpec_ = "";
      tempLocation_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DirectRunnerConfigOptions();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DirectRunnerConfigOptions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              targetParallelism_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              deadLetterTableSpec_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              tempLocation_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return feast.proto.core.RunnerProto.internal_static_feast_core_DirectRunnerConfigOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return feast.proto.core.RunnerProto.internal_static_feast_core_DirectRunnerConfigOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              feast.proto.core.RunnerProto.DirectRunnerConfigOptions.class, feast.proto.core.RunnerProto.DirectRunnerConfigOptions.Builder.class);
    }

    public static final int TARGETPARALLELISM_FIELD_NUMBER = 1;
    private int targetParallelism_;
    /**
     * <pre>
     **
     * Controls the amount of target parallelism the DirectRunner will use.
     * Defaults to the greater of the number of available processors and 3. Must be a value
     * greater than zero.
     * </pre>
     *
     * <code>int32 targetParallelism = 1;</code>
     * @return The targetParallelism.
     */
    @java.lang.Override
    public int getTargetParallelism() {
      return targetParallelism_;
    }

    public static final int DEADLETTERTABLESPEC_FIELD_NUMBER = 2;
    private volatile java.lang.Object deadLetterTableSpec_;
    /**
     * <pre>
     * BigQuery table specification, e.g. PROJECT_ID:DATASET_ID.PROJECT_ID 
     * </pre>
     *
     * <code>string deadLetterTableSpec = 2;</code>
     * @return The deadLetterTableSpec.
     */
    @java.lang.Override
    public java.lang.String getDeadLetterTableSpec() {
      java.lang.Object ref = deadLetterTableSpec_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deadLetterTableSpec_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * BigQuery table specification, e.g. PROJECT_ID:DATASET_ID.PROJECT_ID 
     * </pre>
     *
     * <code>string deadLetterTableSpec = 2;</code>
     * @return The bytes for deadLetterTableSpec.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDeadLetterTableSpecBytes() {
      java.lang.Object ref = deadLetterTableSpec_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deadLetterTableSpec_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEMPLOCATION_FIELD_NUMBER = 3;
    private volatile java.lang.Object tempLocation_;
    /**
     * <pre>
     * A pipeline level default location for storing temporary files.
     * Support Google Cloud Storage locations or local path
     * </pre>
     *
     * <code>string tempLocation = 3;</code>
     * @return The tempLocation.
     */
    @java.lang.Override
    public java.lang.String getTempLocation() {
      java.lang.Object ref = tempLocation_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tempLocation_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A pipeline level default location for storing temporary files.
     * Support Google Cloud Storage locations or local path
     * </pre>
     *
     * <code>string tempLocation = 3;</code>
     * @return The bytes for tempLocation.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTempLocationBytes() {
      java.lang.Object ref = tempLocation_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tempLocation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (targetParallelism_ != 0) {
        output.writeInt32(1, targetParallelism_);
      }
      if (!getDeadLetterTableSpecBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, deadLetterTableSpec_);
      }
      if (!getTempLocationBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, tempLocation_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (targetParallelism_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, targetParallelism_);
      }
      if (!getDeadLetterTableSpecBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, deadLetterTableSpec_);
      }
      if (!getTempLocationBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, tempLocation_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof feast.proto.core.RunnerProto.DirectRunnerConfigOptions)) {
        return super.equals(obj);
      }
      feast.proto.core.RunnerProto.DirectRunnerConfigOptions other = (feast.proto.core.RunnerProto.DirectRunnerConfigOptions) obj;

      if (getTargetParallelism()
          != other.getTargetParallelism()) return false;
      if (!getDeadLetterTableSpec()
          .equals(other.getDeadLetterTableSpec())) return false;
      if (!getTempLocation()
          .equals(other.getTempLocation())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TARGETPARALLELISM_FIELD_NUMBER;
      hash = (53 * hash) + getTargetParallelism();
      hash = (37 * hash) + DEADLETTERTABLESPEC_FIELD_NUMBER;
      hash = (53 * hash) + getDeadLetterTableSpec().hashCode();
      hash = (37 * hash) + TEMPLOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getTempLocation().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static feast.proto.core.RunnerProto.DirectRunnerConfigOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static feast.proto.core.RunnerProto.DirectRunnerConfigOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static feast.proto.core.RunnerProto.DirectRunnerConfigOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static feast.proto.core.RunnerProto.DirectRunnerConfigOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static feast.proto.core.RunnerProto.DirectRunnerConfigOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static feast.proto.core.RunnerProto.DirectRunnerConfigOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static feast.proto.core.RunnerProto.DirectRunnerConfigOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static feast.proto.core.RunnerProto.DirectRunnerConfigOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static feast.proto.core.RunnerProto.DirectRunnerConfigOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static feast.proto.core.RunnerProto.DirectRunnerConfigOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static feast.proto.core.RunnerProto.DirectRunnerConfigOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static feast.proto.core.RunnerProto.DirectRunnerConfigOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(feast.proto.core.RunnerProto.DirectRunnerConfigOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code feast.core.DirectRunnerConfigOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:feast.core.DirectRunnerConfigOptions)
        feast.proto.core.RunnerProto.DirectRunnerConfigOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return feast.proto.core.RunnerProto.internal_static_feast_core_DirectRunnerConfigOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return feast.proto.core.RunnerProto.internal_static_feast_core_DirectRunnerConfigOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                feast.proto.core.RunnerProto.DirectRunnerConfigOptions.class, feast.proto.core.RunnerProto.DirectRunnerConfigOptions.Builder.class);
      }

      // Construct using feast.proto.core.RunnerProto.DirectRunnerConfigOptions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        targetParallelism_ = 0;

        deadLetterTableSpec_ = "";

        tempLocation_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return feast.proto.core.RunnerProto.internal_static_feast_core_DirectRunnerConfigOptions_descriptor;
      }

      @java.lang.Override
      public feast.proto.core.RunnerProto.DirectRunnerConfigOptions getDefaultInstanceForType() {
        return feast.proto.core.RunnerProto.DirectRunnerConfigOptions.getDefaultInstance();
      }

      @java.lang.Override
      public feast.proto.core.RunnerProto.DirectRunnerConfigOptions build() {
        feast.proto.core.RunnerProto.DirectRunnerConfigOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public feast.proto.core.RunnerProto.DirectRunnerConfigOptions buildPartial() {
        feast.proto.core.RunnerProto.DirectRunnerConfigOptions result = new feast.proto.core.RunnerProto.DirectRunnerConfigOptions(this);
        result.targetParallelism_ = targetParallelism_;
        result.deadLetterTableSpec_ = deadLetterTableSpec_;
        result.tempLocation_ = tempLocation_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof feast.proto.core.RunnerProto.DirectRunnerConfigOptions) {
          return mergeFrom((feast.proto.core.RunnerProto.DirectRunnerConfigOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(feast.proto.core.RunnerProto.DirectRunnerConfigOptions other) {
        if (other == feast.proto.core.RunnerProto.DirectRunnerConfigOptions.getDefaultInstance()) return this;
        if (other.getTargetParallelism() != 0) {
          setTargetParallelism(other.getTargetParallelism());
        }
        if (!other.getDeadLetterTableSpec().isEmpty()) {
          deadLetterTableSpec_ = other.deadLetterTableSpec_;
          onChanged();
        }
        if (!other.getTempLocation().isEmpty()) {
          tempLocation_ = other.tempLocation_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        feast.proto.core.RunnerProto.DirectRunnerConfigOptions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (feast.proto.core.RunnerProto.DirectRunnerConfigOptions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int targetParallelism_ ;
      /**
       * <pre>
       **
       * Controls the amount of target parallelism the DirectRunner will use.
       * Defaults to the greater of the number of available processors and 3. Must be a value
       * greater than zero.
       * </pre>
       *
       * <code>int32 targetParallelism = 1;</code>
       * @return The targetParallelism.
       */
      @java.lang.Override
      public int getTargetParallelism() {
        return targetParallelism_;
      }
      /**
       * <pre>
       **
       * Controls the amount of target parallelism the DirectRunner will use.
       * Defaults to the greater of the number of available processors and 3. Must be a value
       * greater than zero.
       * </pre>
       *
       * <code>int32 targetParallelism = 1;</code>
       * @param value The targetParallelism to set.
       * @return This builder for chaining.
       */
      public Builder setTargetParallelism(int value) {
        
        targetParallelism_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       **
       * Controls the amount of target parallelism the DirectRunner will use.
       * Defaults to the greater of the number of available processors and 3. Must be a value
       * greater than zero.
       * </pre>
       *
       * <code>int32 targetParallelism = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetParallelism() {
        
        targetParallelism_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object deadLetterTableSpec_ = "";
      /**
       * <pre>
       * BigQuery table specification, e.g. PROJECT_ID:DATASET_ID.PROJECT_ID 
       * </pre>
       *
       * <code>string deadLetterTableSpec = 2;</code>
       * @return The deadLetterTableSpec.
       */
      public java.lang.String getDeadLetterTableSpec() {
        java.lang.Object ref = deadLetterTableSpec_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deadLetterTableSpec_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * BigQuery table specification, e.g. PROJECT_ID:DATASET_ID.PROJECT_ID 
       * </pre>
       *
       * <code>string deadLetterTableSpec = 2;</code>
       * @return The bytes for deadLetterTableSpec.
       */
      public com.google.protobuf.ByteString
          getDeadLetterTableSpecBytes() {
        java.lang.Object ref = deadLetterTableSpec_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deadLetterTableSpec_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * BigQuery table specification, e.g. PROJECT_ID:DATASET_ID.PROJECT_ID 
       * </pre>
       *
       * <code>string deadLetterTableSpec = 2;</code>
       * @param value The deadLetterTableSpec to set.
       * @return This builder for chaining.
       */
      public Builder setDeadLetterTableSpec(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deadLetterTableSpec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * BigQuery table specification, e.g. PROJECT_ID:DATASET_ID.PROJECT_ID 
       * </pre>
       *
       * <code>string deadLetterTableSpec = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDeadLetterTableSpec() {
        
        deadLetterTableSpec_ = getDefaultInstance().getDeadLetterTableSpec();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * BigQuery table specification, e.g. PROJECT_ID:DATASET_ID.PROJECT_ID 
       * </pre>
       *
       * <code>string deadLetterTableSpec = 2;</code>
       * @param value The bytes for deadLetterTableSpec to set.
       * @return This builder for chaining.
       */
      public Builder setDeadLetterTableSpecBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deadLetterTableSpec_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object tempLocation_ = "";
      /**
       * <pre>
       * A pipeline level default location for storing temporary files.
       * Support Google Cloud Storage locations or local path
       * </pre>
       *
       * <code>string tempLocation = 3;</code>
       * @return The tempLocation.
       */
      public java.lang.String getTempLocation() {
        java.lang.Object ref = tempLocation_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tempLocation_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A pipeline level default location for storing temporary files.
       * Support Google Cloud Storage locations or local path
       * </pre>
       *
       * <code>string tempLocation = 3;</code>
       * @return The bytes for tempLocation.
       */
      public com.google.protobuf.ByteString
          getTempLocationBytes() {
        java.lang.Object ref = tempLocation_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tempLocation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A pipeline level default location for storing temporary files.
       * Support Google Cloud Storage locations or local path
       * </pre>
       *
       * <code>string tempLocation = 3;</code>
       * @param value The tempLocation to set.
       * @return This builder for chaining.
       */
      public Builder setTempLocation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tempLocation_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A pipeline level default location for storing temporary files.
       * Support Google Cloud Storage locations or local path
       * </pre>
       *
       * <code>string tempLocation = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTempLocation() {
        
        tempLocation_ = getDefaultInstance().getTempLocation();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A pipeline level default location for storing temporary files.
       * Support Google Cloud Storage locations or local path
       * </pre>
       *
       * <code>string tempLocation = 3;</code>
       * @param value The bytes for tempLocation to set.
       * @return This builder for chaining.
       */
      public Builder setTempLocationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tempLocation_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:feast.core.DirectRunnerConfigOptions)
    }

    // @@protoc_insertion_point(class_scope:feast.core.DirectRunnerConfigOptions)
    private static final feast.proto.core.RunnerProto.DirectRunnerConfigOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new feast.proto.core.RunnerProto.DirectRunnerConfigOptions();
    }

    public static feast.proto.core.RunnerProto.DirectRunnerConfigOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DirectRunnerConfigOptions>
        PARSER = new com.google.protobuf.AbstractParser<DirectRunnerConfigOptions>() {
      @java.lang.Override
      public DirectRunnerConfigOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DirectRunnerConfigOptions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DirectRunnerConfigOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DirectRunnerConfigOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public feast.proto.core.RunnerProto.DirectRunnerConfigOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DataflowRunnerConfigOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:feast.core.DataflowRunnerConfigOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Project id to use when launching jobs. 
     * </pre>
     *
     * <code>string project = 1;</code>
     * @return The project.
     */
    java.lang.String getProject();
    /**
     * <pre>
     * Project id to use when launching jobs. 
     * </pre>
     *
     * <code>string project = 1;</code>
     * @return The bytes for project.
     */
    com.google.protobuf.ByteString
        getProjectBytes();

    /**
     * <pre>
     * The Google Compute Engine region for creating Dataflow jobs. 
     * </pre>
     *
     * <code>string region = 2;</code>
     * @return The region.
     */
    java.lang.String getRegion();
    /**
     * <pre>
     * The Google Compute Engine region for creating Dataflow jobs. 
     * </pre>
     *
     * <code>string region = 2;</code>
     * @return The bytes for region.
     */
    com.google.protobuf.ByteString
        getRegionBytes();

    /**
     * <pre>
     * GCP availability zone for operations. 
     * </pre>
     *
     * <code>string workerZone = 3;</code>
     * @return The workerZone.
     */
    java.lang.String getWorkerZone();
    /**
     * <pre>
     * GCP availability zone for operations. 
     * </pre>
     *
     * <code>string workerZone = 3;</code>
     * @return The bytes for workerZone.
     */
    com.google.protobuf.ByteString
        getWorkerZoneBytes();

    /**
     * <pre>
     * Run the job as a specific service account, instead of the default GCE robot. 
     * </pre>
     *
     * <code>string serviceAccount = 4;</code>
     * @return The serviceAccount.
     */
    java.lang.String getServiceAccount();
    /**
     * <pre>
     * Run the job as a specific service account, instead of the default GCE robot. 
     * </pre>
     *
     * <code>string serviceAccount = 4;</code>
     * @return The bytes for serviceAccount.
     */
    com.google.protobuf.ByteString
        getServiceAccountBytes();

    /**
     * <pre>
     * GCE network for launching workers. 
     * </pre>
     *
     * <code>string network = 5;</code>
     * @return The network.
     */
    java.lang.String getNetwork();
    /**
     * <pre>
     * GCE network for launching workers. 
     * </pre>
     *
     * <code>string network = 5;</code>
     * @return The bytes for network.
     */
    com.google.protobuf.ByteString
        getNetworkBytes();

    /**
     * <pre>
     * GCE subnetwork for launching workers. e.g. regions/asia-east1/subnetworks/mysubnetwork 
     * </pre>
     *
     * <code>string subnetwork = 6;</code>
     * @return The subnetwork.
     */
    java.lang.String getSubnetwork();
    /**
     * <pre>
     * GCE subnetwork for launching workers. e.g. regions/asia-east1/subnetworks/mysubnetwork 
     * </pre>
     *
     * <code>string subnetwork = 6;</code>
     * @return The bytes for subnetwork.
     */
    com.google.protobuf.ByteString
        getSubnetworkBytes();

    /**
     * <pre>
     *  Machine type to create Dataflow worker VMs as. 
     * </pre>
     *
     * <code>string workerMachineType = 7;</code>
     * @return The workerMachineType.
     */
    java.lang.String getWorkerMachineType();
    /**
     * <pre>
     *  Machine type to create Dataflow worker VMs as. 
     * </pre>
     *
     * <code>string workerMachineType = 7;</code>
     * @return The bytes for workerMachineType.
     */
    com.google.protobuf.ByteString
        getWorkerMachineTypeBytes();

    /**
     * <pre>
     * The autoscaling algorithm to use for the workerpool. 
     * </pre>
     *
     * <code>string autoscalingAlgorithm = 8;</code>
     * @return The autoscalingAlgorithm.
     */
    java.lang.String getAutoscalingAlgorithm();
    /**
     * <pre>
     * The autoscaling algorithm to use for the workerpool. 
     * </pre>
     *
     * <code>string autoscalingAlgorithm = 8;</code>
     * @return The bytes for autoscalingAlgorithm.
     */
    com.google.protobuf.ByteString
        getAutoscalingAlgorithmBytes();

    /**
     * <pre>
     * Specifies whether worker pools should be started with public IP addresses. 
     * </pre>
     *
     * <code>bool usePublicIps = 9;</code>
     * @return The usePublicIps.
     */
    boolean getUsePublicIps();

    /**
     * <pre>
     * A pipeline level default location for storing temporary files.  Support Google Cloud Storage locations,
     * e.g. gs://bucket/object
     * </pre>
     *
     * <code>string tempLocation = 10;</code>
     * @return The tempLocation.
     */
    java.lang.String getTempLocation();
    /**
     * <pre>
     * A pipeline level default location for storing temporary files.  Support Google Cloud Storage locations,
     * e.g. gs://bucket/object
     * </pre>
     *
     * <code>string tempLocation = 10;</code>
     * @return The bytes for tempLocation.
     */
    com.google.protobuf.ByteString
        getTempLocationBytes();

    /**
     * <pre>
     * The maximum number of workers to use for the workerpool. 
     * </pre>
     *
     * <code>int32 maxNumWorkers = 11;</code>
     * @return The maxNumWorkers.
     */
    int getMaxNumWorkers();

    /**
     * <pre>
     * BigQuery table specification, e.g. PROJECT_ID:DATASET_ID.PROJECT_ID 
     * </pre>
     *
     * <code>string deadLetterTableSpec = 12;</code>
     * @return The deadLetterTableSpec.
     */
    java.lang.String getDeadLetterTableSpec();
    /**
     * <pre>
     * BigQuery table specification, e.g. PROJECT_ID:DATASET_ID.PROJECT_ID 
     * </pre>
     *
     * <code>string deadLetterTableSpec = 12;</code>
     * @return The bytes for deadLetterTableSpec.
     */
    com.google.protobuf.ByteString
        getDeadLetterTableSpecBytes();

    /**
     * <pre>
     * Labels to apply to the dataflow job 
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 13;</code>
     */
    int getLabelsCount();
    /**
     * <pre>
     * Labels to apply to the dataflow job 
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 13;</code>
     */
    boolean containsLabels(
        java.lang.String key);
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getLabels();
    /**
     * <pre>
     * Labels to apply to the dataflow job 
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 13;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getLabelsMap();
    /**
     * <pre>
     * Labels to apply to the dataflow job 
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 13;</code>
     */

    java.lang.String getLabelsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * Labels to apply to the dataflow job 
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 13;</code>
     */

    java.lang.String getLabelsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * Disk size to use on each remote Compute Engine worker instance 
     * </pre>
     *
     * <code>int32 diskSizeGb = 14;</code>
     * @return The diskSizeGb.
     */
    int getDiskSizeGb();

    /**
     * <pre>
     * Run job on Dataflow Streaming Engine instead of creating worker VMs 
     * </pre>
     *
     * <code>bool enableStreamingEngine = 15;</code>
     * @return The enableStreamingEngine.
     */
    boolean getEnableStreamingEngine();

    /**
     * <pre>
     * Type of persistent disk to be used by workers 
     * </pre>
     *
     * <code>string workerDiskType = 16;</code>
     * @return The workerDiskType.
     */
    java.lang.String getWorkerDiskType();
    /**
     * <pre>
     * Type of persistent disk to be used by workers 
     * </pre>
     *
     * <code>string workerDiskType = 16;</code>
     * @return The bytes for workerDiskType.
     */
    com.google.protobuf.ByteString
        getWorkerDiskTypeBytes();
  }
  /**
   * Protobuf type {@code feast.core.DataflowRunnerConfigOptions}
   */
  public static final class DataflowRunnerConfigOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:feast.core.DataflowRunnerConfigOptions)
      DataflowRunnerConfigOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DataflowRunnerConfigOptions.newBuilder() to construct.
    private DataflowRunnerConfigOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DataflowRunnerConfigOptions() {
      project_ = "";
      region_ = "";
      workerZone_ = "";
      serviceAccount_ = "";
      network_ = "";
      subnetwork_ = "";
      workerMachineType_ = "";
      autoscalingAlgorithm_ = "";
      tempLocation_ = "";
      deadLetterTableSpec_ = "";
      workerDiskType_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DataflowRunnerConfigOptions();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DataflowRunnerConfigOptions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              project_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              region_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              workerZone_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              serviceAccount_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              network_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              subnetwork_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              workerMachineType_ = s;
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              autoscalingAlgorithm_ = s;
              break;
            }
            case 72: {

              usePublicIps_ = input.readBool();
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              tempLocation_ = s;
              break;
            }
            case 88: {

              maxNumWorkers_ = input.readInt32();
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();

              deadLetterTableSpec_ = s;
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                labels_ = com.google.protobuf.MapField.newMapField(
                    LabelsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              labels__ = input.readMessage(
                  LabelsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              labels_.getMutableMap().put(
                  labels__.getKey(), labels__.getValue());
              break;
            }
            case 112: {

              diskSizeGb_ = input.readInt32();
              break;
            }
            case 120: {

              enableStreamingEngine_ = input.readBool();
              break;
            }
            case 130: {
              java.lang.String s = input.readStringRequireUtf8();

              workerDiskType_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return feast.proto.core.RunnerProto.internal_static_feast_core_DataflowRunnerConfigOptions_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 13:
          return internalGetLabels();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return feast.proto.core.RunnerProto.internal_static_feast_core_DataflowRunnerConfigOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              feast.proto.core.RunnerProto.DataflowRunnerConfigOptions.class, feast.proto.core.RunnerProto.DataflowRunnerConfigOptions.Builder.class);
    }

    public static final int PROJECT_FIELD_NUMBER = 1;
    private volatile java.lang.Object project_;
    /**
     * <pre>
     * Project id to use when launching jobs. 
     * </pre>
     *
     * <code>string project = 1;</code>
     * @return The project.
     */
    @java.lang.Override
    public java.lang.String getProject() {
      java.lang.Object ref = project_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        project_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Project id to use when launching jobs. 
     * </pre>
     *
     * <code>string project = 1;</code>
     * @return The bytes for project.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getProjectBytes() {
      java.lang.Object ref = project_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        project_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REGION_FIELD_NUMBER = 2;
    private volatile java.lang.Object region_;
    /**
     * <pre>
     * The Google Compute Engine region for creating Dataflow jobs. 
     * </pre>
     *
     * <code>string region = 2;</code>
     * @return The region.
     */
    @java.lang.Override
    public java.lang.String getRegion() {
      java.lang.Object ref = region_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        region_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The Google Compute Engine region for creating Dataflow jobs. 
     * </pre>
     *
     * <code>string region = 2;</code>
     * @return The bytes for region.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRegionBytes() {
      java.lang.Object ref = region_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        region_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WORKERZONE_FIELD_NUMBER = 3;
    private volatile java.lang.Object workerZone_;
    /**
     * <pre>
     * GCP availability zone for operations. 
     * </pre>
     *
     * <code>string workerZone = 3;</code>
     * @return The workerZone.
     */
    @java.lang.Override
    public java.lang.String getWorkerZone() {
      java.lang.Object ref = workerZone_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        workerZone_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * GCP availability zone for operations. 
     * </pre>
     *
     * <code>string workerZone = 3;</code>
     * @return The bytes for workerZone.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getWorkerZoneBytes() {
      java.lang.Object ref = workerZone_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workerZone_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERVICEACCOUNT_FIELD_NUMBER = 4;
    private volatile java.lang.Object serviceAccount_;
    /**
     * <pre>
     * Run the job as a specific service account, instead of the default GCE robot. 
     * </pre>
     *
     * <code>string serviceAccount = 4;</code>
     * @return The serviceAccount.
     */
    @java.lang.Override
    public java.lang.String getServiceAccount() {
      java.lang.Object ref = serviceAccount_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serviceAccount_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Run the job as a specific service account, instead of the default GCE robot. 
     * </pre>
     *
     * <code>string serviceAccount = 4;</code>
     * @return The bytes for serviceAccount.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getServiceAccountBytes() {
      java.lang.Object ref = serviceAccount_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serviceAccount_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NETWORK_FIELD_NUMBER = 5;
    private volatile java.lang.Object network_;
    /**
     * <pre>
     * GCE network for launching workers. 
     * </pre>
     *
     * <code>string network = 5;</code>
     * @return The network.
     */
    @java.lang.Override
    public java.lang.String getNetwork() {
      java.lang.Object ref = network_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        network_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * GCE network for launching workers. 
     * </pre>
     *
     * <code>string network = 5;</code>
     * @return The bytes for network.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNetworkBytes() {
      java.lang.Object ref = network_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        network_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUBNETWORK_FIELD_NUMBER = 6;
    private volatile java.lang.Object subnetwork_;
    /**
     * <pre>
     * GCE subnetwork for launching workers. e.g. regions/asia-east1/subnetworks/mysubnetwork 
     * </pre>
     *
     * <code>string subnetwork = 6;</code>
     * @return The subnetwork.
     */
    @java.lang.Override
    public java.lang.String getSubnetwork() {
      java.lang.Object ref = subnetwork_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        subnetwork_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * GCE subnetwork for launching workers. e.g. regions/asia-east1/subnetworks/mysubnetwork 
     * </pre>
     *
     * <code>string subnetwork = 6;</code>
     * @return The bytes for subnetwork.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSubnetworkBytes() {
      java.lang.Object ref = subnetwork_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        subnetwork_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WORKERMACHINETYPE_FIELD_NUMBER = 7;
    private volatile java.lang.Object workerMachineType_;
    /**
     * <pre>
     *  Machine type to create Dataflow worker VMs as. 
     * </pre>
     *
     * <code>string workerMachineType = 7;</code>
     * @return The workerMachineType.
     */
    @java.lang.Override
    public java.lang.String getWorkerMachineType() {
      java.lang.Object ref = workerMachineType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        workerMachineType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *  Machine type to create Dataflow worker VMs as. 
     * </pre>
     *
     * <code>string workerMachineType = 7;</code>
     * @return The bytes for workerMachineType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getWorkerMachineTypeBytes() {
      java.lang.Object ref = workerMachineType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workerMachineType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AUTOSCALINGALGORITHM_FIELD_NUMBER = 8;
    private volatile java.lang.Object autoscalingAlgorithm_;
    /**
     * <pre>
     * The autoscaling algorithm to use for the workerpool. 
     * </pre>
     *
     * <code>string autoscalingAlgorithm = 8;</code>
     * @return The autoscalingAlgorithm.
     */
    @java.lang.Override
    public java.lang.String getAutoscalingAlgorithm() {
      java.lang.Object ref = autoscalingAlgorithm_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        autoscalingAlgorithm_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The autoscaling algorithm to use for the workerpool. 
     * </pre>
     *
     * <code>string autoscalingAlgorithm = 8;</code>
     * @return The bytes for autoscalingAlgorithm.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAutoscalingAlgorithmBytes() {
      java.lang.Object ref = autoscalingAlgorithm_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        autoscalingAlgorithm_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int USEPUBLICIPS_FIELD_NUMBER = 9;
    private boolean usePublicIps_;
    /**
     * <pre>
     * Specifies whether worker pools should be started with public IP addresses. 
     * </pre>
     *
     * <code>bool usePublicIps = 9;</code>
     * @return The usePublicIps.
     */
    @java.lang.Override
    public boolean getUsePublicIps() {
      return usePublicIps_;
    }

    public static final int TEMPLOCATION_FIELD_NUMBER = 10;
    private volatile java.lang.Object tempLocation_;
    /**
     * <pre>
     * A pipeline level default location for storing temporary files.  Support Google Cloud Storage locations,
     * e.g. gs://bucket/object
     * </pre>
     *
     * <code>string tempLocation = 10;</code>
     * @return The tempLocation.
     */
    @java.lang.Override
    public java.lang.String getTempLocation() {
      java.lang.Object ref = tempLocation_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tempLocation_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A pipeline level default location for storing temporary files.  Support Google Cloud Storage locations,
     * e.g. gs://bucket/object
     * </pre>
     *
     * <code>string tempLocation = 10;</code>
     * @return The bytes for tempLocation.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTempLocationBytes() {
      java.lang.Object ref = tempLocation_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tempLocation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAXNUMWORKERS_FIELD_NUMBER = 11;
    private int maxNumWorkers_;
    /**
     * <pre>
     * The maximum number of workers to use for the workerpool. 
     * </pre>
     *
     * <code>int32 maxNumWorkers = 11;</code>
     * @return The maxNumWorkers.
     */
    @java.lang.Override
    public int getMaxNumWorkers() {
      return maxNumWorkers_;
    }

    public static final int DEADLETTERTABLESPEC_FIELD_NUMBER = 12;
    private volatile java.lang.Object deadLetterTableSpec_;
    /**
     * <pre>
     * BigQuery table specification, e.g. PROJECT_ID:DATASET_ID.PROJECT_ID 
     * </pre>
     *
     * <code>string deadLetterTableSpec = 12;</code>
     * @return The deadLetterTableSpec.
     */
    @java.lang.Override
    public java.lang.String getDeadLetterTableSpec() {
      java.lang.Object ref = deadLetterTableSpec_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deadLetterTableSpec_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * BigQuery table specification, e.g. PROJECT_ID:DATASET_ID.PROJECT_ID 
     * </pre>
     *
     * <code>string deadLetterTableSpec = 12;</code>
     * @return The bytes for deadLetterTableSpec.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDeadLetterTableSpecBytes() {
      java.lang.Object ref = deadLetterTableSpec_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deadLetterTableSpec_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LABELS_FIELD_NUMBER = 13;
    private static final class LabelsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  feast.proto.core.RunnerProto.internal_static_feast_core_DataflowRunnerConfigOptions_LabelsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> labels_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetLabels() {
      if (labels_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LabelsDefaultEntryHolder.defaultEntry);
      }
      return labels_;
    }

    public int getLabelsCount() {
      return internalGetLabels().getMap().size();
    }
    /**
     * <pre>
     * Labels to apply to the dataflow job 
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 13;</code>
     */

    @java.lang.Override
    public boolean containsLabels(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetLabels().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getLabels() {
      return getLabelsMap();
    }
    /**
     * <pre>
     * Labels to apply to the dataflow job 
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 13;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
      return internalGetLabels().getMap();
    }
    /**
     * <pre>
     * Labels to apply to the dataflow job 
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 13;</code>
     */
    @java.lang.Override

    public java.lang.String getLabelsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Labels to apply to the dataflow job 
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 13;</code>
     */
    @java.lang.Override

    public java.lang.String getLabelsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int DISKSIZEGB_FIELD_NUMBER = 14;
    private int diskSizeGb_;
    /**
     * <pre>
     * Disk size to use on each remote Compute Engine worker instance 
     * </pre>
     *
     * <code>int32 diskSizeGb = 14;</code>
     * @return The diskSizeGb.
     */
    @java.lang.Override
    public int getDiskSizeGb() {
      return diskSizeGb_;
    }

    public static final int ENABLESTREAMINGENGINE_FIELD_NUMBER = 15;
    private boolean enableStreamingEngine_;
    /**
     * <pre>
     * Run job on Dataflow Streaming Engine instead of creating worker VMs 
     * </pre>
     *
     * <code>bool enableStreamingEngine = 15;</code>
     * @return The enableStreamingEngine.
     */
    @java.lang.Override
    public boolean getEnableStreamingEngine() {
      return enableStreamingEngine_;
    }

    public static final int WORKERDISKTYPE_FIELD_NUMBER = 16;
    private volatile java.lang.Object workerDiskType_;
    /**
     * <pre>
     * Type of persistent disk to be used by workers 
     * </pre>
     *
     * <code>string workerDiskType = 16;</code>
     * @return The workerDiskType.
     */
    @java.lang.Override
    public java.lang.String getWorkerDiskType() {
      java.lang.Object ref = workerDiskType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        workerDiskType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Type of persistent disk to be used by workers 
     * </pre>
     *
     * <code>string workerDiskType = 16;</code>
     * @return The bytes for workerDiskType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getWorkerDiskTypeBytes() {
      java.lang.Object ref = workerDiskType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workerDiskType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getProjectBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, project_);
      }
      if (!getRegionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, region_);
      }
      if (!getWorkerZoneBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, workerZone_);
      }
      if (!getServiceAccountBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, serviceAccount_);
      }
      if (!getNetworkBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, network_);
      }
      if (!getSubnetworkBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, subnetwork_);
      }
      if (!getWorkerMachineTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, workerMachineType_);
      }
      if (!getAutoscalingAlgorithmBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, autoscalingAlgorithm_);
      }
      if (usePublicIps_ != false) {
        output.writeBool(9, usePublicIps_);
      }
      if (!getTempLocationBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, tempLocation_);
      }
      if (maxNumWorkers_ != 0) {
        output.writeInt32(11, maxNumWorkers_);
      }
      if (!getDeadLetterTableSpecBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, deadLetterTableSpec_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetLabels(),
          LabelsDefaultEntryHolder.defaultEntry,
          13);
      if (diskSizeGb_ != 0) {
        output.writeInt32(14, diskSizeGb_);
      }
      if (enableStreamingEngine_ != false) {
        output.writeBool(15, enableStreamingEngine_);
      }
      if (!getWorkerDiskTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 16, workerDiskType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getProjectBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, project_);
      }
      if (!getRegionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, region_);
      }
      if (!getWorkerZoneBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, workerZone_);
      }
      if (!getServiceAccountBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, serviceAccount_);
      }
      if (!getNetworkBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, network_);
      }
      if (!getSubnetworkBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, subnetwork_);
      }
      if (!getWorkerMachineTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, workerMachineType_);
      }
      if (!getAutoscalingAlgorithmBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, autoscalingAlgorithm_);
      }
      if (usePublicIps_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, usePublicIps_);
      }
      if (!getTempLocationBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, tempLocation_);
      }
      if (maxNumWorkers_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, maxNumWorkers_);
      }
      if (!getDeadLetterTableSpecBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, deadLetterTableSpec_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetLabels().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        labels__ = LabelsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, labels__);
      }
      if (diskSizeGb_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, diskSizeGb_);
      }
      if (enableStreamingEngine_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, enableStreamingEngine_);
      }
      if (!getWorkerDiskTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, workerDiskType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof feast.proto.core.RunnerProto.DataflowRunnerConfigOptions)) {
        return super.equals(obj);
      }
      feast.proto.core.RunnerProto.DataflowRunnerConfigOptions other = (feast.proto.core.RunnerProto.DataflowRunnerConfigOptions) obj;

      if (!getProject()
          .equals(other.getProject())) return false;
      if (!getRegion()
          .equals(other.getRegion())) return false;
      if (!getWorkerZone()
          .equals(other.getWorkerZone())) return false;
      if (!getServiceAccount()
          .equals(other.getServiceAccount())) return false;
      if (!getNetwork()
          .equals(other.getNetwork())) return false;
      if (!getSubnetwork()
          .equals(other.getSubnetwork())) return false;
      if (!getWorkerMachineType()
          .equals(other.getWorkerMachineType())) return false;
      if (!getAutoscalingAlgorithm()
          .equals(other.getAutoscalingAlgorithm())) return false;
      if (getUsePublicIps()
          != other.getUsePublicIps()) return false;
      if (!getTempLocation()
          .equals(other.getTempLocation())) return false;
      if (getMaxNumWorkers()
          != other.getMaxNumWorkers()) return false;
      if (!getDeadLetterTableSpec()
          .equals(other.getDeadLetterTableSpec())) return false;
      if (!internalGetLabels().equals(
          other.internalGetLabels())) return false;
      if (getDiskSizeGb()
          != other.getDiskSizeGb()) return false;
      if (getEnableStreamingEngine()
          != other.getEnableStreamingEngine()) return false;
      if (!getWorkerDiskType()
          .equals(other.getWorkerDiskType())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PROJECT_FIELD_NUMBER;
      hash = (53 * hash) + getProject().hashCode();
      hash = (37 * hash) + REGION_FIELD_NUMBER;
      hash = (53 * hash) + getRegion().hashCode();
      hash = (37 * hash) + WORKERZONE_FIELD_NUMBER;
      hash = (53 * hash) + getWorkerZone().hashCode();
      hash = (37 * hash) + SERVICEACCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getServiceAccount().hashCode();
      hash = (37 * hash) + NETWORK_FIELD_NUMBER;
      hash = (53 * hash) + getNetwork().hashCode();
      hash = (37 * hash) + SUBNETWORK_FIELD_NUMBER;
      hash = (53 * hash) + getSubnetwork().hashCode();
      hash = (37 * hash) + WORKERMACHINETYPE_FIELD_NUMBER;
      hash = (53 * hash) + getWorkerMachineType().hashCode();
      hash = (37 * hash) + AUTOSCALINGALGORITHM_FIELD_NUMBER;
      hash = (53 * hash) + getAutoscalingAlgorithm().hashCode();
      hash = (37 * hash) + USEPUBLICIPS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getUsePublicIps());
      hash = (37 * hash) + TEMPLOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getTempLocation().hashCode();
      hash = (37 * hash) + MAXNUMWORKERS_FIELD_NUMBER;
      hash = (53 * hash) + getMaxNumWorkers();
      hash = (37 * hash) + DEADLETTERTABLESPEC_FIELD_NUMBER;
      hash = (53 * hash) + getDeadLetterTableSpec().hashCode();
      if (!internalGetLabels().getMap().isEmpty()) {
        hash = (37 * hash) + LABELS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLabels().hashCode();
      }
      hash = (37 * hash) + DISKSIZEGB_FIELD_NUMBER;
      hash = (53 * hash) + getDiskSizeGb();
      hash = (37 * hash) + ENABLESTREAMINGENGINE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnableStreamingEngine());
      hash = (37 * hash) + WORKERDISKTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getWorkerDiskType().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static feast.proto.core.RunnerProto.DataflowRunnerConfigOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static feast.proto.core.RunnerProto.DataflowRunnerConfigOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static feast.proto.core.RunnerProto.DataflowRunnerConfigOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static feast.proto.core.RunnerProto.DataflowRunnerConfigOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static feast.proto.core.RunnerProto.DataflowRunnerConfigOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static feast.proto.core.RunnerProto.DataflowRunnerConfigOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static feast.proto.core.RunnerProto.DataflowRunnerConfigOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static feast.proto.core.RunnerProto.DataflowRunnerConfigOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static feast.proto.core.RunnerProto.DataflowRunnerConfigOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static feast.proto.core.RunnerProto.DataflowRunnerConfigOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static feast.proto.core.RunnerProto.DataflowRunnerConfigOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static feast.proto.core.RunnerProto.DataflowRunnerConfigOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(feast.proto.core.RunnerProto.DataflowRunnerConfigOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code feast.core.DataflowRunnerConfigOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:feast.core.DataflowRunnerConfigOptions)
        feast.proto.core.RunnerProto.DataflowRunnerConfigOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return feast.proto.core.RunnerProto.internal_static_feast_core_DataflowRunnerConfigOptions_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 13:
            return internalGetLabels();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 13:
            return internalGetMutableLabels();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return feast.proto.core.RunnerProto.internal_static_feast_core_DataflowRunnerConfigOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                feast.proto.core.RunnerProto.DataflowRunnerConfigOptions.class, feast.proto.core.RunnerProto.DataflowRunnerConfigOptions.Builder.class);
      }

      // Construct using feast.proto.core.RunnerProto.DataflowRunnerConfigOptions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        project_ = "";

        region_ = "";

        workerZone_ = "";

        serviceAccount_ = "";

        network_ = "";

        subnetwork_ = "";

        workerMachineType_ = "";

        autoscalingAlgorithm_ = "";

        usePublicIps_ = false;

        tempLocation_ = "";

        maxNumWorkers_ = 0;

        deadLetterTableSpec_ = "";

        internalGetMutableLabels().clear();
        diskSizeGb_ = 0;

        enableStreamingEngine_ = false;

        workerDiskType_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return feast.proto.core.RunnerProto.internal_static_feast_core_DataflowRunnerConfigOptions_descriptor;
      }

      @java.lang.Override
      public feast.proto.core.RunnerProto.DataflowRunnerConfigOptions getDefaultInstanceForType() {
        return feast.proto.core.RunnerProto.DataflowRunnerConfigOptions.getDefaultInstance();
      }

      @java.lang.Override
      public feast.proto.core.RunnerProto.DataflowRunnerConfigOptions build() {
        feast.proto.core.RunnerProto.DataflowRunnerConfigOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public feast.proto.core.RunnerProto.DataflowRunnerConfigOptions buildPartial() {
        feast.proto.core.RunnerProto.DataflowRunnerConfigOptions result = new feast.proto.core.RunnerProto.DataflowRunnerConfigOptions(this);
        int from_bitField0_ = bitField0_;
        result.project_ = project_;
        result.region_ = region_;
        result.workerZone_ = workerZone_;
        result.serviceAccount_ = serviceAccount_;
        result.network_ = network_;
        result.subnetwork_ = subnetwork_;
        result.workerMachineType_ = workerMachineType_;
        result.autoscalingAlgorithm_ = autoscalingAlgorithm_;
        result.usePublicIps_ = usePublicIps_;
        result.tempLocation_ = tempLocation_;
        result.maxNumWorkers_ = maxNumWorkers_;
        result.deadLetterTableSpec_ = deadLetterTableSpec_;
        result.labels_ = internalGetLabels();
        result.labels_.makeImmutable();
        result.diskSizeGb_ = diskSizeGb_;
        result.enableStreamingEngine_ = enableStreamingEngine_;
        result.workerDiskType_ = workerDiskType_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof feast.proto.core.RunnerProto.DataflowRunnerConfigOptions) {
          return mergeFrom((feast.proto.core.RunnerProto.DataflowRunnerConfigOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(feast.proto.core.RunnerProto.DataflowRunnerConfigOptions other) {
        if (other == feast.proto.core.RunnerProto.DataflowRunnerConfigOptions.getDefaultInstance()) return this;
        if (!other.getProject().isEmpty()) {
          project_ = other.project_;
          onChanged();
        }
        if (!other.getRegion().isEmpty()) {
          region_ = other.region_;
          onChanged();
        }
        if (!other.getWorkerZone().isEmpty()) {
          workerZone_ = other.workerZone_;
          onChanged();
        }
        if (!other.getServiceAccount().isEmpty()) {
          serviceAccount_ = other.serviceAccount_;
          onChanged();
        }
        if (!other.getNetwork().isEmpty()) {
          network_ = other.network_;
          onChanged();
        }
        if (!other.getSubnetwork().isEmpty()) {
          subnetwork_ = other.subnetwork_;
          onChanged();
        }
        if (!other.getWorkerMachineType().isEmpty()) {
          workerMachineType_ = other.workerMachineType_;
          onChanged();
        }
        if (!other.getAutoscalingAlgorithm().isEmpty()) {
          autoscalingAlgorithm_ = other.autoscalingAlgorithm_;
          onChanged();
        }
        if (other.getUsePublicIps() != false) {
          setUsePublicIps(other.getUsePublicIps());
        }
        if (!other.getTempLocation().isEmpty()) {
          tempLocation_ = other.tempLocation_;
          onChanged();
        }
        if (other.getMaxNumWorkers() != 0) {
          setMaxNumWorkers(other.getMaxNumWorkers());
        }
        if (!other.getDeadLetterTableSpec().isEmpty()) {
          deadLetterTableSpec_ = other.deadLetterTableSpec_;
          onChanged();
        }
        internalGetMutableLabels().mergeFrom(
            other.internalGetLabels());
        if (other.getDiskSizeGb() != 0) {
          setDiskSizeGb(other.getDiskSizeGb());
        }
        if (other.getEnableStreamingEngine() != false) {
          setEnableStreamingEngine(other.getEnableStreamingEngine());
        }
        if (!other.getWorkerDiskType().isEmpty()) {
          workerDiskType_ = other.workerDiskType_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        feast.proto.core.RunnerProto.DataflowRunnerConfigOptions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (feast.proto.core.RunnerProto.DataflowRunnerConfigOptions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object project_ = "";
      /**
       * <pre>
       * Project id to use when launching jobs. 
       * </pre>
       *
       * <code>string project = 1;</code>
       * @return The project.
       */
      public java.lang.String getProject() {
        java.lang.Object ref = project_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          project_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Project id to use when launching jobs. 
       * </pre>
       *
       * <code>string project = 1;</code>
       * @return The bytes for project.
       */
      public com.google.protobuf.ByteString
          getProjectBytes() {
        java.lang.Object ref = project_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          project_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Project id to use when launching jobs. 
       * </pre>
       *
       * <code>string project = 1;</code>
       * @param value The project to set.
       * @return This builder for chaining.
       */
      public Builder setProject(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        project_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Project id to use when launching jobs. 
       * </pre>
       *
       * <code>string project = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearProject() {
        
        project_ = getDefaultInstance().getProject();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Project id to use when launching jobs. 
       * </pre>
       *
       * <code>string project = 1;</code>
       * @param value The bytes for project to set.
       * @return This builder for chaining.
       */
      public Builder setProjectBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        project_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object region_ = "";
      /**
       * <pre>
       * The Google Compute Engine region for creating Dataflow jobs. 
       * </pre>
       *
       * <code>string region = 2;</code>
       * @return The region.
       */
      public java.lang.String getRegion() {
        java.lang.Object ref = region_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          region_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The Google Compute Engine region for creating Dataflow jobs. 
       * </pre>
       *
       * <code>string region = 2;</code>
       * @return The bytes for region.
       */
      public com.google.protobuf.ByteString
          getRegionBytes() {
        java.lang.Object ref = region_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          region_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The Google Compute Engine region for creating Dataflow jobs. 
       * </pre>
       *
       * <code>string region = 2;</code>
       * @param value The region to set.
       * @return This builder for chaining.
       */
      public Builder setRegion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        region_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Google Compute Engine region for creating Dataflow jobs. 
       * </pre>
       *
       * <code>string region = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRegion() {
        
        region_ = getDefaultInstance().getRegion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Google Compute Engine region for creating Dataflow jobs. 
       * </pre>
       *
       * <code>string region = 2;</code>
       * @param value The bytes for region to set.
       * @return This builder for chaining.
       */
      public Builder setRegionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        region_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object workerZone_ = "";
      /**
       * <pre>
       * GCP availability zone for operations. 
       * </pre>
       *
       * <code>string workerZone = 3;</code>
       * @return The workerZone.
       */
      public java.lang.String getWorkerZone() {
        java.lang.Object ref = workerZone_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          workerZone_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * GCP availability zone for operations. 
       * </pre>
       *
       * <code>string workerZone = 3;</code>
       * @return The bytes for workerZone.
       */
      public com.google.protobuf.ByteString
          getWorkerZoneBytes() {
        java.lang.Object ref = workerZone_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          workerZone_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * GCP availability zone for operations. 
       * </pre>
       *
       * <code>string workerZone = 3;</code>
       * @param value The workerZone to set.
       * @return This builder for chaining.
       */
      public Builder setWorkerZone(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        workerZone_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * GCP availability zone for operations. 
       * </pre>
       *
       * <code>string workerZone = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearWorkerZone() {
        
        workerZone_ = getDefaultInstance().getWorkerZone();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * GCP availability zone for operations. 
       * </pre>
       *
       * <code>string workerZone = 3;</code>
       * @param value The bytes for workerZone to set.
       * @return This builder for chaining.
       */
      public Builder setWorkerZoneBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        workerZone_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object serviceAccount_ = "";
      /**
       * <pre>
       * Run the job as a specific service account, instead of the default GCE robot. 
       * </pre>
       *
       * <code>string serviceAccount = 4;</code>
       * @return The serviceAccount.
       */
      public java.lang.String getServiceAccount() {
        java.lang.Object ref = serviceAccount_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          serviceAccount_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Run the job as a specific service account, instead of the default GCE robot. 
       * </pre>
       *
       * <code>string serviceAccount = 4;</code>
       * @return The bytes for serviceAccount.
       */
      public com.google.protobuf.ByteString
          getServiceAccountBytes() {
        java.lang.Object ref = serviceAccount_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serviceAccount_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Run the job as a specific service account, instead of the default GCE robot. 
       * </pre>
       *
       * <code>string serviceAccount = 4;</code>
       * @param value The serviceAccount to set.
       * @return This builder for chaining.
       */
      public Builder setServiceAccount(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        serviceAccount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Run the job as a specific service account, instead of the default GCE robot. 
       * </pre>
       *
       * <code>string serviceAccount = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearServiceAccount() {
        
        serviceAccount_ = getDefaultInstance().getServiceAccount();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Run the job as a specific service account, instead of the default GCE robot. 
       * </pre>
       *
       * <code>string serviceAccount = 4;</code>
       * @param value The bytes for serviceAccount to set.
       * @return This builder for chaining.
       */
      public Builder setServiceAccountBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        serviceAccount_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object network_ = "";
      /**
       * <pre>
       * GCE network for launching workers. 
       * </pre>
       *
       * <code>string network = 5;</code>
       * @return The network.
       */
      public java.lang.String getNetwork() {
        java.lang.Object ref = network_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          network_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * GCE network for launching workers. 
       * </pre>
       *
       * <code>string network = 5;</code>
       * @return The bytes for network.
       */
      public com.google.protobuf.ByteString
          getNetworkBytes() {
        java.lang.Object ref = network_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          network_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * GCE network for launching workers. 
       * </pre>
       *
       * <code>string network = 5;</code>
       * @param value The network to set.
       * @return This builder for chaining.
       */
      public Builder setNetwork(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        network_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * GCE network for launching workers. 
       * </pre>
       *
       * <code>string network = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearNetwork() {
        
        network_ = getDefaultInstance().getNetwork();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * GCE network for launching workers. 
       * </pre>
       *
       * <code>string network = 5;</code>
       * @param value The bytes for network to set.
       * @return This builder for chaining.
       */
      public Builder setNetworkBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        network_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object subnetwork_ = "";
      /**
       * <pre>
       * GCE subnetwork for launching workers. e.g. regions/asia-east1/subnetworks/mysubnetwork 
       * </pre>
       *
       * <code>string subnetwork = 6;</code>
       * @return The subnetwork.
       */
      public java.lang.String getSubnetwork() {
        java.lang.Object ref = subnetwork_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          subnetwork_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * GCE subnetwork for launching workers. e.g. regions/asia-east1/subnetworks/mysubnetwork 
       * </pre>
       *
       * <code>string subnetwork = 6;</code>
       * @return The bytes for subnetwork.
       */
      public com.google.protobuf.ByteString
          getSubnetworkBytes() {
        java.lang.Object ref = subnetwork_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          subnetwork_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * GCE subnetwork for launching workers. e.g. regions/asia-east1/subnetworks/mysubnetwork 
       * </pre>
       *
       * <code>string subnetwork = 6;</code>
       * @param value The subnetwork to set.
       * @return This builder for chaining.
       */
      public Builder setSubnetwork(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        subnetwork_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * GCE subnetwork for launching workers. e.g. regions/asia-east1/subnetworks/mysubnetwork 
       * </pre>
       *
       * <code>string subnetwork = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubnetwork() {
        
        subnetwork_ = getDefaultInstance().getSubnetwork();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * GCE subnetwork for launching workers. e.g. regions/asia-east1/subnetworks/mysubnetwork 
       * </pre>
       *
       * <code>string subnetwork = 6;</code>
       * @param value The bytes for subnetwork to set.
       * @return This builder for chaining.
       */
      public Builder setSubnetworkBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        subnetwork_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object workerMachineType_ = "";
      /**
       * <pre>
       *  Machine type to create Dataflow worker VMs as. 
       * </pre>
       *
       * <code>string workerMachineType = 7;</code>
       * @return The workerMachineType.
       */
      public java.lang.String getWorkerMachineType() {
        java.lang.Object ref = workerMachineType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          workerMachineType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *  Machine type to create Dataflow worker VMs as. 
       * </pre>
       *
       * <code>string workerMachineType = 7;</code>
       * @return The bytes for workerMachineType.
       */
      public com.google.protobuf.ByteString
          getWorkerMachineTypeBytes() {
        java.lang.Object ref = workerMachineType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          workerMachineType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *  Machine type to create Dataflow worker VMs as. 
       * </pre>
       *
       * <code>string workerMachineType = 7;</code>
       * @param value The workerMachineType to set.
       * @return This builder for chaining.
       */
      public Builder setWorkerMachineType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        workerMachineType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *  Machine type to create Dataflow worker VMs as. 
       * </pre>
       *
       * <code>string workerMachineType = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearWorkerMachineType() {
        
        workerMachineType_ = getDefaultInstance().getWorkerMachineType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *  Machine type to create Dataflow worker VMs as. 
       * </pre>
       *
       * <code>string workerMachineType = 7;</code>
       * @param value The bytes for workerMachineType to set.
       * @return This builder for chaining.
       */
      public Builder setWorkerMachineTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        workerMachineType_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object autoscalingAlgorithm_ = "";
      /**
       * <pre>
       * The autoscaling algorithm to use for the workerpool. 
       * </pre>
       *
       * <code>string autoscalingAlgorithm = 8;</code>
       * @return The autoscalingAlgorithm.
       */
      public java.lang.String getAutoscalingAlgorithm() {
        java.lang.Object ref = autoscalingAlgorithm_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          autoscalingAlgorithm_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The autoscaling algorithm to use for the workerpool. 
       * </pre>
       *
       * <code>string autoscalingAlgorithm = 8;</code>
       * @return The bytes for autoscalingAlgorithm.
       */
      public com.google.protobuf.ByteString
          getAutoscalingAlgorithmBytes() {
        java.lang.Object ref = autoscalingAlgorithm_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          autoscalingAlgorithm_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The autoscaling algorithm to use for the workerpool. 
       * </pre>
       *
       * <code>string autoscalingAlgorithm = 8;</code>
       * @param value The autoscalingAlgorithm to set.
       * @return This builder for chaining.
       */
      public Builder setAutoscalingAlgorithm(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        autoscalingAlgorithm_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The autoscaling algorithm to use for the workerpool. 
       * </pre>
       *
       * <code>string autoscalingAlgorithm = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearAutoscalingAlgorithm() {
        
        autoscalingAlgorithm_ = getDefaultInstance().getAutoscalingAlgorithm();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The autoscaling algorithm to use for the workerpool. 
       * </pre>
       *
       * <code>string autoscalingAlgorithm = 8;</code>
       * @param value The bytes for autoscalingAlgorithm to set.
       * @return This builder for chaining.
       */
      public Builder setAutoscalingAlgorithmBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        autoscalingAlgorithm_ = value;
        onChanged();
        return this;
      }

      private boolean usePublicIps_ ;
      /**
       * <pre>
       * Specifies whether worker pools should be started with public IP addresses. 
       * </pre>
       *
       * <code>bool usePublicIps = 9;</code>
       * @return The usePublicIps.
       */
      @java.lang.Override
      public boolean getUsePublicIps() {
        return usePublicIps_;
      }
      /**
       * <pre>
       * Specifies whether worker pools should be started with public IP addresses. 
       * </pre>
       *
       * <code>bool usePublicIps = 9;</code>
       * @param value The usePublicIps to set.
       * @return This builder for chaining.
       */
      public Builder setUsePublicIps(boolean value) {
        
        usePublicIps_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies whether worker pools should be started with public IP addresses. 
       * </pre>
       *
       * <code>bool usePublicIps = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearUsePublicIps() {
        
        usePublicIps_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object tempLocation_ = "";
      /**
       * <pre>
       * A pipeline level default location for storing temporary files.  Support Google Cloud Storage locations,
       * e.g. gs://bucket/object
       * </pre>
       *
       * <code>string tempLocation = 10;</code>
       * @return The tempLocation.
       */
      public java.lang.String getTempLocation() {
        java.lang.Object ref = tempLocation_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tempLocation_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A pipeline level default location for storing temporary files.  Support Google Cloud Storage locations,
       * e.g. gs://bucket/object
       * </pre>
       *
       * <code>string tempLocation = 10;</code>
       * @return The bytes for tempLocation.
       */
      public com.google.protobuf.ByteString
          getTempLocationBytes() {
        java.lang.Object ref = tempLocation_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tempLocation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A pipeline level default location for storing temporary files.  Support Google Cloud Storage locations,
       * e.g. gs://bucket/object
       * </pre>
       *
       * <code>string tempLocation = 10;</code>
       * @param value The tempLocation to set.
       * @return This builder for chaining.
       */
      public Builder setTempLocation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tempLocation_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A pipeline level default location for storing temporary files.  Support Google Cloud Storage locations,
       * e.g. gs://bucket/object
       * </pre>
       *
       * <code>string tempLocation = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearTempLocation() {
        
        tempLocation_ = getDefaultInstance().getTempLocation();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A pipeline level default location for storing temporary files.  Support Google Cloud Storage locations,
       * e.g. gs://bucket/object
       * </pre>
       *
       * <code>string tempLocation = 10;</code>
       * @param value The bytes for tempLocation to set.
       * @return This builder for chaining.
       */
      public Builder setTempLocationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tempLocation_ = value;
        onChanged();
        return this;
      }

      private int maxNumWorkers_ ;
      /**
       * <pre>
       * The maximum number of workers to use for the workerpool. 
       * </pre>
       *
       * <code>int32 maxNumWorkers = 11;</code>
       * @return The maxNumWorkers.
       */
      @java.lang.Override
      public int getMaxNumWorkers() {
        return maxNumWorkers_;
      }
      /**
       * <pre>
       * The maximum number of workers to use for the workerpool. 
       * </pre>
       *
       * <code>int32 maxNumWorkers = 11;</code>
       * @param value The maxNumWorkers to set.
       * @return This builder for chaining.
       */
      public Builder setMaxNumWorkers(int value) {
        
        maxNumWorkers_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The maximum number of workers to use for the workerpool. 
       * </pre>
       *
       * <code>int32 maxNumWorkers = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxNumWorkers() {
        
        maxNumWorkers_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object deadLetterTableSpec_ = "";
      /**
       * <pre>
       * BigQuery table specification, e.g. PROJECT_ID:DATASET_ID.PROJECT_ID 
       * </pre>
       *
       * <code>string deadLetterTableSpec = 12;</code>
       * @return The deadLetterTableSpec.
       */
      public java.lang.String getDeadLetterTableSpec() {
        java.lang.Object ref = deadLetterTableSpec_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deadLetterTableSpec_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * BigQuery table specification, e.g. PROJECT_ID:DATASET_ID.PROJECT_ID 
       * </pre>
       *
       * <code>string deadLetterTableSpec = 12;</code>
       * @return The bytes for deadLetterTableSpec.
       */
      public com.google.protobuf.ByteString
          getDeadLetterTableSpecBytes() {
        java.lang.Object ref = deadLetterTableSpec_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deadLetterTableSpec_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * BigQuery table specification, e.g. PROJECT_ID:DATASET_ID.PROJECT_ID 
       * </pre>
       *
       * <code>string deadLetterTableSpec = 12;</code>
       * @param value The deadLetterTableSpec to set.
       * @return This builder for chaining.
       */
      public Builder setDeadLetterTableSpec(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deadLetterTableSpec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * BigQuery table specification, e.g. PROJECT_ID:DATASET_ID.PROJECT_ID 
       * </pre>
       *
       * <code>string deadLetterTableSpec = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearDeadLetterTableSpec() {
        
        deadLetterTableSpec_ = getDefaultInstance().getDeadLetterTableSpec();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * BigQuery table specification, e.g. PROJECT_ID:DATASET_ID.PROJECT_ID 
       * </pre>
       *
       * <code>string deadLetterTableSpec = 12;</code>
       * @param value The bytes for deadLetterTableSpec to set.
       * @return This builder for chaining.
       */
      public Builder setDeadLetterTableSpecBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deadLetterTableSpec_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> labels_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetLabels() {
        if (labels_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LabelsDefaultEntryHolder.defaultEntry);
        }
        return labels_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableLabels() {
        onChanged();;
        if (labels_ == null) {
          labels_ = com.google.protobuf.MapField.newMapField(
              LabelsDefaultEntryHolder.defaultEntry);
        }
        if (!labels_.isMutable()) {
          labels_ = labels_.copy();
        }
        return labels_;
      }

      public int getLabelsCount() {
        return internalGetLabels().getMap().size();
      }
      /**
       * <pre>
       * Labels to apply to the dataflow job 
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 13;</code>
       */

      @java.lang.Override
      public boolean containsLabels(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetLabels().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLabelsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getLabels() {
        return getLabelsMap();
      }
      /**
       * <pre>
       * Labels to apply to the dataflow job 
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 13;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
        return internalGetLabels().getMap();
      }
      /**
       * <pre>
       * Labels to apply to the dataflow job 
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 13;</code>
       */
      @java.lang.Override

      public java.lang.String getLabelsOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetLabels().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Labels to apply to the dataflow job 
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 13;</code>
       */
      @java.lang.Override

      public java.lang.String getLabelsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetLabels().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLabels() {
        internalGetMutableLabels().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Labels to apply to the dataflow job 
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 13;</code>
       */

      public Builder removeLabels(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableLabels().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableLabels() {
        return internalGetMutableLabels().getMutableMap();
      }
      /**
       * <pre>
       * Labels to apply to the dataflow job 
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 13;</code>
       */
      public Builder putLabels(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableLabels().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Labels to apply to the dataflow job 
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 13;</code>
       */

      public Builder putAllLabels(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableLabels().getMutableMap()
            .putAll(values);
        return this;
      }

      private int diskSizeGb_ ;
      /**
       * <pre>
       * Disk size to use on each remote Compute Engine worker instance 
       * </pre>
       *
       * <code>int32 diskSizeGb = 14;</code>
       * @return The diskSizeGb.
       */
      @java.lang.Override
      public int getDiskSizeGb() {
        return diskSizeGb_;
      }
      /**
       * <pre>
       * Disk size to use on each remote Compute Engine worker instance 
       * </pre>
       *
       * <code>int32 diskSizeGb = 14;</code>
       * @param value The diskSizeGb to set.
       * @return This builder for chaining.
       */
      public Builder setDiskSizeGb(int value) {
        
        diskSizeGb_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Disk size to use on each remote Compute Engine worker instance 
       * </pre>
       *
       * <code>int32 diskSizeGb = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearDiskSizeGb() {
        
        diskSizeGb_ = 0;
        onChanged();
        return this;
      }

      private boolean enableStreamingEngine_ ;
      /**
       * <pre>
       * Run job on Dataflow Streaming Engine instead of creating worker VMs 
       * </pre>
       *
       * <code>bool enableStreamingEngine = 15;</code>
       * @return The enableStreamingEngine.
       */
      @java.lang.Override
      public boolean getEnableStreamingEngine() {
        return enableStreamingEngine_;
      }
      /**
       * <pre>
       * Run job on Dataflow Streaming Engine instead of creating worker VMs 
       * </pre>
       *
       * <code>bool enableStreamingEngine = 15;</code>
       * @param value The enableStreamingEngine to set.
       * @return This builder for chaining.
       */
      public Builder setEnableStreamingEngine(boolean value) {
        
        enableStreamingEngine_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Run job on Dataflow Streaming Engine instead of creating worker VMs 
       * </pre>
       *
       * <code>bool enableStreamingEngine = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnableStreamingEngine() {
        
        enableStreamingEngine_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object workerDiskType_ = "";
      /**
       * <pre>
       * Type of persistent disk to be used by workers 
       * </pre>
       *
       * <code>string workerDiskType = 16;</code>
       * @return The workerDiskType.
       */
      public java.lang.String getWorkerDiskType() {
        java.lang.Object ref = workerDiskType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          workerDiskType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Type of persistent disk to be used by workers 
       * </pre>
       *
       * <code>string workerDiskType = 16;</code>
       * @return The bytes for workerDiskType.
       */
      public com.google.protobuf.ByteString
          getWorkerDiskTypeBytes() {
        java.lang.Object ref = workerDiskType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          workerDiskType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Type of persistent disk to be used by workers 
       * </pre>
       *
       * <code>string workerDiskType = 16;</code>
       * @param value The workerDiskType to set.
       * @return This builder for chaining.
       */
      public Builder setWorkerDiskType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        workerDiskType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of persistent disk to be used by workers 
       * </pre>
       *
       * <code>string workerDiskType = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearWorkerDiskType() {
        
        workerDiskType_ = getDefaultInstance().getWorkerDiskType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of persistent disk to be used by workers 
       * </pre>
       *
       * <code>string workerDiskType = 16;</code>
       * @param value The bytes for workerDiskType to set.
       * @return This builder for chaining.
       */
      public Builder setWorkerDiskTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        workerDiskType_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:feast.core.DataflowRunnerConfigOptions)
    }

    // @@protoc_insertion_point(class_scope:feast.core.DataflowRunnerConfigOptions)
    private static final feast.proto.core.RunnerProto.DataflowRunnerConfigOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new feast.proto.core.RunnerProto.DataflowRunnerConfigOptions();
    }

    public static feast.proto.core.RunnerProto.DataflowRunnerConfigOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DataflowRunnerConfigOptions>
        PARSER = new com.google.protobuf.AbstractParser<DataflowRunnerConfigOptions>() {
      @java.lang.Override
      public DataflowRunnerConfigOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DataflowRunnerConfigOptions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DataflowRunnerConfigOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DataflowRunnerConfigOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public feast.proto.core.RunnerProto.DataflowRunnerConfigOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_feast_core_DirectRunnerConfigOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_feast_core_DirectRunnerConfigOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_feast_core_DataflowRunnerConfigOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_feast_core_DataflowRunnerConfigOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_feast_core_DataflowRunnerConfigOptions_LabelsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_feast_core_DataflowRunnerConfigOptions_LabelsEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027feast/core/Runner.proto\022\nfeast.core\"i\n" +
      "\031DirectRunnerConfigOptions\022\031\n\021targetPara" +
      "llelism\030\001 \001(\005\022\033\n\023deadLetterTableSpec\030\002 \001" +
      "(\t\022\024\n\014tempLocation\030\003 \001(\t\"\347\003\n\033DataflowRun" +
      "nerConfigOptions\022\017\n\007project\030\001 \001(\t\022\016\n\006reg" +
      "ion\030\002 \001(\t\022\022\n\nworkerZone\030\003 \001(\t\022\026\n\016service" +
      "Account\030\004 \001(\t\022\017\n\007network\030\005 \001(\t\022\022\n\nsubnet" +
      "work\030\006 \001(\t\022\031\n\021workerMachineType\030\007 \001(\t\022\034\n" +
      "\024autoscalingAlgorithm\030\010 \001(\t\022\024\n\014usePublic" +
      "Ips\030\t \001(\010\022\024\n\014tempLocation\030\n \001(\t\022\025\n\rmaxNu" +
      "mWorkers\030\013 \001(\005\022\033\n\023deadLetterTableSpec\030\014 " +
      "\001(\t\022C\n\006labels\030\r \003(\01323.feast.core.Dataflo" +
      "wRunnerConfigOptions.LabelsEntry\022\022\n\ndisk" +
      "SizeGb\030\016 \001(\005\022\035\n\025enableStreamingEngine\030\017 " +
      "\001(\010\022\026\n\016workerDiskType\030\020 \001(\t\032-\n\013LabelsEnt" +
      "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001BT\n\020fe" +
      "ast.proto.coreB\013RunnerProtoZ3github.com/" +
      "feast-dev/feast/sdk/go/protos/feast/core" +
      "b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_feast_core_DirectRunnerConfigOptions_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_feast_core_DirectRunnerConfigOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_feast_core_DirectRunnerConfigOptions_descriptor,
        new java.lang.String[] { "TargetParallelism", "DeadLetterTableSpec", "TempLocation", });
    internal_static_feast_core_DataflowRunnerConfigOptions_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_feast_core_DataflowRunnerConfigOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_feast_core_DataflowRunnerConfigOptions_descriptor,
        new java.lang.String[] { "Project", "Region", "WorkerZone", "ServiceAccount", "Network", "Subnetwork", "WorkerMachineType", "AutoscalingAlgorithm", "UsePublicIps", "TempLocation", "MaxNumWorkers", "DeadLetterTableSpec", "Labels", "DiskSizeGb", "EnableStreamingEngine", "WorkerDiskType", });
    internal_static_feast_core_DataflowRunnerConfigOptions_LabelsEntry_descriptor =
      internal_static_feast_core_DataflowRunnerConfigOptions_descriptor.getNestedTypes().get(0);
    internal_static_feast_core_DataflowRunnerConfigOptions_LabelsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_feast_core_DataflowRunnerConfigOptions_LabelsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
