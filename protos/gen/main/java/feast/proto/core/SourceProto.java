// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: feast/core/Source.proto

package feast.proto.core;

public final class SourceProto {
  private SourceProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code feast.core.SourceType}
   */
  public enum SourceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>INVALID = 0;</code>
     */
    INVALID(0),
    /**
     * <code>KAFKA = 1;</code>
     */
    KAFKA(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>INVALID = 0;</code>
     */
    public static final int INVALID_VALUE = 0;
    /**
     * <code>KAFKA = 1;</code>
     */
    public static final int KAFKA_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SourceType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SourceType forNumber(int value) {
      switch (value) {
        case 0: return INVALID;
        case 1: return KAFKA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SourceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SourceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SourceType>() {
            public SourceType findValueByNumber(int number) {
              return SourceType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return feast.proto.core.SourceProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final SourceType[] VALUES = values();

    public static SourceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SourceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:feast.core.SourceType)
  }

  public interface SourceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:feast.core.Source)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The kind of data source Feast should connect to in order to retrieve FeatureRow value
     * </pre>
     *
     * <code>.feast.core.SourceType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * The kind of data source Feast should connect to in order to retrieve FeatureRow value
     * </pre>
     *
     * <code>.feast.core.SourceType type = 1;</code>
     * @return The type.
     */
    feast.proto.core.SourceProto.SourceType getType();

    /**
     * <code>.feast.core.KafkaSourceConfig kafka_source_config = 2;</code>
     * @return Whether the kafkaSourceConfig field is set.
     */
    boolean hasKafkaSourceConfig();
    /**
     * <code>.feast.core.KafkaSourceConfig kafka_source_config = 2;</code>
     * @return The kafkaSourceConfig.
     */
    feast.proto.core.SourceProto.KafkaSourceConfig getKafkaSourceConfig();
    /**
     * <code>.feast.core.KafkaSourceConfig kafka_source_config = 2;</code>
     */
    feast.proto.core.SourceProto.KafkaSourceConfigOrBuilder getKafkaSourceConfigOrBuilder();

    public feast.proto.core.SourceProto.Source.SourceConfigCase getSourceConfigCase();
  }
  /**
   * Protobuf type {@code feast.core.Source}
   */
  public static final class Source extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:feast.core.Source)
      SourceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Source.newBuilder() to construct.
    private Source(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Source() {
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Source();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Source(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              feast.proto.core.SourceProto.KafkaSourceConfig.Builder subBuilder = null;
              if (sourceConfigCase_ == 2) {
                subBuilder = ((feast.proto.core.SourceProto.KafkaSourceConfig) sourceConfig_).toBuilder();
              }
              sourceConfig_ =
                  input.readMessage(feast.proto.core.SourceProto.KafkaSourceConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((feast.proto.core.SourceProto.KafkaSourceConfig) sourceConfig_);
                sourceConfig_ = subBuilder.buildPartial();
              }
              sourceConfigCase_ = 2;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return feast.proto.core.SourceProto.internal_static_feast_core_Source_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return feast.proto.core.SourceProto.internal_static_feast_core_Source_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              feast.proto.core.SourceProto.Source.class, feast.proto.core.SourceProto.Source.Builder.class);
    }

    private int sourceConfigCase_ = 0;
    private java.lang.Object sourceConfig_;
    public enum SourceConfigCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      KAFKA_SOURCE_CONFIG(2),
      SOURCECONFIG_NOT_SET(0);
      private final int value;
      private SourceConfigCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SourceConfigCase valueOf(int value) {
        return forNumber(value);
      }

      public static SourceConfigCase forNumber(int value) {
        switch (value) {
          case 2: return KAFKA_SOURCE_CONFIG;
          case 0: return SOURCECONFIG_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public SourceConfigCase
    getSourceConfigCase() {
      return SourceConfigCase.forNumber(
          sourceConfigCase_);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * The kind of data source Feast should connect to in order to retrieve FeatureRow value
     * </pre>
     *
     * <code>.feast.core.SourceType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * The kind of data source Feast should connect to in order to retrieve FeatureRow value
     * </pre>
     *
     * <code>.feast.core.SourceType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public feast.proto.core.SourceProto.SourceType getType() {
      @SuppressWarnings("deprecation")
      feast.proto.core.SourceProto.SourceType result = feast.proto.core.SourceProto.SourceType.valueOf(type_);
      return result == null ? feast.proto.core.SourceProto.SourceType.UNRECOGNIZED : result;
    }

    public static final int KAFKA_SOURCE_CONFIG_FIELD_NUMBER = 2;
    /**
     * <code>.feast.core.KafkaSourceConfig kafka_source_config = 2;</code>
     * @return Whether the kafkaSourceConfig field is set.
     */
    @java.lang.Override
    public boolean hasKafkaSourceConfig() {
      return sourceConfigCase_ == 2;
    }
    /**
     * <code>.feast.core.KafkaSourceConfig kafka_source_config = 2;</code>
     * @return The kafkaSourceConfig.
     */
    @java.lang.Override
    public feast.proto.core.SourceProto.KafkaSourceConfig getKafkaSourceConfig() {
      if (sourceConfigCase_ == 2) {
         return (feast.proto.core.SourceProto.KafkaSourceConfig) sourceConfig_;
      }
      return feast.proto.core.SourceProto.KafkaSourceConfig.getDefaultInstance();
    }
    /**
     * <code>.feast.core.KafkaSourceConfig kafka_source_config = 2;</code>
     */
    @java.lang.Override
    public feast.proto.core.SourceProto.KafkaSourceConfigOrBuilder getKafkaSourceConfigOrBuilder() {
      if (sourceConfigCase_ == 2) {
         return (feast.proto.core.SourceProto.KafkaSourceConfig) sourceConfig_;
      }
      return feast.proto.core.SourceProto.KafkaSourceConfig.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != feast.proto.core.SourceProto.SourceType.INVALID.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (sourceConfigCase_ == 2) {
        output.writeMessage(2, (feast.proto.core.SourceProto.KafkaSourceConfig) sourceConfig_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != feast.proto.core.SourceProto.SourceType.INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (sourceConfigCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (feast.proto.core.SourceProto.KafkaSourceConfig) sourceConfig_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof feast.proto.core.SourceProto.Source)) {
        return super.equals(obj);
      }
      feast.proto.core.SourceProto.Source other = (feast.proto.core.SourceProto.Source) obj;

      if (type_ != other.type_) return false;
      if (!getSourceConfigCase().equals(other.getSourceConfigCase())) return false;
      switch (sourceConfigCase_) {
        case 2:
          if (!getKafkaSourceConfig()
              .equals(other.getKafkaSourceConfig())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      switch (sourceConfigCase_) {
        case 2:
          hash = (37 * hash) + KAFKA_SOURCE_CONFIG_FIELD_NUMBER;
          hash = (53 * hash) + getKafkaSourceConfig().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static feast.proto.core.SourceProto.Source parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static feast.proto.core.SourceProto.Source parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static feast.proto.core.SourceProto.Source parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static feast.proto.core.SourceProto.Source parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static feast.proto.core.SourceProto.Source parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static feast.proto.core.SourceProto.Source parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static feast.proto.core.SourceProto.Source parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static feast.proto.core.SourceProto.Source parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static feast.proto.core.SourceProto.Source parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static feast.proto.core.SourceProto.Source parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static feast.proto.core.SourceProto.Source parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static feast.proto.core.SourceProto.Source parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(feast.proto.core.SourceProto.Source prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code feast.core.Source}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:feast.core.Source)
        feast.proto.core.SourceProto.SourceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return feast.proto.core.SourceProto.internal_static_feast_core_Source_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return feast.proto.core.SourceProto.internal_static_feast_core_Source_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                feast.proto.core.SourceProto.Source.class, feast.proto.core.SourceProto.Source.Builder.class);
      }

      // Construct using feast.proto.core.SourceProto.Source.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        sourceConfigCase_ = 0;
        sourceConfig_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return feast.proto.core.SourceProto.internal_static_feast_core_Source_descriptor;
      }

      @java.lang.Override
      public feast.proto.core.SourceProto.Source getDefaultInstanceForType() {
        return feast.proto.core.SourceProto.Source.getDefaultInstance();
      }

      @java.lang.Override
      public feast.proto.core.SourceProto.Source build() {
        feast.proto.core.SourceProto.Source result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public feast.proto.core.SourceProto.Source buildPartial() {
        feast.proto.core.SourceProto.Source result = new feast.proto.core.SourceProto.Source(this);
        result.type_ = type_;
        if (sourceConfigCase_ == 2) {
          if (kafkaSourceConfigBuilder_ == null) {
            result.sourceConfig_ = sourceConfig_;
          } else {
            result.sourceConfig_ = kafkaSourceConfigBuilder_.build();
          }
        }
        result.sourceConfigCase_ = sourceConfigCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof feast.proto.core.SourceProto.Source) {
          return mergeFrom((feast.proto.core.SourceProto.Source)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(feast.proto.core.SourceProto.Source other) {
        if (other == feast.proto.core.SourceProto.Source.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        switch (other.getSourceConfigCase()) {
          case KAFKA_SOURCE_CONFIG: {
            mergeKafkaSourceConfig(other.getKafkaSourceConfig());
            break;
          }
          case SOURCECONFIG_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        feast.proto.core.SourceProto.Source parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (feast.proto.core.SourceProto.Source) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int sourceConfigCase_ = 0;
      private java.lang.Object sourceConfig_;
      public SourceConfigCase
          getSourceConfigCase() {
        return SourceConfigCase.forNumber(
            sourceConfigCase_);
      }

      public Builder clearSourceConfig() {
        sourceConfigCase_ = 0;
        sourceConfig_ = null;
        onChanged();
        return this;
      }


      private int type_ = 0;
      /**
       * <pre>
       * The kind of data source Feast should connect to in order to retrieve FeatureRow value
       * </pre>
       *
       * <code>.feast.core.SourceType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * The kind of data source Feast should connect to in order to retrieve FeatureRow value
       * </pre>
       *
       * <code>.feast.core.SourceType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The kind of data source Feast should connect to in order to retrieve FeatureRow value
       * </pre>
       *
       * <code>.feast.core.SourceType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public feast.proto.core.SourceProto.SourceType getType() {
        @SuppressWarnings("deprecation")
        feast.proto.core.SourceProto.SourceType result = feast.proto.core.SourceProto.SourceType.valueOf(type_);
        return result == null ? feast.proto.core.SourceProto.SourceType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The kind of data source Feast should connect to in order to retrieve FeatureRow value
       * </pre>
       *
       * <code>.feast.core.SourceType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(feast.proto.core.SourceProto.SourceType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The kind of data source Feast should connect to in order to retrieve FeatureRow value
       * </pre>
       *
       * <code>.feast.core.SourceType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          feast.proto.core.SourceProto.KafkaSourceConfig, feast.proto.core.SourceProto.KafkaSourceConfig.Builder, feast.proto.core.SourceProto.KafkaSourceConfigOrBuilder> kafkaSourceConfigBuilder_;
      /**
       * <code>.feast.core.KafkaSourceConfig kafka_source_config = 2;</code>
       * @return Whether the kafkaSourceConfig field is set.
       */
      @java.lang.Override
      public boolean hasKafkaSourceConfig() {
        return sourceConfigCase_ == 2;
      }
      /**
       * <code>.feast.core.KafkaSourceConfig kafka_source_config = 2;</code>
       * @return The kafkaSourceConfig.
       */
      @java.lang.Override
      public feast.proto.core.SourceProto.KafkaSourceConfig getKafkaSourceConfig() {
        if (kafkaSourceConfigBuilder_ == null) {
          if (sourceConfigCase_ == 2) {
            return (feast.proto.core.SourceProto.KafkaSourceConfig) sourceConfig_;
          }
          return feast.proto.core.SourceProto.KafkaSourceConfig.getDefaultInstance();
        } else {
          if (sourceConfigCase_ == 2) {
            return kafkaSourceConfigBuilder_.getMessage();
          }
          return feast.proto.core.SourceProto.KafkaSourceConfig.getDefaultInstance();
        }
      }
      /**
       * <code>.feast.core.KafkaSourceConfig kafka_source_config = 2;</code>
       */
      public Builder setKafkaSourceConfig(feast.proto.core.SourceProto.KafkaSourceConfig value) {
        if (kafkaSourceConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sourceConfig_ = value;
          onChanged();
        } else {
          kafkaSourceConfigBuilder_.setMessage(value);
        }
        sourceConfigCase_ = 2;
        return this;
      }
      /**
       * <code>.feast.core.KafkaSourceConfig kafka_source_config = 2;</code>
       */
      public Builder setKafkaSourceConfig(
          feast.proto.core.SourceProto.KafkaSourceConfig.Builder builderForValue) {
        if (kafkaSourceConfigBuilder_ == null) {
          sourceConfig_ = builderForValue.build();
          onChanged();
        } else {
          kafkaSourceConfigBuilder_.setMessage(builderForValue.build());
        }
        sourceConfigCase_ = 2;
        return this;
      }
      /**
       * <code>.feast.core.KafkaSourceConfig kafka_source_config = 2;</code>
       */
      public Builder mergeKafkaSourceConfig(feast.proto.core.SourceProto.KafkaSourceConfig value) {
        if (kafkaSourceConfigBuilder_ == null) {
          if (sourceConfigCase_ == 2 &&
              sourceConfig_ != feast.proto.core.SourceProto.KafkaSourceConfig.getDefaultInstance()) {
            sourceConfig_ = feast.proto.core.SourceProto.KafkaSourceConfig.newBuilder((feast.proto.core.SourceProto.KafkaSourceConfig) sourceConfig_)
                .mergeFrom(value).buildPartial();
          } else {
            sourceConfig_ = value;
          }
          onChanged();
        } else {
          if (sourceConfigCase_ == 2) {
            kafkaSourceConfigBuilder_.mergeFrom(value);
          }
          kafkaSourceConfigBuilder_.setMessage(value);
        }
        sourceConfigCase_ = 2;
        return this;
      }
      /**
       * <code>.feast.core.KafkaSourceConfig kafka_source_config = 2;</code>
       */
      public Builder clearKafkaSourceConfig() {
        if (kafkaSourceConfigBuilder_ == null) {
          if (sourceConfigCase_ == 2) {
            sourceConfigCase_ = 0;
            sourceConfig_ = null;
            onChanged();
          }
        } else {
          if (sourceConfigCase_ == 2) {
            sourceConfigCase_ = 0;
            sourceConfig_ = null;
          }
          kafkaSourceConfigBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.feast.core.KafkaSourceConfig kafka_source_config = 2;</code>
       */
      public feast.proto.core.SourceProto.KafkaSourceConfig.Builder getKafkaSourceConfigBuilder() {
        return getKafkaSourceConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>.feast.core.KafkaSourceConfig kafka_source_config = 2;</code>
       */
      @java.lang.Override
      public feast.proto.core.SourceProto.KafkaSourceConfigOrBuilder getKafkaSourceConfigOrBuilder() {
        if ((sourceConfigCase_ == 2) && (kafkaSourceConfigBuilder_ != null)) {
          return kafkaSourceConfigBuilder_.getMessageOrBuilder();
        } else {
          if (sourceConfigCase_ == 2) {
            return (feast.proto.core.SourceProto.KafkaSourceConfig) sourceConfig_;
          }
          return feast.proto.core.SourceProto.KafkaSourceConfig.getDefaultInstance();
        }
      }
      /**
       * <code>.feast.core.KafkaSourceConfig kafka_source_config = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          feast.proto.core.SourceProto.KafkaSourceConfig, feast.proto.core.SourceProto.KafkaSourceConfig.Builder, feast.proto.core.SourceProto.KafkaSourceConfigOrBuilder> 
          getKafkaSourceConfigFieldBuilder() {
        if (kafkaSourceConfigBuilder_ == null) {
          if (!(sourceConfigCase_ == 2)) {
            sourceConfig_ = feast.proto.core.SourceProto.KafkaSourceConfig.getDefaultInstance();
          }
          kafkaSourceConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              feast.proto.core.SourceProto.KafkaSourceConfig, feast.proto.core.SourceProto.KafkaSourceConfig.Builder, feast.proto.core.SourceProto.KafkaSourceConfigOrBuilder>(
                  (feast.proto.core.SourceProto.KafkaSourceConfig) sourceConfig_,
                  getParentForChildren(),
                  isClean());
          sourceConfig_ = null;
        }
        sourceConfigCase_ = 2;
        onChanged();;
        return kafkaSourceConfigBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:feast.core.Source)
    }

    // @@protoc_insertion_point(class_scope:feast.core.Source)
    private static final feast.proto.core.SourceProto.Source DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new feast.proto.core.SourceProto.Source();
    }

    public static feast.proto.core.SourceProto.Source getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Source>
        PARSER = new com.google.protobuf.AbstractParser<Source>() {
      @java.lang.Override
      public Source parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Source(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Source> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Source> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public feast.proto.core.SourceProto.Source getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KafkaSourceConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:feast.core.KafkaSourceConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Comma separated list of Kafka bootstrap servers. Used for feature sets without a defined source host[:port]]
     * </pre>
     *
     * <code>string bootstrap_servers = 1;</code>
     * @return The bootstrapServers.
     */
    java.lang.String getBootstrapServers();
    /**
     * <pre>
     * Comma separated list of Kafka bootstrap servers. Used for feature sets without a defined source host[:port]]
     * </pre>
     *
     * <code>string bootstrap_servers = 1;</code>
     * @return The bytes for bootstrapServers.
     */
    com.google.protobuf.ByteString
        getBootstrapServersBytes();

    /**
     * <pre>
     * Kafka topic to use for feature sets without user defined topics
     * </pre>
     *
     * <code>string topic = 2;</code>
     * @return The topic.
     */
    java.lang.String getTopic();
    /**
     * <pre>
     * Kafka topic to use for feature sets without user defined topics
     * </pre>
     *
     * <code>string topic = 2;</code>
     * @return The bytes for topic.
     */
    com.google.protobuf.ByteString
        getTopicBytes();

    /**
     * <pre>
     * Number of Kafka partitions to to use for managed feature stream.
     * </pre>
     *
     * <code>int32 partitions = 3;</code>
     * @return The partitions.
     */
    int getPartitions();

    /**
     * <pre>
     * Defines the number of copies of managed feature stream Kafka.
     * </pre>
     *
     * <code>int32 replicationFactor = 4;</code>
     * @return The replicationFactor.
     */
    int getReplicationFactor();
  }
  /**
   * Protobuf type {@code feast.core.KafkaSourceConfig}
   */
  public static final class KafkaSourceConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:feast.core.KafkaSourceConfig)
      KafkaSourceConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KafkaSourceConfig.newBuilder() to construct.
    private KafkaSourceConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KafkaSourceConfig() {
      bootstrapServers_ = "";
      topic_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new KafkaSourceConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KafkaSourceConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              bootstrapServers_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              topic_ = s;
              break;
            }
            case 24: {

              partitions_ = input.readInt32();
              break;
            }
            case 32: {

              replicationFactor_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return feast.proto.core.SourceProto.internal_static_feast_core_KafkaSourceConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return feast.proto.core.SourceProto.internal_static_feast_core_KafkaSourceConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              feast.proto.core.SourceProto.KafkaSourceConfig.class, feast.proto.core.SourceProto.KafkaSourceConfig.Builder.class);
    }

    public static final int BOOTSTRAP_SERVERS_FIELD_NUMBER = 1;
    private volatile java.lang.Object bootstrapServers_;
    /**
     * <pre>
     * Comma separated list of Kafka bootstrap servers. Used for feature sets without a defined source host[:port]]
     * </pre>
     *
     * <code>string bootstrap_servers = 1;</code>
     * @return The bootstrapServers.
     */
    @java.lang.Override
    public java.lang.String getBootstrapServers() {
      java.lang.Object ref = bootstrapServers_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        bootstrapServers_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Comma separated list of Kafka bootstrap servers. Used for feature sets without a defined source host[:port]]
     * </pre>
     *
     * <code>string bootstrap_servers = 1;</code>
     * @return The bytes for bootstrapServers.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBootstrapServersBytes() {
      java.lang.Object ref = bootstrapServers_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bootstrapServers_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOPIC_FIELD_NUMBER = 2;
    private volatile java.lang.Object topic_;
    /**
     * <pre>
     * Kafka topic to use for feature sets without user defined topics
     * </pre>
     *
     * <code>string topic = 2;</code>
     * @return The topic.
     */
    @java.lang.Override
    public java.lang.String getTopic() {
      java.lang.Object ref = topic_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        topic_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Kafka topic to use for feature sets without user defined topics
     * </pre>
     *
     * <code>string topic = 2;</code>
     * @return The bytes for topic.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTopicBytes() {
      java.lang.Object ref = topic_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        topic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARTITIONS_FIELD_NUMBER = 3;
    private int partitions_;
    /**
     * <pre>
     * Number of Kafka partitions to to use for managed feature stream.
     * </pre>
     *
     * <code>int32 partitions = 3;</code>
     * @return The partitions.
     */
    @java.lang.Override
    public int getPartitions() {
      return partitions_;
    }

    public static final int REPLICATIONFACTOR_FIELD_NUMBER = 4;
    private int replicationFactor_;
    /**
     * <pre>
     * Defines the number of copies of managed feature stream Kafka.
     * </pre>
     *
     * <code>int32 replicationFactor = 4;</code>
     * @return The replicationFactor.
     */
    @java.lang.Override
    public int getReplicationFactor() {
      return replicationFactor_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getBootstrapServersBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, bootstrapServers_);
      }
      if (!getTopicBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, topic_);
      }
      if (partitions_ != 0) {
        output.writeInt32(3, partitions_);
      }
      if (replicationFactor_ != 0) {
        output.writeInt32(4, replicationFactor_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getBootstrapServersBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, bootstrapServers_);
      }
      if (!getTopicBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, topic_);
      }
      if (partitions_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, partitions_);
      }
      if (replicationFactor_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, replicationFactor_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof feast.proto.core.SourceProto.KafkaSourceConfig)) {
        return super.equals(obj);
      }
      feast.proto.core.SourceProto.KafkaSourceConfig other = (feast.proto.core.SourceProto.KafkaSourceConfig) obj;

      if (!getBootstrapServers()
          .equals(other.getBootstrapServers())) return false;
      if (!getTopic()
          .equals(other.getTopic())) return false;
      if (getPartitions()
          != other.getPartitions()) return false;
      if (getReplicationFactor()
          != other.getReplicationFactor()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BOOTSTRAP_SERVERS_FIELD_NUMBER;
      hash = (53 * hash) + getBootstrapServers().hashCode();
      hash = (37 * hash) + TOPIC_FIELD_NUMBER;
      hash = (53 * hash) + getTopic().hashCode();
      hash = (37 * hash) + PARTITIONS_FIELD_NUMBER;
      hash = (53 * hash) + getPartitions();
      hash = (37 * hash) + REPLICATIONFACTOR_FIELD_NUMBER;
      hash = (53 * hash) + getReplicationFactor();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static feast.proto.core.SourceProto.KafkaSourceConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static feast.proto.core.SourceProto.KafkaSourceConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static feast.proto.core.SourceProto.KafkaSourceConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static feast.proto.core.SourceProto.KafkaSourceConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static feast.proto.core.SourceProto.KafkaSourceConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static feast.proto.core.SourceProto.KafkaSourceConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static feast.proto.core.SourceProto.KafkaSourceConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static feast.proto.core.SourceProto.KafkaSourceConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static feast.proto.core.SourceProto.KafkaSourceConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static feast.proto.core.SourceProto.KafkaSourceConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static feast.proto.core.SourceProto.KafkaSourceConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static feast.proto.core.SourceProto.KafkaSourceConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(feast.proto.core.SourceProto.KafkaSourceConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code feast.core.KafkaSourceConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:feast.core.KafkaSourceConfig)
        feast.proto.core.SourceProto.KafkaSourceConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return feast.proto.core.SourceProto.internal_static_feast_core_KafkaSourceConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return feast.proto.core.SourceProto.internal_static_feast_core_KafkaSourceConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                feast.proto.core.SourceProto.KafkaSourceConfig.class, feast.proto.core.SourceProto.KafkaSourceConfig.Builder.class);
      }

      // Construct using feast.proto.core.SourceProto.KafkaSourceConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bootstrapServers_ = "";

        topic_ = "";

        partitions_ = 0;

        replicationFactor_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return feast.proto.core.SourceProto.internal_static_feast_core_KafkaSourceConfig_descriptor;
      }

      @java.lang.Override
      public feast.proto.core.SourceProto.KafkaSourceConfig getDefaultInstanceForType() {
        return feast.proto.core.SourceProto.KafkaSourceConfig.getDefaultInstance();
      }

      @java.lang.Override
      public feast.proto.core.SourceProto.KafkaSourceConfig build() {
        feast.proto.core.SourceProto.KafkaSourceConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public feast.proto.core.SourceProto.KafkaSourceConfig buildPartial() {
        feast.proto.core.SourceProto.KafkaSourceConfig result = new feast.proto.core.SourceProto.KafkaSourceConfig(this);
        result.bootstrapServers_ = bootstrapServers_;
        result.topic_ = topic_;
        result.partitions_ = partitions_;
        result.replicationFactor_ = replicationFactor_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof feast.proto.core.SourceProto.KafkaSourceConfig) {
          return mergeFrom((feast.proto.core.SourceProto.KafkaSourceConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(feast.proto.core.SourceProto.KafkaSourceConfig other) {
        if (other == feast.proto.core.SourceProto.KafkaSourceConfig.getDefaultInstance()) return this;
        if (!other.getBootstrapServers().isEmpty()) {
          bootstrapServers_ = other.bootstrapServers_;
          onChanged();
        }
        if (!other.getTopic().isEmpty()) {
          topic_ = other.topic_;
          onChanged();
        }
        if (other.getPartitions() != 0) {
          setPartitions(other.getPartitions());
        }
        if (other.getReplicationFactor() != 0) {
          setReplicationFactor(other.getReplicationFactor());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        feast.proto.core.SourceProto.KafkaSourceConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (feast.proto.core.SourceProto.KafkaSourceConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object bootstrapServers_ = "";
      /**
       * <pre>
       * Comma separated list of Kafka bootstrap servers. Used for feature sets without a defined source host[:port]]
       * </pre>
       *
       * <code>string bootstrap_servers = 1;</code>
       * @return The bootstrapServers.
       */
      public java.lang.String getBootstrapServers() {
        java.lang.Object ref = bootstrapServers_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          bootstrapServers_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Comma separated list of Kafka bootstrap servers. Used for feature sets without a defined source host[:port]]
       * </pre>
       *
       * <code>string bootstrap_servers = 1;</code>
       * @return The bytes for bootstrapServers.
       */
      public com.google.protobuf.ByteString
          getBootstrapServersBytes() {
        java.lang.Object ref = bootstrapServers_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bootstrapServers_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Comma separated list of Kafka bootstrap servers. Used for feature sets without a defined source host[:port]]
       * </pre>
       *
       * <code>string bootstrap_servers = 1;</code>
       * @param value The bootstrapServers to set.
       * @return This builder for chaining.
       */
      public Builder setBootstrapServers(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        bootstrapServers_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Comma separated list of Kafka bootstrap servers. Used for feature sets without a defined source host[:port]]
       * </pre>
       *
       * <code>string bootstrap_servers = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBootstrapServers() {
        
        bootstrapServers_ = getDefaultInstance().getBootstrapServers();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Comma separated list of Kafka bootstrap servers. Used for feature sets without a defined source host[:port]]
       * </pre>
       *
       * <code>string bootstrap_servers = 1;</code>
       * @param value The bytes for bootstrapServers to set.
       * @return This builder for chaining.
       */
      public Builder setBootstrapServersBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        bootstrapServers_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object topic_ = "";
      /**
       * <pre>
       * Kafka topic to use for feature sets without user defined topics
       * </pre>
       *
       * <code>string topic = 2;</code>
       * @return The topic.
       */
      public java.lang.String getTopic() {
        java.lang.Object ref = topic_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          topic_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Kafka topic to use for feature sets without user defined topics
       * </pre>
       *
       * <code>string topic = 2;</code>
       * @return The bytes for topic.
       */
      public com.google.protobuf.ByteString
          getTopicBytes() {
        java.lang.Object ref = topic_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          topic_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Kafka topic to use for feature sets without user defined topics
       * </pre>
       *
       * <code>string topic = 2;</code>
       * @param value The topic to set.
       * @return This builder for chaining.
       */
      public Builder setTopic(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        topic_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Kafka topic to use for feature sets without user defined topics
       * </pre>
       *
       * <code>string topic = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTopic() {
        
        topic_ = getDefaultInstance().getTopic();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Kafka topic to use for feature sets without user defined topics
       * </pre>
       *
       * <code>string topic = 2;</code>
       * @param value The bytes for topic to set.
       * @return This builder for chaining.
       */
      public Builder setTopicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        topic_ = value;
        onChanged();
        return this;
      }

      private int partitions_ ;
      /**
       * <pre>
       * Number of Kafka partitions to to use for managed feature stream.
       * </pre>
       *
       * <code>int32 partitions = 3;</code>
       * @return The partitions.
       */
      @java.lang.Override
      public int getPartitions() {
        return partitions_;
      }
      /**
       * <pre>
       * Number of Kafka partitions to to use for managed feature stream.
       * </pre>
       *
       * <code>int32 partitions = 3;</code>
       * @param value The partitions to set.
       * @return This builder for chaining.
       */
      public Builder setPartitions(int value) {
        
        partitions_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of Kafka partitions to to use for managed feature stream.
       * </pre>
       *
       * <code>int32 partitions = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPartitions() {
        
        partitions_ = 0;
        onChanged();
        return this;
      }

      private int replicationFactor_ ;
      /**
       * <pre>
       * Defines the number of copies of managed feature stream Kafka.
       * </pre>
       *
       * <code>int32 replicationFactor = 4;</code>
       * @return The replicationFactor.
       */
      @java.lang.Override
      public int getReplicationFactor() {
        return replicationFactor_;
      }
      /**
       * <pre>
       * Defines the number of copies of managed feature stream Kafka.
       * </pre>
       *
       * <code>int32 replicationFactor = 4;</code>
       * @param value The replicationFactor to set.
       * @return This builder for chaining.
       */
      public Builder setReplicationFactor(int value) {
        
        replicationFactor_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Defines the number of copies of managed feature stream Kafka.
       * </pre>
       *
       * <code>int32 replicationFactor = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearReplicationFactor() {
        
        replicationFactor_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:feast.core.KafkaSourceConfig)
    }

    // @@protoc_insertion_point(class_scope:feast.core.KafkaSourceConfig)
    private static final feast.proto.core.SourceProto.KafkaSourceConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new feast.proto.core.SourceProto.KafkaSourceConfig();
    }

    public static feast.proto.core.SourceProto.KafkaSourceConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KafkaSourceConfig>
        PARSER = new com.google.protobuf.AbstractParser<KafkaSourceConfig>() {
      @java.lang.Override
      public KafkaSourceConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KafkaSourceConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KafkaSourceConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KafkaSourceConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public feast.proto.core.SourceProto.KafkaSourceConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_feast_core_Source_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_feast_core_Source_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_feast_core_KafkaSourceConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_feast_core_KafkaSourceConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027feast/core/Source.proto\022\nfeast.core\"}\n" +
      "\006Source\022$\n\004type\030\001 \001(\0162\026.feast.core.Sourc" +
      "eType\022<\n\023kafka_source_config\030\002 \001(\0132\035.fea" +
      "st.core.KafkaSourceConfigH\000B\017\n\rsource_co" +
      "nfig\"l\n\021KafkaSourceConfig\022\031\n\021bootstrap_s" +
      "ervers\030\001 \001(\t\022\r\n\005topic\030\002 \001(\t\022\022\n\npartition" +
      "s\030\003 \001(\005\022\031\n\021replicationFactor\030\004 \001(\005*$\n\nSo" +
      "urceType\022\013\n\007INVALID\020\000\022\t\n\005KAFKA\020\001BT\n\020feas" +
      "t.proto.coreB\013SourceProtoZ3github.com/fe" +
      "ast-dev/feast/sdk/go/protos/feast/coreb\006" +
      "proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_feast_core_Source_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_feast_core_Source_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_feast_core_Source_descriptor,
        new java.lang.String[] { "Type", "KafkaSourceConfig", "SourceConfig", });
    internal_static_feast_core_KafkaSourceConfig_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_feast_core_KafkaSourceConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_feast_core_KafkaSourceConfig_descriptor,
        new java.lang.String[] { "BootstrapServers", "Topic", "Partitions", "ReplicationFactor", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
